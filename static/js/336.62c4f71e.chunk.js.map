{"version":3,"file":"static/js/336.62c4f71e.chunk.js","mappings":";yGA4BA,IAAe,IAA0B,mGC0TzC,IAAe,IAA0B,iLCrVzC,GAAgB,IAAM,oBAAoB,IAAM,wDCwBhD,EAhBgC,SAAH,GAIT,IAHlBA,EAAQ,EAARA,SACAC,EAAQ,EAARA,SACGC,GAAI,YAGP,OACE,mCACEC,UAAWC,IAAGC,EAAAA,IAAYL,GAAYK,EAAAA,MAClCH,GAAI,cAER,iBAAMC,UAAWE,EAAAA,QAAe,SAAEJ,MAGxC,6LCrBA,IAAIK,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACf,EAqBO,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACT,CACF,CAYmBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACT,EACAyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEX,EACAE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC3B,EACAM,MAAO,WACLN,OAAQO,CACV,EAEJ,CAwF8BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC3B,IAEA,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACf,CAGA,OAAOxB,CACT,CAwBA,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGd,EAaET,WAXF,WACE,OAAOI,CACT,EAUEH,MARF,WACEG,EAAU,EACZ,EAQF,CAmCiEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IAAIkB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQW,MAAK,SAAUpB,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EAC1C,IAEIgB,IACFhB,EAAQgB,EAAchB,MAE1B,CAEAL,EAAMM,IAAIa,UAAWd,EACvB,CAEA,OAAOA,CACT,CAMA,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACf,EAEOU,CACT,CC/IA,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CAChB,IAAI,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIG,MAAQ,WAAa,YAAcH,CAC3F,IAAGI,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGJ,EAAkB,IACxI,CAEA,OAAOL,CACT,CAEO,SAASU,EAAsBC,GACpC,IAAK,IAAIC,EAAOnB,UAAUtB,OAAQ0C,EAAyB,IAAIZ,MAAMW,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKrB,UAAUqB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQvB,UAAUtB,OAAQ4B,EAAQ,IAAIE,MAAMe,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFlB,EAAMkB,GAASxB,UAAUwB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBtC,GAGduC,EAAavB,EAAMT,MAQvB,GAN0B,kBAAfgC,IACTF,EAAwBE,EAExBA,EAAavB,EAAMT,OAGK,oBAAfgC,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBxB,MAAMC,QAAQmB,GAAkBA,EAAiB,CAACA,GACxErB,EAAeF,EAAgBC,GAC/B2B,EAAqBf,EAAQjB,WAAM,EAAQ,CAAC,WAG9C,OAFAyB,IAEOG,EAAW5B,MAAM,KAAMD,UAChC,GAAGkC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACT1D,EAAS6B,EAAa7B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1ByD,EAAOC,KAAK9B,EAAa5B,GAAGsB,MAAM,KAAMD,YAK1C,OADAyB,EAAcQ,EAAmBhC,MAAM,KAAMmC,EAE/C,IAeA,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpB1B,aAAcA,EACdiC,WAAY,WACV,OAAOf,CACT,EACAgB,eAAgB,WACd,OAAOf,CACT,EACAgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC3B,IAEKS,CACT,EAGA,OAAOb,CACT,CACO,IAAIA,EAAgCL,EAAsBnD,GC7FpD6E,EAAcrB,GAPK,SAACsB,GAAgB,OAAKA,EAAMC,KAAKC,QAAS,IAOd,SAAAF,GAAK,OAAIA,CAAK,IAC7DG,EAAUzB,GAPK,SAACsB,GAAgB,OAAKA,EAAMC,KAAK/B,IAAK,IAOd,SAAA8B,GAAK,OAAIA,CAAK,IACrDI,EAAgB1B,GAPK,SAACsB,GAAgB,OAAKA,EAAMC,KAAKI,UAAW,IAOd,SAAAL,GAAK,OAAIA,CAAK,IACjEM,EAAc5B,GAPK,SAACsB,GAAgB,OAAKA,EAAMC,KAAKM,QAAS,IAOd,SAAAP,GAAK,OAAIA,CAAK,IAC7DQ,EAAa9B,GAPK,SAACsB,GAAgB,OAAKA,EAAMC,KAAKQ,OAAQ,IAOd,SAAAT,GAAK,OAAIA,CAAK,IAC3DU,EAAsBhC,GAPK,SAACsB,GAAgB,OAAKA,EAAMC,KAAKU,gBAAiB,IAOd,SAAAX,GAAK,OAAIA,CAAK,4GCV7EY,EAAiB,WAAH,OAASC,EAAAA,EAAAA,KAA2B,EAClDC,EAAkDC,EAAAA,uBCN/D,OAOC,WACA,aAEA,IAAIC,EAAS,CAAC,EAAEC,eAGhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELpF,EAAI,EAAGA,EAAIqB,UAAUtB,OAAQC,IAAK,CAC1C,IAAIqF,EAAMhE,UAAUrB,GACpB,GAAKqF,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BF,EAAQ1B,KAAK2B,QACP,GAAIxD,MAAMC,QAAQuD,IACxB,GAAIA,EAAItF,OAAQ,CACf,IAAIwF,EAAQJ,EAAW7D,MAAM,KAAM+D,GAC/BE,GACHH,EAAQ1B,KAAK6B,EAEf,OACM,GAAgB,WAAZD,EAAsB,CAChC,GAAID,EAAIG,WAAa7B,OAAO8B,UAAUD,WAAaH,EAAIG,SAASA,WAAWE,SAAS,iBAAkB,CACrGN,EAAQ1B,KAAK2B,EAAIG,YACjB,QACD,CAEA,IAAK,IAAIlF,KAAO+E,EACXJ,EAAOU,KAAKN,EAAK/E,IAAQ+E,EAAI/E,IAChC8E,EAAQ1B,KAAKpD,EAGhB,CAxBkB,CAyBnB,CAEA,OAAO8E,EAAQhD,KAAK,IACrB,CAEqCwD,EAAOC,SAC3CV,EAAWW,QAAUX,EACrBS,EAAOC,QAAUV,QAKhB,KAFwB,EAAF,WACtB,OAAOA,CACP,UAFoB,OAEpB,YAIF,CApDA,qCCPc,SAASY,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIjG,UAAQkG,EAAMD,EAAIjG,QAC/C,IAAK,IAAIC,EAAI,EAAGkG,EAAO,IAAIrE,MAAMoE,GAAMjG,EAAIiG,EAAKjG,IAAKkG,EAAKlG,GAAKgG,EAAIhG,GACnE,OAAOkG,CACT,gHCAe,SAASC,EAAeH,EAAKhG,GAC1C,OCLa,SAAyBgG,GACtC,GAAInE,MAAMC,QAAQkE,GAAM,OAAOA,CACjC,CDGS,CAAeA,IELT,SAA+BA,EAAKhG,GACjD,IAAIoG,EAAK,MAAQJ,EAAM,KAAO,oBAAsBK,QAAUL,EAAIK,OAAOC,WAAaN,EAAI,cAC1F,GAAI,MAAQI,EAAI,CACd,IAAIG,EACFC,EACAC,EACAC,EACAC,EAAO,GACPC,GAAK,EACLC,GAAK,EACP,IACE,GAAIJ,GAAML,EAAKA,EAAGT,KAAKK,IAAMlG,KAAM,IAAME,EAAG,CAC1C,GAAI2D,OAAOyC,KAAQA,EAAI,OACvBQ,GAAK,CACP,MAAO,OAASA,GAAML,EAAKE,EAAGd,KAAKS,IAAKU,QAAUH,EAAKjD,KAAK6C,EAAGhG,OAAQoG,EAAK5G,SAAWC,GAAI4G,GAAK,GASlG,CARE,MAAOG,GACPF,GAAK,EAAIL,EAAKO,CAChB,CAAE,QACA,IACE,IAAKH,GAAM,MAAQR,EAAW,SAAMM,EAAKN,EAAW,SAAKzC,OAAO+C,KAAQA,GAAK,MAG/E,CAFE,QACA,GAAIG,EAAI,MAAML,CAChB,CACF,CACA,OAAOG,CACT,CACF,CFrBgC,CAAqBX,EAAKhG,KAAM,EAAAgH,EAAA,GAA2BhB,EAAKhG,IGLjF,WACb,MAAM,IAAIiH,UAAU,4IACtB,CHGsG,EACtG,iFILe,SAASC,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,OAAiBA,EAAGC,GACtD,IAAIC,EAAI1D,OAAO8B,UAAUD,SAASG,KAAKwB,GAAGG,MAAM,GAAI,GAEpD,MADU,WAAND,GAAkBF,EAAEI,cAAaF,EAAIF,EAAEI,YAAYpF,MAC7C,QAANkF,GAAqB,QAANA,EAAoBxF,MAAM2F,KAAKL,GACxC,cAANE,GAAqB,2CAA2CI,KAAKJ,IAAW,OAAiBF,EAAGC,QAAxG,CALc,CAMhB","sources":["app/common/assets/close.svg","app/common/assets/logo.svg","webpack://main/./src/app/common/components/button/button.module.scss?b1f2","app/common/components/button/index.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","app/store/game/selectors.ts","app/store/hooks.ts","../node_modules/classnames/index.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgClose(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M6.72788 8.14213L0.363915 14.5061L1.77813 15.9203L8.14209 9.55635L14.5061 15.9203L15.9203 14.5061L9.5563 8.14213L15.9203 1.77817L14.5061 0.363961L8.14209 6.72792L1.77813 0.36396L0.363917 1.77817L6.72788 8.14213Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClose);\nexport default __webpack_public_path__ + \"static/media/close.73d1f9317a9852f6deca18148d57d8ab.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _path76, _path77, _path78, _path79, _path80, _path81, _path82, _path83, _path84, _path85, _path86, _path87, _path88, _path89, _path90, _path91, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 251,\n    height: 117,\n    viewBox: \"0 0 251 117\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    }\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.6944 61.8054C39.6649 62.0258 39.5709 62.2326 39.4243 62.3997C39.2712 62.5802 39.0618 62.704 38.8299 62.751L38.1545 62.8523L36.3241 63.1427C35.5406 63.2643 34.622 63.4219 33.5684 63.6155C32.5147 63.8091 31.3687 64.0343 30.1305 64.2909C29.7477 65.5517 29.3087 66.799 28.8134 68.0328C28.3181 69.2665 27.7687 70.4733 27.1654 71.653C25.4879 75.09 23.1703 78.1755 20.3369 80.7442C17.4363 83.3593 13.9053 85.1749 10.0907 86.0125C9.40197 86.1727 8.69728 86.2543 7.99015 86.2556C7.25238 86.2709 6.51663 86.1729 5.80854 85.9652C4.57292 85.6492 3.47463 84.9376 2.68134 83.9389C1.97956 83.0079 1.58318 81.8825 1.54663 80.7172C1.49195 79.2736 1.81807 77.841 2.49222 76.5633C3.78002 73.8617 6.50873 71.4054 10.6783 69.1945C12.4017 68.3005 14.1741 67.5045 15.9871 66.8102C17.9639 66.0448 20.1455 65.3176 22.532 64.6286C23.1894 62.6519 23.732 60.7247 24.1597 58.847C24.5875 56.9694 24.9365 55.247 25.2066 53.6801C24.6303 54.5581 24.0404 55.4024 23.437 56.2129C22.8337 57.0234 22.2258 57.7754 21.6134 58.4688C20.0073 60.4549 18.1962 62.2661 16.21 63.8722C14.8247 64.9957 13.3045 65.9418 11.6847 66.6887C10.383 67.2978 8.96782 67.6269 7.53086 67.6545C7.40037 67.6613 7.26961 67.6613 7.13912 67.6545C7.00865 67.6467 6.87784 67.6467 6.74737 67.6545C5.71703 67.571 4.72175 67.2416 3.84502 66.694C2.9683 66.1463 2.23571 65.3964 1.70873 64.5071C1.37414 63.8624 1.1114 63.1829 0.925242 62.4808C0.726835 61.7283 0.615784 60.9555 0.594285 60.1776C0.589786 58.3129 0.909754 56.4617 1.53988 54.7067C2.04496 53.2641 2.62896 51.8503 3.28922 50.4718C3.93347 49.1276 4.65513 47.8218 5.45057 46.5611C6.82614 44.363 8.44126 42.3243 10.2663 40.4823C11.0885 39.6638 11.9763 38.9138 12.9207 38.2399C13.8646 37.5569 14.879 36.9773 15.9466 36.5108C16.9553 36.0675 18.0219 35.7696 19.1143 35.626C20.1654 35.4884 21.2339 35.5876 22.2415 35.9165C23.4333 36.2898 24.538 36.8984 25.4903 37.7063C26.3326 38.4265 27.0217 39.3084 27.5166 40.3C27.9739 41.2135 28.2055 42.2233 28.192 43.2448C28.1756 44.2683 27.8687 45.2662 27.3072 46.1221C27.2171 46.2497 27.1004 46.3562 26.9651 46.4343C26.8298 46.5124 26.6793 46.5603 26.5237 46.5746C26.1335 46.6241 25.7387 46.6241 25.3485 46.5746C24.9016 46.5286 24.4604 46.4381 24.0314 46.3045C23.622 46.1842 23.2223 46.0329 22.8359 45.8519C22.5519 45.7295 22.2931 45.5555 22.0727 45.3386C21.9061 45.163 21.8926 45.0054 22.0322 44.8658C22.6668 44.2577 23.1523 43.511 23.4505 42.6842C23.7008 41.9998 23.7999 41.2694 23.741 40.5431C23.6975 39.9401 23.5099 39.3564 23.1939 38.841C22.9082 38.386 22.4914 38.0281 21.9984 37.8144C21.6449 37.6785 21.2676 37.6156 20.8892 37.6295C20.5107 37.6434 20.139 37.7339 19.7965 37.8954C18.8947 38.3051 18.0717 38.8697 17.365 39.5637C16.4397 40.4479 15.6006 41.4181 14.8592 42.4613C13.9866 43.6685 13.1838 44.9245 12.4547 46.2234C11.6847 47.5742 10.9575 49.0084 10.2731 50.5258C9.58865 52.0433 8.98527 53.5382 8.46295 55.0106C7.7927 56.7807 7.445 58.6564 7.43631 60.5491C7.37773 61.7661 7.75624 62.9639 8.50347 63.9262C8.85478 64.2866 9.29223 64.5515 9.77445 64.6957C10.2567 64.8398 10.7677 64.8586 11.2592 64.7502C12.764 64.4409 14.1614 63.7423 15.3117 62.7239C17.2899 61.127 19.0841 59.3147 20.6611 57.3206C22.5641 54.9609 24.3105 52.4791 25.8888 49.8909C26.0799 49.6406 26.3481 49.4601 26.652 49.3776C27.1071 49.2105 27.5745 49.0795 28.0502 48.9859C28.6003 48.8526 29.1572 48.7489 29.7185 48.6752C30.2596 48.6201 30.805 48.6201 31.3462 48.6752C31.7628 48.707 32.1713 48.8074 32.5552 48.9724C32.69 49.024 32.8047 49.1174 32.8824 49.239C32.9602 49.3605 32.9971 49.5038 32.9875 49.6478C32.8209 51.4489 32.5597 53.4594 32.204 55.6793C31.8196 58.0072 31.2963 60.3099 30.637 62.5754C31.8168 62.3277 32.8997 62.1161 33.8858 61.9405L36.4592 61.4879L38.8231 61.0962C38.926 61.0661 39.0346 61.0609 39.1399 61.0811C39.2452 61.1012 39.3441 61.1462 39.4286 61.2122C39.5131 61.2782 39.5807 61.3633 39.6257 61.4606C39.6707 61.5579 39.692 61.6645 39.6877 61.7716M4.05244 82.8245C4.23502 83.0285 4.46058 83.1894 4.71286 83.2957C4.96514 83.402 5.23786 83.451 5.51135 83.4391C6.30783 83.4467 7.09996 83.3211 7.85507 83.0676C8.85273 82.7462 9.81286 82.3182 10.7189 81.7911C11.7811 81.1815 12.7869 80.4785 13.7245 79.6905C14.8047 78.7732 15.7788 77.7378 16.6288 76.6039C17.502 75.4506 18.2984 74.2413 19.013 72.9836C19.674 71.8268 20.2649 70.6315 20.7826 69.4039C21.1957 68.4393 21.5454 67.4488 21.8295 66.4388C17.6773 67.591 13.6775 69.2349 9.9151 71.3356C6.91173 73.1367 4.93049 75.0436 3.97139 77.0564C3.46046 78.0498 3.18542 79.1477 3.16764 80.2646C3.16027 81.1942 3.47266 82.0979 4.05244 82.8245Z\",\n    fill: \"#DADBDC\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.8666 55.8549C48.4569 56.6654 47.9706 57.53 47.4077 58.4486C46.8449 59.3671 46.2347 60.2925 45.5773 61.2245C44.9552 62.1166 44.2785 62.9692 43.5511 63.7776C42.9175 64.4858 42.2061 65.1203 41.4302 65.6688C40.8454 66.1156 40.139 66.3746 39.404 66.4118C38.9083 66.4507 38.4128 66.3351 37.9856 66.0808C37.5779 65.822 37.2449 65.4611 37.0197 65.0339C36.7544 64.52 36.5872 63.9611 36.5267 63.3859C36.4442 62.6949 36.4442 61.9966 36.5267 61.3056C36.6476 60.3299 36.8555 59.3669 37.1481 58.4283C37.4633 57.4152 37.8257 56.3998 38.2355 55.3821C38.6452 54.3645 39.064 53.3829 39.4918 52.4373C39.915 51.4917 40.2843 50.6339 40.5995 49.864C40.8731 49.2381 41.0989 48.5923 41.2749 47.9322C41.3965 47.4099 41.3627 47.0542 41.1736 46.8651C40.9844 46.703 41.0723 46.5071 41.4437 46.291C41.8579 46.061 42.3211 45.9336 42.7946 45.9195C43.386 45.9018 43.9727 46.0294 44.5034 46.291C44.8199 46.458 45.0962 46.692 45.3131 46.9766C45.5301 47.2612 45.6824 47.5896 45.7597 47.939C46.0034 48.8982 45.9611 49.9078 45.6381 50.8433C45.2857 52.0647 44.8339 53.2551 44.2873 54.4028C43.6974 55.6366 43.067 56.8568 42.3961 58.0636C41.7252 59.2703 41.1623 60.3465 40.7075 61.2921C40.3077 61.9956 40.0184 62.7565 39.8497 63.548C39.7822 64.1108 40.0636 64.3652 40.694 64.3112C41.1053 64.2016 41.4715 63.9653 41.7409 63.6358C42.2447 63.1353 42.7183 62.6052 43.1593 62.0486C43.6816 61.4047 44.2175 60.6842 44.7668 59.8872C45.3162 59.0902 45.8385 58.2955 46.3338 57.503C46.8291 56.706 47.2681 55.9517 47.6509 55.2403C47.9689 54.6716 48.2443 54.0801 48.4749 53.4707C48.5046 53.3736 48.5578 53.2852 48.6296 53.2134C48.7014 53.1416 48.7898 53.0885 48.8869 53.0587C49.0606 53.0042 49.2468 53.0042 49.4205 53.0587C49.5895 53.1132 49.7302 53.2321 49.8122 53.3897C49.8619 53.4698 49.8882 53.5622 49.8882 53.6564C49.8882 53.7507 49.8619 53.8431 49.8122 53.9232C49.5916 54.3735 49.2764 55.0107 48.8666 55.8347M47.0768 43.0017C47.2253 42.673 47.3897 42.3443 47.5698 42.0156C47.7499 41.6868 47.9143 41.3717 48.0629 41.07C48.185 40.863 48.2632 40.6331 48.2925 40.3945C48.316 39.7718 48.0927 39.1649 47.6711 38.706C47.2929 38.2885 46.8331 37.9529 46.3203 37.7199C45.8966 37.5204 45.4373 37.4079 44.9694 37.3889C44.5574 37.3889 44.3481 37.4835 44.3481 37.6793C44.3183 37.9198 44.2352 38.1505 44.1049 38.3548C43.9383 38.6565 43.7537 38.9852 43.5511 39.3409C43.3484 39.6966 43.1638 40.0321 42.9972 40.3473C42.857 40.5794 42.7715 40.8404 42.7473 41.1105C42.7397 41.426 42.7956 41.7399 42.9117 42.0334C43.0277 42.327 43.2015 42.5942 43.4227 42.8193C43.8212 43.2438 44.3044 43.5797 44.8411 43.8054C45.2895 43.9993 45.7711 44.1048 46.2595 44.1161C46.6985 44.1161 46.9349 44.008 46.9349 43.7852C46.9575 43.5111 47.0356 43.2445 47.1646 43.0017\",\n    fill: \"#DADBDC\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.9102 49.1682C58.9099 48.9499 58.9733 48.7363 59.0926 48.5535C59.2176 48.3607 59.378 48.1934 59.5654 48.0605C59.5245 47.9144 59.4357 47.7863 59.3132 47.6968C59.1906 47.6074 59.0416 47.5618 58.89 47.5674C58.4152 47.5728 57.9598 47.756 57.6134 48.0807C57.0605 48.5431 56.564 49.0691 56.1343 49.6477C55.5179 50.4719 54.9604 51.3386 54.466 52.2413C53.8896 53.268 53.3132 54.4139 52.7369 55.6792C52.3679 56.5097 52.0718 57.3707 51.8521 58.2526C51.6266 59.1139 51.4953 59.9971 51.4603 60.8867C51.4205 61.629 51.5027 62.3729 51.7035 63.0886C51.7644 63.3612 51.8893 63.6155 52.0678 63.8304C52.2463 64.0453 52.4733 64.2147 52.7301 64.3246C52.9272 64.4058 53.1412 64.4372 53.3532 64.416C53.5653 64.3948 53.7688 64.3216 53.9459 64.203C54.4368 63.8971 54.8691 63.506 55.2224 63.0481C55.7032 62.4478 56.1432 61.816 56.5395 61.1569C56.9898 60.4139 57.4288 59.6394 57.8566 58.8334C58.2843 58.0274 58.6964 57.2169 59.0926 56.4019C59.4888 55.5914 59.8671 54.8439 60.2273 54.1595C60.61 53.259 60.9883 52.4012 61.362 51.5862C61.7358 50.7712 62.0442 50.0439 62.2873 49.4045C62.5011 48.8712 62.6661 48.3196 62.7804 47.7565C62.8615 47.3062 62.8209 46.9978 62.6588 46.8312C62.463 46.6691 62.5575 46.4732 62.929 46.2571C63.3432 46.0274 63.8064 45.9 64.2798 45.8856C64.8713 45.8674 65.4581 45.995 65.9887 46.2571C66.3051 46.4241 66.5814 46.6581 66.7984 46.9427C67.0153 47.2273 67.1677 47.5557 67.2449 47.9051C67.4869 48.8623 67.4446 49.8692 67.1234 50.8027C66.7706 52.0239 66.3188 53.2144 65.7725 54.3621C65.1827 55.5959 64.5523 56.8162 63.8813 58.0229C63.2104 59.2297 62.6476 60.3059 62.1928 61.2514C61.8182 61.9615 61.554 62.7245 61.4093 63.5141C61.3418 64.077 61.6232 64.3314 62.2536 64.2773C62.6533 64.1549 63.0095 63.9205 63.2802 63.6019C63.795 63.1058 64.2756 62.5755 64.7189 62.0147C65.2412 61.3708 65.7838 60.6503 66.3466 59.8533C66.9095 59.0563 67.4318 58.2616 67.9136 57.4691C68.3954 56.6721 68.8277 55.9179 69.2104 55.2064C69.5286 54.6378 69.8041 54.0463 70.0344 53.4368C70.0642 53.3397 70.1173 53.2514 70.1891 53.1795C70.261 53.1077 70.3493 53.0546 70.4464 53.0248C70.6201 52.9703 70.8063 52.9703 70.98 53.0248C71.1473 53.0824 71.287 53.2004 71.3718 53.3558C71.4214 53.4359 71.4477 53.5283 71.4477 53.6226C71.4477 53.7168 71.4214 53.8092 71.3718 53.8893C71.1511 54.3396 70.8359 54.9768 70.4262 55.8008C70.0164 56.6248 69.5166 57.5006 68.9267 58.4282C68.3639 59.3287 67.7538 60.2541 67.0963 61.2042C66.4741 62.0961 65.7974 62.9488 65.0701 63.7573C64.4366 64.4655 63.7252 65.0999 62.9493 65.6484C62.3643 66.0948 61.6579 66.3538 60.923 66.3914C60.4495 66.4376 59.973 66.3406 59.5551 66.113C59.1373 65.8854 58.7974 65.5377 58.5793 65.1149C58.0294 64.0511 57.8286 62.8411 58.0052 61.6567C57.5104 62.4685 56.9597 63.2448 56.3571 63.9801C55.8307 64.6365 55.1984 65.2004 54.4862 65.6484C53.8369 66.0527 53.1053 66.3066 52.3451 66.3914C51.4893 66.4571 50.631 66.3012 49.8528 65.9389C48.864 65.5897 48.028 64.9066 47.4889 64.0072C46.9957 63.162 46.6937 62.2191 46.6041 61.2447C46.5266 60.1956 46.6108 59.1409 46.854 58.1175C47.0804 57.1011 47.3829 56.1032 47.759 55.1321C48.3392 53.6206 49.0844 52.1777 49.9812 50.8297C50.6985 49.7417 51.5647 48.7595 52.5545 47.9119C53.372 47.2001 54.3128 46.6438 55.3305 46.2706C56.268 45.9457 57.2564 45.7924 58.2483 45.8181C58.6018 45.8493 58.952 45.9103 59.2952 46.0004C59.6628 46.0959 60.0104 46.256 60.3219 46.4732C60.6501 46.7071 60.9243 47.0089 61.1256 47.358C61.3537 47.771 61.468 48.2372 61.4566 48.7089C61.4843 48.9326 61.4617 49.1596 61.3904 49.3735C61.3192 49.5873 61.201 49.7826 61.0446 49.9449C60.9369 50.0668 60.8035 50.1634 60.654 50.2276C60.5045 50.2919 60.3426 50.3222 60.18 50.3164C59.8549 50.3161 59.5407 50.1986 59.2952 49.9854C59.1681 49.881 59.0666 49.7487 58.9987 49.5988C58.9307 49.4489 58.8982 49.2854 58.9035 49.1209\",\n    fill: \"#DADBDC\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M85.8598 50.9987C85.7909 52.0038 85.5841 52.9947 85.2451 53.9435C84.8894 54.9701 84.4842 55.9788 84.0294 56.9694C83.5746 57.96 83.1243 58.8988 82.6785 59.7859C82.2877 60.5408 81.9382 61.3165 81.6316 62.1093C81.4128 62.6092 81.3067 63.1511 81.3209 63.6966C81.3615 64.0951 81.6587 64.291 82.2057 64.291C82.6039 64.2109 82.9647 64.002 83.2324 63.6966C83.7511 63.2116 84.232 62.6878 84.671 62.1296C85.1934 61.4857 85.7359 60.7585 86.2988 59.948C86.8616 59.1375 87.3907 58.336 87.886 57.5435C88.3813 56.7465 88.8204 55.9855 89.2031 55.2606C89.5191 54.6839 89.7944 54.0858 90.0271 53.4707C90.0569 53.3736 90.11 53.2852 90.1818 53.2134C90.2537 53.1416 90.342 53.0885 90.4391 53.0587C90.6128 53.0042 90.799 53.0042 90.9727 53.0587C91.1417 53.1132 91.2825 53.2321 91.3645 53.3897C91.4141 53.4698 91.4404 53.5622 91.4404 53.6564C91.4404 53.7507 91.4141 53.8431 91.3645 53.9232C91.1438 54.3735 90.8286 55.0107 90.4189 55.8347C90.0091 56.6587 89.5116 57.5232 88.9262 58.4283C88.3633 59.3289 87.7532 60.2542 87.0958 61.2043C86.4742 62.0967 85.7974 62.9494 85.0695 63.7574C84.4361 64.4656 83.7246 65.1 82.9487 65.6486C82.3639 66.0953 81.6574 66.3544 80.9224 66.3915C80.4245 66.4331 79.9282 66.294 79.5243 65.9998C79.1209 65.688 78.7969 65.2853 78.5787 64.8245C78.3224 64.2983 78.1492 63.7355 78.0654 63.1563C77.9764 62.5358 77.9764 61.9058 78.0654 61.2853C78.2058 60.1504 78.4684 59.034 78.8489 57.9555C79.2316 56.8568 79.6504 55.8077 80.1052 54.808C80.56 53.8084 81.0102 52.8898 81.456 52.0523C81.8343 51.3486 82.1638 50.6196 82.4421 49.8707C82.6386 49.4253 82.7176 48.937 82.6718 48.4523C82.6042 48.1214 82.28 47.9728 81.7059 47.9998C81.2027 48.1169 80.7419 48.3718 80.3754 48.736C79.7404 49.2713 79.1424 49.849 78.5855 50.4651C77.9416 51.163 77.2909 51.9308 76.6335 52.7683C75.9761 53.6058 75.3862 54.4073 74.8639 55.1728C74.3416 56.2444 73.799 57.3071 73.2361 58.3608C72.6733 59.4144 72.1735 60.4095 71.7367 61.3461C71.3511 62.1438 71.0281 62.9703 70.7709 63.8182C70.5695 64.3491 70.5695 64.9353 70.7709 65.4662C70.8789 65.6868 70.7911 65.912 70.5074 66.1416C70.1876 66.3859 69.7954 66.5166 69.393 66.5131C68.8941 66.5126 68.407 66.362 67.9949 66.0808C67.4404 65.6677 67.0542 65.0679 66.9074 64.3923C66.6619 63.5493 66.6479 62.6557 66.8669 61.8054C67.1457 60.6362 67.5045 59.4875 67.9408 58.3675C68.3911 57.1473 68.9112 55.9 69.5011 54.6257C70.0909 53.3514 70.6133 52.1784 71.068 51.1067C71.4698 50.2115 71.8128 49.2909 72.0947 48.351C72.3153 47.581 72.3153 47.088 72.0947 46.8718C71.874 46.6557 71.9641 46.4643 72.3649 46.2977C72.7938 46.0622 73.2737 45.9347 73.763 45.9262C74.3546 45.9058 74.942 46.0335 75.4718 46.2977C75.7839 46.4678 76.0559 46.7029 76.2691 46.9873C76.4824 47.2716 76.632 47.5985 76.7078 47.9458C76.8194 48.3269 76.8606 48.7251 76.8294 49.121C76.7996 49.5761 76.7318 50.028 76.6268 50.4718C77.1491 49.8685 77.6782 49.2921 78.214 48.7428C78.7185 48.2217 79.2627 47.7407 79.8418 47.3041C80.3433 46.9056 80.8842 46.5593 81.456 46.2707C81.9286 46.0353 82.4478 45.9084 82.9757 45.8992C83.4672 45.8683 83.9567 45.9848 84.3815 46.2339C84.8063 46.483 85.147 46.8533 85.36 47.2974C85.9086 48.4488 86.0811 49.7437 85.853 50.9987\",\n    fill: \"#DADBDC\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M105.859 50.9986C105.79 52.0038 105.583 52.9947 105.244 53.9435C104.889 54.9701 104.483 55.9787 104.029 56.9693C103.574 57.96 103.119 58.8965 102.664 59.7791C102.273 60.534 101.924 61.3096 101.617 62.1025C101.398 62.6022 101.292 63.1443 101.307 63.6898C101.347 64.086 101.642 64.2842 102.192 64.2842C102.59 64.2041 102.95 63.9952 103.218 63.6898C103.737 63.2048 104.218 62.681 104.657 62.1228C105.179 61.4789 105.722 60.7517 106.285 59.9412C106.847 59.1307 107.374 58.3292 107.865 57.5367C108.36 56.7397 108.811 55.9787 109.216 55.2538C109.532 54.6772 109.808 54.0791 110.04 53.4639C110.07 53.3668 110.123 53.2784 110.195 53.2066C110.266 53.1348 110.355 53.0817 110.452 53.0519C110.626 52.9974 110.812 52.9974 110.986 53.0519C111.155 53.1064 111.295 53.2253 111.377 53.3829C111.427 53.463 111.453 53.5554 111.453 53.6496C111.453 53.7439 111.427 53.8363 111.377 53.9164C111.157 54.3667 110.841 55.0039 110.432 55.8279C110.022 56.6519 109.52 57.5187 108.925 58.4283C108.363 59.3288 107.752 60.2541 107.095 61.2042C106.473 62.0965 105.797 62.9491 105.069 63.7573C104.435 64.4654 103.724 65.0998 102.948 65.6485C102.363 66.0953 101.657 66.3543 100.922 66.3915C100.424 66.433 99.9275 66.294 99.5236 65.9997C99.1202 65.688 98.7962 65.2853 98.578 64.8245C98.3214 64.2984 98.1482 63.7356 98.0647 63.1562C97.9757 62.5357 97.9757 61.9058 98.0647 61.2853C98.205 60.1503 98.4677 59.0339 98.8482 57.9555C99.2309 56.8568 99.6497 55.8076 100.104 54.808C100.559 53.8084 101.01 52.8898 101.455 52.0523C101.834 51.3485 102.163 50.6196 102.441 49.8707C102.638 49.4252 102.717 48.9369 102.671 48.4523C102.604 48.1213 102.279 47.9727 101.705 47.9997C101.223 48.1221 100.782 48.3717 100.429 48.7224C99.7937 49.2578 99.1957 49.8354 98.6388 50.4515C97.9949 51.1495 97.3442 51.9172 96.6868 52.7547C96.0294 53.5922 95.4396 54.3937 94.9172 55.1592C94.3949 56.2309 93.8523 57.2935 93.2895 58.3472C92.7266 59.4009 92.2268 60.396 91.79 61.3326C91.4044 62.1303 91.0815 62.9568 90.8242 63.8046C90.6222 64.3354 90.6222 64.9219 90.8242 65.4526C90.9323 65.6733 90.8422 65.8984 90.554 66.1281C90.2344 66.3728 89.8421 66.5036 89.4396 66.4995C88.9406 66.4994 88.4534 66.3488 88.0415 66.0673C87.487 65.6541 87.1008 65.0544 86.954 64.3787C86.7341 63.5263 86.7481 62.6303 86.9945 61.7851C87.2715 60.6161 87.628 59.4675 88.0617 58.3472C88.512 57.1269 89.0343 55.8797 89.6287 54.6054C90.2231 53.3311 90.7454 52.1581 91.1957 51.0864C91.5969 50.1909 91.9398 49.2704 92.2223 48.3307C92.4429 47.5607 92.4429 47.0677 92.2223 46.8515C92.0017 46.6354 92.0917 46.444 92.4925 46.2774C92.9215 46.0421 93.4013 45.9146 93.8906 45.9059C94.4823 45.8855 95.0697 46.0132 95.5994 46.2774C95.9115 46.4474 96.1835 46.6826 96.3967 46.967C96.61 47.2513 96.7596 47.5782 96.8354 47.9254C96.9467 48.3066 96.9879 48.7048 96.957 49.1007C96.9272 49.5558 96.8594 50.0077 96.7544 50.4515C97.2767 49.8482 97.8058 49.2718 98.3416 48.7224C98.8462 48.2016 99.3904 47.7206 99.9694 47.2838C100.431 46.8996 100.929 46.5604 101.455 46.2707C101.928 46.0352 102.447 45.9083 102.975 45.8992C103.47 45.8686 103.962 45.9875 104.389 46.2404C104.815 46.4934 105.156 46.8687 105.366 47.3176C105.915 48.4691 106.087 49.7639 105.859 51.0189\",\n    fill: \"#DADBDC\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.339 76.5295C104.317 76.2308 104.351 75.9306 104.44 75.6447C104.586 75.2271 104.834 74.853 105.163 74.5573C105.638 74.0912 106.171 73.6893 106.75 73.3618C107.367 73.0061 108.011 72.6638 108.682 72.3351C109.353 72.0064 110.01 71.671 110.654 71.3288C111.252 71.0163 111.812 70.6355 112.323 70.194C112.651 69.1809 113.084 68.0552 113.619 66.8169L115.328 62.8455C114.586 63.7791 113.743 64.6284 112.816 65.3783C112.126 65.984 111.259 66.3512 110.344 66.4252C109.848 66.4642 109.353 66.3485 108.925 66.0942C108.517 65.8357 108.184 65.4747 107.959 65.0473C107.694 64.5336 107.526 63.9746 107.466 63.3993C107.383 62.7084 107.383 62.0099 107.466 61.319C107.591 60.3428 107.804 59.3798 108.101 58.4417C108.416 57.4286 108.781 56.4132 109.195 55.3956C109.61 54.3779 110.028 53.3963 110.452 52.4507C110.875 51.5051 111.246 50.6473 111.566 49.8774C111.842 49.2453 112.068 48.5927 112.242 47.9254C112.363 47.3896 112.329 47.0406 112.14 46.8785C111.951 46.7164 112.039 46.5205 112.41 46.3044C112.825 46.0749 113.288 45.9476 113.761 45.9329C114.359 45.9003 114.955 46.0163 115.497 46.2706C115.814 46.4373 116.09 46.6711 116.307 46.9558C116.524 47.2405 116.677 47.5691 116.753 47.9186C116.996 48.8757 116.954 49.8828 116.632 50.8162C116.279 52.0376 115.828 53.228 115.281 54.3757C114.691 55.6094 114.061 56.8297 113.39 58.0365C112.719 59.2432 112.156 60.3194 111.701 61.265C111.327 61.9752 111.063 62.7381 110.918 63.5276C110.85 64.0905 111.132 64.3449 111.762 64.2909C112.091 64.2638 112.577 63.9149 113.221 63.244C113.953 62.4707 114.63 61.6469 115.247 60.7787C115.95 59.8061 116.643 58.7704 117.328 57.6717C117.928 56.7267 118.478 55.7505 118.976 54.7472C119.426 53.734 119.831 52.7749 120.191 51.8699C120.552 50.9648 120.853 50.1565 121.096 49.4451C121.296 48.8602 121.454 48.2622 121.569 47.6552C121.62 47.4969 121.639 47.33 121.626 47.1642C121.612 46.9984 121.565 46.837 121.488 46.6894C121.353 46.5273 121.477 46.3359 121.86 46.1153C122.303 45.8799 122.796 45.7526 123.298 45.7438C123.895 45.7211 124.486 45.8637 125.007 46.1558C125.316 46.3475 125.582 46.5994 125.791 46.8965C126 47.1936 126.147 47.5297 126.223 47.8849C126.342 48.6376 126.272 49.4081 126.02 50.1273C125.696 51.3059 125.31 52.467 124.865 53.6057C124.374 54.8935 123.812 56.2443 123.177 57.6582C122.542 59.0721 121.938 60.4027 121.367 61.65C120.79 62.8972 120.284 63.9869 119.847 64.919C119.534 65.5459 119.259 66.191 119.023 66.8507C120.163 66.0571 121.2 65.1246 122.11 64.0747C123.179 62.8834 124.183 61.6343 125.115 60.3329C126.047 59.0316 126.869 57.7618 127.58 56.5235C128.151 55.5757 128.645 54.5842 129.06 53.5584C129.085 53.4522 129.136 53.3536 129.207 53.2713C129.279 53.189 129.37 53.1252 129.472 53.0856C129.644 53.0249 129.833 53.0249 130.005 53.0856C130.174 53.1401 130.315 53.259 130.397 53.4166C130.441 53.4987 130.464 53.5903 130.464 53.6834C130.464 53.7764 130.441 53.868 130.397 53.9502C129.701 55.4723 128.912 56.9498 128.033 58.3742C127.087 59.9228 126.05 61.4137 124.926 62.8387C123.85 64.2134 122.666 65.5007 121.387 66.6886C120.303 67.719 119.086 68.5982 117.767 69.3025C117.6 69.7123 117.375 70.2413 117.091 70.8897C116.807 71.5381 116.526 72.1888 116.247 72.8417C115.959 73.4991 115.698 74.116 115.463 74.6924L114.95 75.9689C114.688 76.7181 114.242 77.3894 113.653 77.9209C113.061 78.4557 112.374 78.8749 111.627 79.1569C110.891 79.4439 110.113 79.6104 109.324 79.6499C108.574 79.6958 107.822 79.6113 107.102 79.4C106.432 79.2039 105.819 78.8521 105.312 78.3734C104.8 77.884 104.461 77.2416 104.346 76.543M111.776 72.0582C111.345 72.3997 110.875 72.6899 110.377 72.9228L108.817 73.6657C108.301 73.9103 107.801 74.1854 107.318 74.4897C106.862 74.7675 106.463 75.1297 106.143 75.5569C105.954 75.8185 105.874 76.1428 105.92 76.462C105.959 76.7858 106.087 77.0922 106.291 77.3468C106.5 77.6062 106.769 77.8104 107.075 77.9411C107.408 78.0783 107.779 78.0927 108.122 77.9817C108.583 77.8219 108.995 77.5449 109.317 77.1779C109.819 76.6041 110.211 75.9423 110.472 75.2259C110.634 74.8432 110.832 74.3929 111.066 73.8751C111.301 73.3573 111.541 72.7539 111.789 72.065\",\n    fill: \"#DADBDC\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M131.707 41.2658C131.626 41.1037 131.754 40.9551 132.099 40.8335C132.932 40.5675 133.834 40.618 134.632 40.9754C134.829 41.0629 135.001 41.1995 135.131 41.372C135.261 41.5446 135.345 41.7475 135.375 41.9615C135.541 42.974 135.462 44.0115 135.145 44.9874C134.863 45.8966 134.432 46.7526 133.869 47.5202C133.407 48.1712 132.801 48.7074 132.099 49.0872C131.83 49.247 131.526 49.3381 131.214 49.3522C130.902 49.3663 130.591 49.3031 130.309 49.1682C130.034 49.0331 130.055 48.7382 130.37 48.2834C130.746 47.7277 131.089 47.1504 131.396 46.5543C131.784 45.8034 132.062 45.0004 132.22 44.1701C132.382 43.1718 132.201 42.1481 131.707 41.2658Z\",\n    fill: \"#DADBDC\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M141.535 65.5405L141.494 65.581C140.938 65.8549 140.359 66.0808 139.765 66.2564C139.313 66.4054 138.842 66.4895 138.367 66.5063C137.444 66.5678 136.535 66.2646 135.834 65.662C135.251 65.117 134.842 64.4122 134.659 63.6358C134.468 62.8826 134.44 62.0973 134.578 61.3326C134.663 60.6796 134.935 60.065 135.361 59.563C135.776 59.0873 136.278 58.6953 136.84 58.408C137.183 58.2306 137.571 58.1578 137.955 58.1986C138.268 58.2311 138.563 58.361 138.799 58.5701C138.923 58.6683 139.023 58.7937 139.091 58.9366C139.159 59.0794 139.193 59.236 139.191 59.3941C139.193 59.5641 139.16 59.7327 139.092 59.8887C139.024 60.0447 138.925 60.1846 138.799 60.2992C138.565 60.5352 138.247 60.6688 137.914 60.6707C137.672 60.6658 137.437 60.5881 137.239 60.4478C137.026 60.306 136.866 60.0967 136.786 59.8534C136.422 60.2788 136.167 60.7865 136.043 61.3326C135.908 61.8712 135.88 62.4313 135.962 62.9806C136.031 63.4851 136.253 63.9564 136.597 64.3315C136.782 64.5208 137.002 64.671 137.246 64.7731C137.49 64.8753 137.751 64.9272 138.016 64.9258C138.349 64.8904 138.671 64.7845 138.961 64.6151C139.441 64.3554 139.867 64.0071 140.217 63.5885C140.69 63.0345 141.073 62.4101 141.352 61.7378C141.707 60.8672 141.908 59.9417 141.947 59.0024C141.997 57.745 141.879 56.4865 141.595 55.2606C141.208 53.5935 140.628 51.9774 139.866 50.4448C139.592 50.9671 139.283 51.5367 138.941 52.1536C138.599 52.7705 138.29 53.3536 138.016 53.903C137.961 53.9896 137.889 54.0639 137.804 54.1209C137.719 54.1779 137.623 54.2164 137.523 54.2339C137.342 54.2627 137.158 54.2417 136.989 54.1731C136.911 54.1438 136.841 54.0995 136.78 54.0427C136.72 53.9859 136.672 53.9178 136.638 53.8422C136.605 53.7582 136.593 53.6674 136.604 53.5779C136.614 53.4883 136.647 53.4028 136.698 53.3288C136.919 52.8786 137.124 52.4598 137.313 52.0726C137.502 51.7011 137.698 51.3499 137.887 51.0257C138.076 50.7015 138.259 50.3502 138.421 50.0193C138.583 49.6883 138.765 49.3439 138.954 48.9251C138.659 48.4818 138.431 47.9969 138.279 47.4865C138.111 46.9533 138.027 46.3974 138.029 45.8384C138.038 45.5253 138.086 45.2145 138.171 44.9131C138.276 44.5183 138.443 44.1423 138.664 43.7986C138.911 43.4151 139.241 43.0919 139.63 42.8531C140.118 42.5726 140.675 42.4367 141.237 42.4613C141.777 42.4146 142.313 42.5766 142.737 42.9138C143.053 43.2166 143.237 43.6314 143.25 44.0688C143.265 44.597 143.166 45.1223 142.96 45.6088C142.729 46.1928 142.439 46.7518 142.095 47.2771L141.974 47.527C142.943 48.6215 143.804 49.8067 144.547 51.0662C145.142 52.0829 145.63 53.158 146.006 54.2744C146.315 55.1913 146.502 56.1453 146.56 57.1112C146.604 57.942 146.527 58.7749 146.33 59.5833C147.193 58.5964 148.004 57.5662 148.762 56.4966C149.415 55.5784 150.007 54.6171 150.531 53.6193C150.563 53.5319 150.612 53.4521 150.676 53.3847C150.74 53.3173 150.817 53.2638 150.903 53.2275C151.006 53.197 151.115 53.1903 151.222 53.2078C151.328 53.2254 151.429 53.2667 151.517 53.3288C151.605 53.3739 151.683 53.4378 151.743 53.516C151.804 53.5942 151.847 53.6848 151.868 53.7814C151.911 53.9609 151.889 54.1495 151.808 54.315C151.16 55.6408 150.396 56.9066 149.525 58.0973C148.66 59.2771 147.708 60.4568 146.668 61.6365C145.952 62.4362 145.175 63.1791 144.344 63.8587C143.513 64.5312 142.592 65.0858 141.609 65.5067L141.535 65.5405Z\",\n    fill: \"#DADBDC\"\n  }))), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.0934 60.6031C39.064 60.8236 38.97 61.0304 38.8233 61.1975C38.6702 61.378 38.4609 61.5017 38.2289 61.5487L37.5535 61.65L35.7231 61.9405C34.9396 62.0621 34.021 62.2197 32.9674 62.4133C31.9137 62.6069 30.7678 62.832 29.5295 63.0887C29.1467 64.3495 28.7077 65.5968 28.2124 66.8305C27.7171 68.0643 27.1678 69.2711 26.5644 70.4508C24.8815 73.8995 22.5545 76.9945 19.7088 79.569C16.8064 82.1851 13.2729 84.0008 9.45595 84.8373C8.76722 84.9976 8.06252 85.0791 7.35539 85.0804C6.6211 85.0876 5.89 84.9828 5.18728 84.7697C3.93938 84.4605 2.82833 83.7483 2.02631 82.7435C1.3269 81.8023 0.937436 80.667 0.911866 79.4947C0.862762 78.039 1.20071 76.5963 1.89123 75.3138C3.17903 72.6121 5.90773 70.1558 10.0773 67.945C11.8007 67.051 13.5731 66.255 15.3862 65.5607C17.3629 64.7953 19.5445 64.0681 21.931 63.3791C22.5884 61.4024 23.131 59.4752 23.5588 57.5975C23.9865 55.7198 24.3355 53.9975 24.6057 52.4305C24.0293 53.3086 23.4394 54.1529 22.8361 54.9634C22.2327 55.7739 21.6293 56.5349 21.0259 57.2463C19.4199 59.2325 17.6087 61.0436 15.6225 62.6497C14.2373 63.7733 12.7171 64.7195 11.0972 65.4662C9.79548 66.0753 8.38034 66.4044 6.94338 66.432C6.81289 66.4388 6.68213 66.4388 6.55164 66.432C6.42117 66.4242 6.29036 66.4242 6.15989 66.432C5.13122 66.3432 4.13878 66.0093 3.26567 65.4581C2.39256 64.907 1.66418 64.1547 1.14151 63.2643C0.806617 62.6198 0.543865 61.9402 0.35802 61.238C0.152018 60.4932 0.0319126 59.7273 4.67853e-05 58.9551C-0.00445191 57.0904 0.315516 55.2392 0.945637 53.4842C1.453 52.0393 2.03925 50.6233 2.70173 49.2426C3.34599 47.8983 4.06765 46.5926 4.86308 45.3319C6.23866 43.1338 7.85378 41.0951 9.67884 39.2531C10.5011 38.4345 11.3888 37.6846 12.3332 37.0107C13.2772 36.3278 14.2916 35.7481 15.3591 35.2816C16.3679 34.8383 17.4344 34.5404 18.5269 34.3968C19.5671 34.2761 20.6211 34.3868 21.6135 34.721C22.8053 35.0943 23.91 35.7029 24.8623 36.5109C25.7049 37.2307 26.394 38.1128 26.8886 39.1045C27.3459 40.018 27.5775 41.0278 27.564 42.0493C27.5665 43.0639 27.2833 44.0587 26.7467 44.9199C26.6566 45.0474 26.5399 45.1539 26.4046 45.2321C26.2694 45.3102 26.1188 45.3581 25.9633 45.3724C25.5731 45.4219 25.1782 45.4219 24.788 45.3724C24.3297 45.3286 23.8771 45.2381 23.4372 45.1022C23.0446 44.9885 22.6608 44.8463 22.289 44.6767C22.005 44.5543 21.7462 44.3802 21.5257 44.1634C21.3636 43.9878 21.3501 43.8257 21.4852 43.6906C22.1197 43.0823 22.6051 42.3357 22.9036 41.509C23.1535 40.8245 23.2525 40.0942 23.194 39.3679C23.1403 38.7516 22.9362 38.1579 22.5997 37.6388C22.3143 37.1835 21.8974 36.8255 21.4042 36.6122C21.0507 36.4762 20.6734 36.4133 20.2949 36.4273C19.9165 36.4412 19.5448 36.5317 19.2023 36.6932C18.3005 37.103 17.4776 37.6676 16.7708 38.3615C15.8428 39.2475 15.0014 40.22 14.2582 41.2658C13.3856 42.473 12.5828 43.7291 11.8537 45.0279C11.0837 46.3788 10.3565 47.8129 9.67208 49.3304C8.98766 50.8478 8.38428 52.3427 7.86195 53.8152C7.19171 55.5852 6.84401 57.461 6.83531 59.3536C6.77674 60.5706 7.15525 61.7684 7.90248 62.7307C8.25379 63.0911 8.69124 63.356 9.17346 63.5002C9.65567 63.6444 10.1667 63.6631 10.6582 63.5547C12.163 63.2455 13.5604 62.5468 14.7107 61.5285C16.6886 59.9312 18.4827 58.1189 20.0601 56.1251C21.9629 53.7653 23.7093 51.2835 25.2878 48.6955C25.4789 48.4451 25.7471 48.2647 26.0511 48.1821C26.5061 48.015 26.9736 47.884 27.4492 47.7904C28.0138 47.6761 28.5843 47.5927 29.158 47.5405C29.6992 47.4854 30.2446 47.4854 30.7858 47.5405C31.1986 47.5781 31.6024 47.683 31.9813 47.8512C32.116 47.9028 32.2307 47.9963 32.3085 48.1178C32.3863 48.2393 32.4231 48.3826 32.4135 48.5266C32.2469 50.3277 31.9858 52.3382 31.63 54.5581C31.2453 56.8859 30.722 59.1887 30.0631 61.4542C31.2428 61.2065 32.3257 60.9949 33.3118 60.8193L35.8852 60.3667L38.2492 59.975C38.3521 59.9449 38.4606 59.9397 38.5659 59.9599C38.6712 59.9801 38.7702 60.025 38.8547 60.091C38.9391 60.157 39.0067 60.2422 39.0517 60.3394C39.0968 60.4367 39.118 60.5433 39.1137 60.6504M3.45821 81.629C3.64078 81.833 3.86634 81.9939 4.11862 82.1002C4.3709 82.2065 4.64362 82.2555 4.91712 82.2436C5.71359 82.2512 6.50572 82.1256 7.26083 81.8722C8.26058 81.5534 9.223 81.1277 10.1314 80.6024C11.1938 79.9931 12.1997 79.2901 13.137 78.5018C14.2172 77.5845 15.1914 76.5491 16.0413 75.4151C16.9145 74.2619 17.711 73.0525 18.4255 71.7949C19.0868 70.6383 19.6777 69.4428 20.1952 68.2151C20.6082 67.2506 20.9579 66.2601 21.2421 65.25C17.0899 66.4024 13.0901 68.0463 9.32762 70.1469C6.32424 71.948 4.34301 73.8549 3.38391 75.8677C2.87298 76.8611 2.59794 77.9589 2.58016 79.0759C2.57434 80.0031 2.88664 80.9043 3.46496 81.629\",\n    fill: \"#16140E\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.2723 54.6526C47.8625 55.4631 47.3762 56.3277 46.8134 57.2462C46.2505 58.1648 45.6404 59.0901 44.983 60.0222C44.3608 60.9142 43.6841 61.7668 42.9567 62.5753C42.3232 63.2835 41.6118 63.9179 40.8359 64.4665C40.2509 64.9129 39.5445 65.1719 38.8096 65.2095C38.314 65.2484 37.8185 65.1328 37.3913 64.8785C36.9657 64.6267 36.6158 64.2651 36.3781 63.8316C36.1128 63.3177 35.9456 62.7588 35.8851 62.1836C35.8026 61.4926 35.8026 60.7943 35.8851 60.1033C36.0104 59.1271 36.2228 58.1642 36.52 57.226C36.8352 56.2129 37.1976 55.1975 37.6074 54.1798C38.0171 53.1622 38.4359 52.1806 38.8637 51.235C39.2869 50.2894 39.6562 49.4316 39.9714 48.6616C40.2453 48.0358 40.4711 47.3901 40.6468 46.7299C40.7684 46.2076 40.7346 45.8519 40.5455 45.6628C40.3564 45.5007 40.4442 45.3048 40.8156 45.0887C41.2299 44.8589 41.693 44.7316 42.1665 44.7172C42.7579 44.6995 43.3446 44.8271 43.8753 45.0887C44.1918 45.2557 44.4681 45.4897 44.685 45.7743C44.902 46.0589 45.0543 46.3873 45.1316 46.7367C45.3753 47.6959 45.333 48.7055 45.01 49.641C44.6576 50.8623 44.2058 52.0528 43.6592 53.2005C43.0693 54.4342 42.4389 55.6545 41.768 56.8613C41.0971 58.068 40.5342 59.1442 40.0794 60.0898C39.7045 60.7996 39.4403 61.5627 39.2959 62.3524C39.2284 62.9153 39.5098 63.1697 40.1402 63.1157C40.5512 63.0196 40.9219 62.7977 41.2006 62.4808C41.7044 61.9802 42.1781 61.4502 42.619 60.8935C43.1413 60.2496 43.6772 59.5292 44.2265 58.7322C44.7759 57.9352 45.2982 57.1404 45.7935 56.3479C46.2888 55.5509 46.7278 54.7967 47.1106 54.0853C47.4286 53.5166 47.704 52.9251 47.9346 52.3157C47.9644 52.2185 48.0175 52.1302 48.0893 52.0584C48.1611 51.9866 48.2495 51.9334 48.3466 51.9037C48.5203 51.8492 48.7065 51.8492 48.8802 51.9037C49.0492 51.9582 49.1899 52.0771 49.2719 52.2346C49.3216 52.3148 49.3479 52.4071 49.3479 52.5014C49.3479 52.5957 49.3216 52.6881 49.2719 52.7682C49.0513 53.2185 48.7361 53.8556 48.3263 54.6796M46.5365 41.8466C46.6851 41.5179 46.8494 41.1892 47.0295 40.8605C47.2096 40.5318 47.374 40.2166 47.5226 39.9149C47.6423 39.7074 47.7182 39.4775 47.7455 39.2395C47.759 38.9177 47.7067 38.5966 47.5918 38.2958C47.4768 37.995 47.3015 37.7208 47.0768 37.4902C46.6984 37.0728 46.2387 36.7373 45.726 36.5041C45.3022 36.3048 44.843 36.1923 44.3751 36.1731C43.9631 36.1731 43.7605 36.2677 43.7605 36.4635C43.7307 36.704 43.6476 36.9347 43.5173 37.1389C43.3507 37.4406 43.1661 37.7693 42.9635 38.1251C42.7609 38.4808 42.5762 38.8162 42.4096 39.1314C42.2696 39.3636 42.1841 39.6246 42.1597 39.8947C42.1522 40.2102 42.2081 40.5241 42.3241 40.8176C42.4401 41.1111 42.6139 41.3784 42.8352 41.6035C43.2335 42.0281 43.7168 42.3641 44.2535 42.5896C44.7019 42.7836 45.1835 42.8891 45.6719 42.9003C46.111 42.9003 46.3473 42.7922 46.3473 42.5693C46.3699 42.2953 46.4481 42.0287 46.577 41.7858\",\n    fill: \"#16140E\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.3094 47.966C58.3091 47.7477 58.3725 47.5341 58.4918 47.3513C58.6169 47.1587 58.7773 46.9914 58.9646 46.8583C58.9237 46.7122 58.8349 46.5841 58.7123 46.4946C58.5898 46.4052 58.4407 46.3596 58.2892 46.3652C57.8144 46.3706 57.3589 46.5538 57.0126 46.8785C56.4503 47.3525 55.9469 47.8922 55.5132 48.486C54.897 49.3104 54.3395 50.1771 53.8449 51.0797C53.2685 52.1063 52.6922 53.2523 52.1158 54.5175C51.7545 55.3443 51.4652 56.2008 51.2513 57.0774C51.0255 57.9386 50.8942 58.8219 50.8595 59.7115C50.8188 60.4539 50.901 61.1978 51.1027 61.9134C51.1633 62.188 51.2888 62.444 51.4685 62.6602C51.6483 62.8764 51.8772 63.0465 52.1361 63.1562C52.3331 63.2374 52.5471 63.2688 52.7592 63.2476C52.9712 63.2263 53.1748 63.1532 53.3518 63.0346C53.8429 62.7289 54.2752 62.3378 54.6284 61.8796C55.1091 61.2794 55.5491 60.6476 55.9454 59.9885C56.3957 59.2455 56.8347 58.471 57.2625 57.665C57.6903 56.859 58.1023 56.0485 58.4985 55.2335C58.8948 54.423 59.273 53.6755 59.6332 52.9911C60.016 52.0905 60.3942 51.2327 60.7679 50.4177C61.1417 49.6027 61.4501 48.8755 61.6933 48.2361C61.9067 47.7027 62.0717 47.1511 62.1863 46.5881C62.2674 46.1378 62.2269 45.8294 62.0648 45.6628C61.8689 45.5007 61.9634 45.3048 62.3349 45.0887C62.7492 44.8589 63.2123 44.7316 63.6858 44.7172C64.2772 44.6992 64.864 44.8268 65.3946 45.0887C65.7113 45.2554 65.9879 45.4892 66.2048 45.7738C66.4218 46.0585 66.5741 46.3871 66.6509 46.7367C66.8932 47.6938 66.8509 48.7008 66.5293 49.6342C66.1765 50.8555 65.7248 52.0459 65.1784 53.1937C64.5886 54.4275 63.9582 55.6477 63.2873 56.8545C62.6163 58.0613 62.0535 59.1374 61.5987 60.083C61.2141 60.7936 60.9408 61.559 60.7882 62.3524C60.7207 62.9153 61.0021 63.1697 61.6325 63.1157C62.0322 62.9932 62.3884 62.7588 62.6591 62.4402C63.1739 61.9442 63.6545 61.4139 64.0978 60.853C64.6201 60.2091 65.1627 59.4886 65.7255 58.6916C66.2884 57.8947 66.8107 57.0999 67.2925 56.3074C67.7743 55.5104 68.2066 54.7562 68.5893 54.0448C68.9075 53.4761 69.183 52.8846 69.4133 52.2751C69.4431 52.178 69.4962 52.0897 69.5681 52.0179C69.6399 51.946 69.7282 51.8929 69.8253 51.8631C69.999 51.8087 70.1852 51.8087 70.3589 51.8631C70.5279 51.9177 70.6687 52.0366 70.7507 52.1941C70.8003 52.2742 70.8266 52.3666 70.8266 52.4609C70.8266 52.5552 70.8003 52.6475 70.7507 52.7277C70.53 53.178 70.2148 53.8151 69.8051 54.6391C69.3953 55.4631 68.909 56.3277 68.3462 57.2327C67.7833 58.1333 67.1732 59.0586 66.5158 60.0087C65.8936 60.9007 65.2169 61.7533 64.4895 62.5618C63.8562 63.2702 63.1447 63.9046 62.3687 64.453C61.7839 64.8998 61.0774 65.1588 60.3424 65.196C59.8689 65.2421 59.3924 65.1451 58.9746 64.9176C58.5567 64.69 58.2168 64.3423 57.9987 63.9194C57.4493 62.8555 57.2485 61.6457 57.4246 60.4613C56.9298 61.273 56.3792 62.0494 55.7766 62.7847C55.2501 63.441 54.6177 64.0048 53.9057 64.453C53.2564 64.8575 52.5248 65.1114 51.7646 65.196C50.9087 65.2616 50.0504 65.1058 49.2723 64.7434C48.2832 64.3948 47.447 63.7115 46.9083 62.8117C46.4273 61.9593 46.1391 61.0117 46.064 60.0357C45.9865 58.9867 46.0708 57.932 46.3139 56.9085C46.5403 55.8921 46.8429 54.8942 47.219 53.9232C47.7753 52.4245 48.4932 50.9909 49.3601 49.6478C50.0773 48.5596 50.9435 47.5775 51.9334 46.7299C52.7509 46.0182 53.6918 45.4619 54.7094 45.0887C55.6491 44.7631 56.6399 44.6098 57.634 44.6361C57.9875 44.6674 58.3377 44.7284 58.6809 44.8185C59.0484 44.9141 59.396 45.0742 59.7075 45.2913C60.0358 45.5252 60.3099 45.8269 60.5113 46.1761C60.7394 46.5891 60.8536 47.0553 60.8422 47.5269C60.87 47.7506 60.8474 47.9777 60.7761 48.1916C60.7048 48.4054 60.5867 48.6006 60.4302 48.763C60.3225 48.8849 60.1891 48.9815 60.0397 49.0457C59.8902 49.1099 59.7283 49.1402 59.5657 49.1344C59.2405 49.1342 58.9264 49.0167 58.6809 48.8035C58.5537 48.699 58.4523 48.5667 58.3843 48.4168C58.3164 48.2669 58.2838 48.1034 58.2892 47.9389\",\n    fill: \"#16140E\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M85.2652 49.8166C85.1964 50.8218 84.9896 51.8127 84.6506 52.7614C84.2949 53.7881 83.8896 54.7967 83.4349 55.7873C82.9801 56.7779 82.5298 57.7168 82.084 58.6038C81.6977 59.359 81.3527 60.1347 81.0506 60.9273C80.8311 61.4269 80.725 61.969 80.7399 62.5145C80.7804 62.9108 81.0754 63.1089 81.6247 63.1089C82.0229 63.0288 82.3836 62.8199 82.6514 62.5145C83.1701 62.0295 83.651 61.5057 84.09 60.9475C84.6123 60.3036 85.1549 59.5764 85.7178 58.7659C86.2806 57.9554 86.8075 57.1539 87.2983 56.3614C87.7936 55.5644 88.2439 54.8035 88.6491 54.0785C88.9653 53.5019 89.2407 52.9038 89.4731 52.2886C89.5029 52.1915 89.556 52.1032 89.6278 52.0314C89.6997 51.9595 89.788 51.9064 89.8851 51.8766C90.0588 51.8222 90.245 51.8222 90.4187 51.8766C90.5877 51.9312 90.7285 52.0501 90.8105 52.2076C90.8601 52.2877 90.8864 52.3801 90.8864 52.4744C90.8864 52.5686 90.8601 52.661 90.8105 52.7412C90.5898 53.1915 90.2746 53.8286 89.8649 54.6526C89.4551 55.4766 88.9688 56.3412 88.406 57.2462C87.8431 58.1468 87.233 59.0721 86.5756 60.0222C85.9537 60.9144 85.277 61.7671 84.5493 62.5753C83.9157 63.2834 83.2042 63.9178 82.4285 64.4665C81.8437 64.9133 81.1372 65.1723 80.4022 65.2095C79.9042 65.251 79.408 65.112 79.0041 64.8177C78.6007 64.5059 78.2767 64.1033 78.0585 63.6425C77.8022 63.1163 77.629 62.5535 77.5452 61.9742C77.4558 61.3538 77.4558 60.7237 77.5452 60.1033C77.6852 58.9683 77.9479 57.8518 78.3287 56.7734C78.7114 55.6748 79.1302 54.6256 79.5849 53.626C80.0397 52.6264 80.49 51.7078 80.9358 50.8703C81.314 50.1665 81.6435 49.4376 81.9219 48.6886C82.118 48.2431 82.1971 47.7549 82.1515 47.2703C82.084 46.9393 81.7598 46.7907 81.1857 46.8177C80.7032 46.9401 80.2624 47.1897 79.9091 47.5404C79.2742 48.0757 78.6762 48.6534 78.1193 49.2695C77.4754 49.9674 76.8247 50.7352 76.1673 51.5727C75.5099 52.4102 74.92 53.2117 74.3977 53.9772C73.8754 55.0489 73.3328 56.1115 72.7699 57.1652C72.2071 58.2188 71.7073 59.214 71.2705 60.1505C70.8849 60.9482 70.5619 61.7747 70.3047 62.6226C70.1027 63.1534 70.1027 63.7398 70.3047 64.2706C70.4127 64.4913 70.3227 64.7164 70.0345 64.946C69.7149 65.1908 69.3226 65.3215 68.92 65.3175C68.4212 65.317 67.934 65.1664 67.5219 64.8853C66.9675 64.4721 66.5812 63.8724 66.4345 63.1967C66.2146 62.3442 66.2286 61.4483 66.475 60.6031C66.7519 59.4341 67.1085 58.2855 67.5422 57.1652C67.9925 55.9449 68.5148 54.6976 69.1092 53.4233C69.7035 52.1491 70.2259 50.9761 70.6761 49.9044C71.0773 49.0089 71.4203 48.0884 71.7028 47.1487C71.9234 46.3787 71.9234 45.8856 71.7028 45.6695C71.4821 45.4534 71.5722 45.262 71.9729 45.0954C72.4019 44.8599 72.8818 44.7323 73.3711 44.7239C73.9627 44.7034 74.5501 44.8311 75.0799 45.0954C75.392 45.2654 75.6639 45.5006 75.8772 45.7849C76.0905 46.0693 76.2401 46.3962 76.3159 46.7434C76.4275 47.1245 76.4687 47.5228 76.4375 47.9187C76.4077 48.3738 76.3399 48.8257 76.2349 49.2695C76.7572 48.6661 77.2863 48.0898 77.8221 47.5404C78.3267 47.0195 78.8709 46.5386 79.4499 46.1018C79.9515 45.7203 80.49 45.39 81.0574 45.1157C81.4744 44.8947 81.9314 44.7592 82.4015 44.7172C82.8929 44.6862 83.3824 44.8028 83.8072 45.0519C84.232 45.301 84.5727 45.6713 84.7857 46.1153C85.3343 47.2668 85.5068 48.5617 85.2788 49.8166\",\n    fill: \"#16140E\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M105.258 49.8166C105.189 50.8218 104.982 51.8127 104.643 52.7614C104.287 53.7881 103.882 54.7967 103.427 55.7873C102.973 56.7779 102.522 57.7168 102.077 58.6038C101.686 59.3588 101.336 60.1344 101.03 60.9273C100.811 61.4271 100.705 61.969 100.719 62.5145C100.759 62.913 101.057 63.1089 101.604 63.1089C102.002 63.0288 102.363 62.8199 102.63 62.5145C103.149 62.0295 103.63 61.5057 104.069 60.9475C104.591 60.3036 105.134 59.5764 105.697 58.7659C106.26 57.9554 106.789 57.1539 107.284 56.3614C107.779 55.5644 108.218 54.8035 108.601 54.0785C108.917 53.5019 109.193 52.9038 109.425 52.2886C109.455 52.1915 109.508 52.1032 109.58 52.0314C109.652 51.9595 109.74 51.9064 109.837 51.8766C110.011 51.8222 110.197 51.8222 110.371 51.8766C110.54 51.9312 110.68 52.0501 110.762 52.2076C110.812 52.2877 110.838 52.3801 110.838 52.4744C110.838 52.5686 110.812 52.661 110.762 52.7412C110.542 53.1915 110.227 53.8286 109.817 54.6526C109.407 55.4766 108.921 56.3412 108.358 57.2462C107.795 58.1468 107.185 59.0721 106.528 60.0222C105.906 60.9146 105.229 61.7673 104.501 62.5753C103.868 63.2837 103.156 63.9182 102.38 64.4665C101.796 64.9133 101.089 65.1723 100.354 65.2095C99.8562 65.251 99.3599 65.112 98.9561 64.8177C98.5527 64.5059 98.2287 64.1033 98.0105 63.6425C97.7544 63.1161 97.5813 62.5534 97.4972 61.9742C97.4081 61.3537 97.4081 60.7237 97.4972 60.1033C97.6378 58.9684 97.9005 57.852 98.2806 56.7734C98.6634 55.6748 99.0821 54.6256 99.5369 53.626C99.9917 52.6264 100.442 51.7078 100.888 50.8703C101.266 50.1665 101.596 49.4376 101.874 48.6886C102.07 48.2432 102.149 47.7549 102.104 47.2703C102.036 46.9393 101.712 46.7907 101.138 46.8177C100.655 46.9398 100.214 47.1894 99.8611 47.5404C99.1798 48.0686 98.5365 48.6441 97.9362 49.2628C97.2923 49.9607 96.6394 50.7284 95.9775 51.5659C95.3155 52.4035 94.7257 53.205 94.2078 53.9704C93.6855 55.0421 93.1429 56.1048 92.5801 57.1584C92.0172 58.2121 91.5174 59.2072 91.0807 60.1438C90.6953 60.9416 90.3724 61.7681 90.1148 62.6158C89.9134 63.1467 89.9134 63.733 90.1148 64.2639C90.2229 64.4845 90.1351 64.7096 89.8514 64.9393C89.5318 65.184 89.1395 65.3148 88.7369 65.3108C88.2381 65.3102 87.7509 65.1596 87.3388 64.8785C86.7844 64.4654 86.3981 63.8656 86.2514 63.1899C86.0315 62.3375 86.0455 61.4415 86.2919 60.5963C86.5706 59.4271 86.9295 58.2784 87.3658 57.1584C87.8161 55.9382 88.3384 54.6909 88.9328 53.4166C89.5272 52.1423 90.0473 50.9693 90.493 49.8977C90.8948 49.0024 91.2378 48.0819 91.5197 47.1419C91.7403 46.3719 91.7403 45.8789 91.5197 45.6628C91.299 45.4466 91.3891 45.2553 91.7898 45.0886C92.2248 44.8499 92.7121 44.7223 93.2082 44.7172C93.7999 44.6967 94.3873 44.8244 94.917 45.0886C95.2292 45.2587 95.5011 45.4938 95.7144 45.7782C95.9276 46.0625 96.0772 46.3894 96.1531 46.7367C96.2646 47.1178 96.3058 47.516 96.2746 47.9119C96.2448 48.367 96.1771 48.8189 96.072 49.2628C96.5943 48.6594 97.1234 48.083 97.6593 47.5337C98.1631 47.0058 98.7073 46.518 99.287 46.0748C99.7885 45.6931 100.327 45.3627 100.895 45.0886C101.367 44.8532 101.886 44.7263 102.414 44.7172C102.906 44.6862 103.395 44.8028 103.82 45.0519C104.245 45.301 104.586 45.6713 104.798 46.1153C105.347 47.2668 105.52 48.5617 105.292 49.8166\",\n    fill: \"#16140E\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.738 75.3138C103.716 75.0151 103.75 74.7149 103.839 74.429C103.985 74.0115 104.233 73.6374 104.562 73.3415C105.037 72.8755 105.57 72.4735 106.149 72.146C106.766 71.7903 107.41 71.4481 108.081 71.1194C108.752 70.7907 109.409 70.4552 110.053 70.113C110.651 69.8006 111.211 69.4198 111.721 68.9783C112.05 67.9652 112.482 66.8395 113.018 65.6012L114.727 61.6297C113.985 62.5633 113.142 63.4127 112.214 64.1626C111.525 64.7683 110.658 65.1354 109.742 65.2095C109.247 65.2484 108.751 65.1328 108.324 64.8785C107.929 64.6152 107.608 64.2547 107.392 63.8316C107.127 63.3177 106.959 62.7588 106.899 62.1836C106.816 61.4926 106.816 60.7943 106.899 60.1033C107.024 59.1249 107.236 58.1596 107.534 57.2192C107.849 56.2061 108.214 55.1907 108.628 54.1731C109.042 53.1554 109.461 52.1738 109.884 51.2282C110.308 50.2826 110.679 49.4249 110.999 48.6549C111.275 48.0229 111.5 47.3703 111.674 46.7029C111.796 46.1671 111.762 45.8181 111.573 45.656C111.384 45.4939 111.472 45.298 111.843 45.0819C112.257 44.8524 112.72 44.7251 113.194 44.7104C113.785 44.6927 114.372 44.8203 114.903 45.0819C115.219 45.249 115.495 45.4829 115.712 45.7675C115.929 46.0521 116.082 46.3805 116.159 46.7299C116.401 47.687 116.359 48.694 116.037 49.6275C115.685 50.8488 115.233 52.0393 114.687 53.187C114.097 54.4207 113.466 55.641 112.795 56.8477C112.124 58.0545 111.562 59.1307 111.107 60.0763C110.732 60.7862 110.468 61.5492 110.323 62.3389C110.256 62.9018 110.537 63.1562 111.168 63.1021C111.496 63.0751 111.983 62.7262 112.626 62.0552C113.359 61.2819 114.036 60.4581 114.653 59.59C115.355 58.6173 116.049 57.5817 116.733 56.483C117.334 55.5381 117.884 54.5619 118.381 53.5584C118.831 52.5453 119.237 51.5862 119.597 50.6811C119.957 49.7761 120.259 48.9678 120.502 48.2564C120.701 47.6715 120.859 47.0734 120.975 46.4665C121.025 46.3081 121.044 46.1413 121.031 45.9755C121.017 45.8098 120.97 45.6484 120.894 45.5007C120.759 45.3386 120.882 45.1472 121.265 44.9266C121.709 44.6911 122.202 44.5639 122.704 44.5551C123.3 44.5324 123.892 44.675 124.413 44.9671C124.721 45.1588 124.988 45.4107 125.197 45.7078C125.405 46.0049 125.552 46.341 125.628 46.6962C125.747 47.4489 125.678 48.2194 125.426 48.9386C125.101 50.1171 124.715 51.2782 124.271 52.417C123.78 53.7048 123.217 55.0556 122.582 56.4695C121.947 57.8834 121.317 59.2117 120.691 60.4545C120.115 61.7018 119.608 62.7914 119.171 63.7235C118.859 64.3507 118.584 64.9958 118.347 65.6552C119.488 64.8617 120.524 63.9292 121.434 62.8793C122.504 61.6879 123.507 60.4388 124.44 59.1374C125.372 57.8361 126.193 56.5663 126.905 55.328C127.476 54.3804 127.97 53.3889 128.384 52.3629C128.409 52.2567 128.46 52.1582 128.532 52.0758C128.604 51.9935 128.694 51.9298 128.796 51.8901C128.969 51.8294 129.157 51.8294 129.33 51.8901C129.499 51.9447 129.639 52.0636 129.721 52.2211C129.765 52.3032 129.788 52.3948 129.788 52.4879C129.788 52.5809 129.765 52.6726 129.721 52.7547C129.026 54.2768 128.236 55.7543 127.357 57.1787C126.412 58.7275 125.374 60.2183 124.251 61.6432C123.174 63.0179 121.991 64.3052 120.711 65.4931C119.628 66.5235 118.41 67.4027 117.091 68.107C116.924 68.5168 116.699 69.0458 116.416 69.6943C116.132 70.3427 115.851 70.9933 115.571 71.6462C115.283 72.3036 115.022 72.9205 114.788 73.4969L114.275 74.7734C114.013 75.5226 113.567 76.1939 112.978 76.7254C112.385 77.26 111.698 77.6791 110.951 77.9614C110.215 78.2484 109.437 78.4149 108.648 78.4545C107.899 78.5004 107.147 78.4158 106.426 78.2046C105.757 78.0087 105.143 77.6568 104.636 77.1779C104.125 76.6885 103.786 76.0462 103.67 75.3475M111.1 70.8627C110.669 71.2042 110.2 71.4944 109.702 71.7273L108.135 72.4702C107.619 72.7148 107.118 72.9899 106.636 73.2943C106.18 73.5721 105.781 73.9342 105.46 74.3614C105.272 74.6231 105.192 74.9473 105.237 75.2665C105.276 75.5903 105.405 75.8968 105.609 76.1513C105.817 76.4107 106.086 76.6149 106.392 76.7457C106.725 76.8828 107.097 76.8972 107.439 76.7862C107.915 76.6347 108.341 76.3596 108.675 75.9892C109.178 75.4155 109.569 74.7537 109.83 74.0372C109.992 73.6545 110.19 73.2042 110.425 72.6864C110.659 72.1686 110.9 71.5652 111.147 70.8762\",\n    fill: \"#16140E\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M131.106 40.0703C131.025 39.9082 131.156 39.7641 131.498 39.638C132.331 39.372 133.233 39.4225 134.031 39.7799C134.228 39.8674 134.4 40.004 134.53 40.1765C134.66 40.3491 134.744 40.552 134.774 40.766C134.939 41.7785 134.861 42.8159 134.544 43.7919C134.262 44.7011 133.831 45.5571 133.267 46.3247C132.805 46.9758 132.2 47.5119 131.498 47.8917C131.229 48.0515 130.925 48.1426 130.613 48.1567C130.301 48.1708 129.99 48.1076 129.708 47.9727C129.433 47.8376 129.454 47.5427 129.769 47.0879C130.145 46.5324 130.488 45.955 130.795 45.3588C131.184 44.6082 131.462 43.8051 131.619 42.9746C131.781 41.9763 131.6 40.9527 131.106 40.0703Z\",\n    fill: \"#16140E\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M140.933 64.3449L140.893 64.3854C140.337 64.6592 139.758 64.8852 139.164 65.0609C138.712 65.2098 138.241 65.2939 137.766 65.3108C136.843 65.3722 135.934 65.0691 135.233 64.4665C134.65 63.9215 134.241 63.2166 134.058 62.4402C133.867 61.687 133.839 60.9018 133.977 60.137C134.062 59.484 134.334 58.8695 134.76 58.3674C135.175 57.8919 135.677 57.4999 136.239 57.2125C136.582 57.0351 136.97 56.9623 137.354 57.0031C137.667 57.0356 137.962 57.1655 138.198 57.3746C138.322 57.4728 138.422 57.5981 138.49 57.741C138.558 57.8839 138.592 58.0404 138.59 58.1986C138.592 58.3686 138.558 58.5371 138.491 58.6931C138.423 58.8491 138.324 58.9891 138.198 59.1036C137.964 59.3397 137.646 59.4733 137.313 59.4751C137.071 59.4702 136.835 59.3926 136.638 59.2522C136.425 59.1105 136.265 58.9011 136.185 58.6579C135.821 59.0834 135.566 59.591 135.442 60.137C135.308 60.6758 135.28 61.2357 135.361 61.7851C135.432 62.2904 135.656 62.7619 136.003 63.1359C136.187 63.3252 136.408 63.4755 136.652 63.5776C136.895 63.6797 137.157 63.7316 137.421 63.7303C137.755 63.6948 138.077 63.5889 138.367 63.4196C138.847 63.1599 139.273 62.8115 139.623 62.3929C140.096 61.8391 140.479 61.2146 140.758 60.5423C141.112 59.6716 141.313 58.7461 141.352 57.8068C141.403 56.5495 141.285 55.2909 141.001 54.065C140.614 52.398 140.034 50.7818 139.272 49.2492C138.997 49.7716 138.689 50.3412 138.347 50.9581C138.004 51.5749 137.696 52.1581 137.421 52.7074C137.367 52.7941 137.295 52.8683 137.21 52.9253C137.125 52.9823 137.029 53.0209 136.928 53.0384C136.748 53.0671 136.564 53.0461 136.395 52.9776C136.317 52.9483 136.246 52.904 136.186 52.8472C136.126 52.7904 136.077 52.7222 136.043 52.6466C136.011 52.5626 136 52.4719 136.01 52.3824C136.021 52.293 136.053 52.2075 136.104 52.1333C136.325 51.683 136.53 51.2642 136.719 50.877C136.908 50.5055 137.104 50.1543 137.293 49.8301C137.482 49.5059 137.664 49.1547 137.826 48.8237C137.989 48.4928 138.171 48.1483 138.36 47.7295C138.065 47.2859 137.838 46.8011 137.685 46.2909C137.517 45.7576 137.433 45.2018 137.435 44.6429C137.444 44.3297 137.491 44.0189 137.577 43.7175C137.682 43.3227 137.848 42.9467 138.07 42.6031C138.317 42.2195 138.647 41.8964 139.036 41.6575C139.523 41.377 140.081 41.2412 140.643 41.2658C141.182 41.2191 141.719 41.381 142.142 41.7183C142.458 42.0211 142.643 42.4358 142.656 42.8733C142.671 43.4015 142.572 43.9267 142.365 44.4132C142.135 44.9974 141.845 45.5565 141.501 46.0815L141.379 46.3314C142.348 47.4261 143.21 48.6113 143.953 49.8706C144.547 50.8874 145.036 51.9624 145.411 53.0789C145.721 53.9957 145.908 54.9497 145.965 55.9157C146.01 56.7465 145.933 57.5794 145.736 58.3877C146.598 57.401 147.41 56.3708 148.167 55.301C148.821 54.3828 149.412 53.4215 149.937 52.4237C149.968 52.3364 150.018 52.2565 150.082 52.1891C150.146 52.1217 150.223 52.0682 150.308 52.032C150.412 52.0015 150.521 51.9947 150.627 52.0123C150.734 52.0298 150.835 52.0712 150.923 52.1333C151.011 52.1784 151.088 52.2423 151.149 52.3205C151.21 52.3987 151.252 52.4893 151.274 52.5858C151.317 52.7653 151.295 52.9541 151.213 53.1194C150.566 54.4454 149.802 55.7112 148.93 56.9018C148.066 58.0815 147.114 59.2612 146.073 60.441C145.358 61.2408 144.581 61.9837 143.75 62.6631C142.918 63.3358 141.998 63.8904 141.014 64.3111L140.933 64.3449Z\",\n    fill: \"#16140E\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.4623 84.9457C76.9412 86.3073 77.1701 87.7443 77.1377 89.1873C77.1018 90.547 76.858 91.8931 76.415 93.1791C75.9479 94.5538 75.2909 95.8565 74.4631 97.0492C73.5001 98.4788 72.3508 99.7735 71.0454 100.899C69.7445 102.026 68.2888 102.961 66.7227 103.675C65.2353 104.392 63.6363 104.849 61.9948 105.026C61.7741 105.053 61.549 105.073 61.3194 105.087H60.6439C59.4837 105.098 58.3294 104.92 57.2263 104.56C57.0453 104.513 56.8858 104.406 56.7738 104.256C56.7185 104.177 56.6792 104.088 56.6584 103.995C56.6375 103.901 56.6354 103.804 56.6522 103.709C56.6623 103.516 56.7441 103.335 56.8817 103.2C57.0193 103.064 57.2025 102.986 57.3952 102.979C58.6679 102.895 59.9182 102.603 61.0965 102.115C62.3099 101.618 63.4577 100.974 64.5141 100.197C65.5834 99.4128 66.5441 98.4907 67.3712 97.4545C68.2023 96.4126 68.8843 95.2601 69.3974 94.0301C70.2072 92.1773 70.6212 90.1759 70.6132 88.1539C70.6241 86.2685 70.2012 84.4059 69.3772 82.71C68.5531 81.0732 67.32 79.6772 65.7974 78.6575C64.2366 77.5914 62.4171 76.966 60.5307 76.8471C58.6443 76.7283 56.7608 77.1204 55.0785 77.9821C53.5836 78.7145 52.2154 79.6813 51.0259 80.8459C49.8314 82.0122 48.8183 83.3509 48.0203 84.8173C47.2393 86.2251 46.6574 87.7344 46.2912 89.3021C45.9541 90.724 45.8718 92.1945 46.0481 93.6451C46.1905 94.945 46.6961 96.1786 47.507 97.2046C47.6691 97.4252 47.6286 97.6864 47.3854 97.9881C47.0998 98.3196 46.7416 98.5808 46.3385 98.7513C45.872 98.9606 45.3701 99.0798 44.8593 99.1025C44.3738 99.1353 43.8931 98.9887 43.5085 98.6905C42.6505 97.8818 41.9837 96.8919 41.5565 95.7929C41.163 94.7562 40.9749 93.6528 41.0027 92.5442C41.034 91.4125 41.2273 90.2912 41.5768 89.2143C41.9318 88.1063 42.4003 87.038 42.9749 86.0264C43.868 84.4618 44.9751 83.0296 46.2642 81.7712C47.592 80.4529 49.0622 79.2863 50.6477 78.2928C52.1951 77.3192 53.8525 76.5325 55.585 75.9491C57.1945 75.3917 58.8804 75.0864 60.5832 75.044C61.7873 75.0155 62.9917 75.0901 64.1832 75.2669C65.3788 75.4371 66.5521 75.7384 67.6818 76.1652C68.8595 76.6262 69.9775 77.2271 71.0117 77.9551C72.1643 78.7717 73.2084 79.7318 74.1186 80.8121C74.6267 81.4471 75.0787 82.1251 75.4695 82.8384C75.8641 83.509 76.1965 84.2144 76.4623 84.9457ZM46.1359 113.915C45.9744 113.111 46.0021 112.281 46.2169 111.49C46.4376 110.364 46.7663 109.047 47.2031 107.539C47.6398 106.03 48.1689 104.384 48.7903 102.601C49.4072 100.8 50.0376 99.017 50.6815 97.2519C51.3254 95.4868 51.9558 93.7509 52.5727 92.0444C53.1895 90.3558 53.7186 88.8406 54.1599 87.4988C54.6012 86.1569 54.9164 85.047 55.1055 84.1689C55.2946 83.2684 55.3081 82.7461 55.146 82.602C55.0109 82.4939 55.0447 82.3656 55.2473 82.2102C55.516 82.0313 55.8163 81.9052 56.1321 81.8387C56.5645 81.7368 57.0054 81.6757 57.4492 81.6564C57.9187 81.6271 58.3899 81.6681 58.8473 81.7779C59.278 81.8822 59.6753 82.0936 60.0023 82.3926C60.3476 82.7306 60.5527 83.1865 60.5764 83.6691C60.6461 85.0663 60.4724 86.465 60.0631 87.8027C59.6128 89.5183 59.0162 91.3982 58.2732 93.4425C57.5303 95.4868 56.7085 97.6076 55.8079 99.805C54.9074 102.002 54.0834 104.087 53.3359 106.059C52.5884 108.032 51.967 109.808 51.4717 111.388C51.0425 112.541 50.814 113.759 50.7963 114.988C50.7963 115.236 50.6049 115.477 50.2222 115.711C49.8129 115.95 49.3454 116.072 48.8713 116.062C48.3119 116.052 47.7648 115.896 47.2841 115.61C46.6876 115.223 46.2677 114.616 46.1156 113.921\",\n    fill: \"#DADBDC\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M90.0248 95.131C89.6151 95.9415 89.1288 96.8061 88.5659 97.7246C88.0031 98.6432 87.3929 99.5618 86.7355 100.48C86.1137 101.373 85.437 102.225 84.7093 103.033C84.0759 103.742 83.3644 104.376 82.5884 104.925C82.0036 105.371 81.2972 105.63 80.5622 105.668C80.0665 105.707 79.571 105.591 79.1438 105.337C78.7361 105.078 78.4031 104.717 78.1779 104.29C77.9126 103.776 77.7454 103.217 77.6849 102.642C77.6024 101.951 77.6024 101.252 77.6849 100.561C77.8102 99.5853 78.0227 98.6223 78.3198 97.6841C78.635 96.671 78.9974 95.6556 79.4072 94.638C79.8169 93.6203 80.2357 92.6387 80.6635 91.6931C81.0867 90.7475 81.4582 89.8898 81.7779 89.1198C82.0514 88.4938 82.2772 87.8481 82.4533 87.1881C82.5749 86.6657 82.5412 86.31 82.352 86.1209C82.1629 85.9588 82.2507 85.7629 82.6222 85.5468C83.0364 85.3171 83.4996 85.1897 83.973 85.1753C84.5644 85.1576 85.1512 85.2852 85.6819 85.5468C85.9983 85.7139 86.2746 85.9478 86.4916 86.2324C86.7085 86.517 86.8609 86.8454 86.9382 87.1948C87.1818 88.1541 87.1396 89.1636 86.8166 90.0991C86.4643 91.3205 86.0125 92.511 85.4657 93.6586C84.8759 94.8924 84.2455 96.1126 83.5745 97.3194C82.9036 98.5261 82.3408 99.6023 81.886 100.548C81.511 101.258 81.2468 102.021 81.1025 102.811C81.035 103.373 81.3164 103.628 81.9468 103.574C82.358 103.464 82.7243 103.228 82.9937 102.898C83.4975 102.398 83.9711 101.868 84.4121 101.311C84.9344 100.667 85.4702 99.9468 86.0196 99.1498C86.5689 98.3528 87.0912 97.558 87.5866 96.7655C88.0819 95.9685 88.5209 95.2143 88.9036 94.5029C89.2214 93.9341 89.4969 93.3426 89.7277 92.7333C89.7574 92.6362 89.8105 92.5478 89.8824 92.476C89.9542 92.4042 90.0425 92.351 90.1396 92.3213C90.3133 92.2668 90.4995 92.2668 90.6732 92.3213C90.8422 92.3758 90.983 92.4947 91.065 92.6522C91.1146 92.7324 91.1409 92.8248 91.1409 92.919C91.1409 93.0133 91.1146 93.1057 91.065 93.1858C90.8443 93.6361 90.5291 94.2732 90.1194 95.0973M88.3295 82.2642C88.4781 81.9333 88.647 81.5888 88.8226 81.2781C88.9982 80.9674 89.167 80.6027 89.3156 80.3325C89.4354 80.125 89.5113 79.8951 89.5385 79.6571C89.5631 79.0354 89.3424 78.429 88.9239 77.9686C88.5454 77.5514 88.0857 77.2158 87.5731 76.9824C87.1493 76.7834 86.69 76.6708 86.2222 76.6515C85.8102 76.6515 85.6076 76.746 85.6076 76.9419C85.5757 77.1829 85.4904 77.4137 85.3577 77.6173C85.1911 77.919 85.0064 78.2477 84.8038 78.6035C84.6012 78.9614 84.4121 79.2789 84.25 79.6098C84.1121 79.8425 84.0289 80.1035 84.0068 80.3731C83.9993 80.6886 84.0551 81.0025 84.1712 81.296C84.2872 81.5895 84.461 81.8568 84.6823 82.0819C85.0806 82.5065 85.5638 82.8425 86.1006 83.068C86.549 83.262 87.0306 83.3675 87.519 83.3787C87.9693 83.3787 88.1944 83.2684 88.1944 83.0477C88.217 82.7737 88.2952 82.5071 88.4241 82.2642\",\n    fill: \"#DADBDC\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M108.997 92.7671C109.019 92.678 109.063 92.5957 109.124 92.5274C109.185 92.4591 109.263 92.4069 109.349 92.3753C109.528 92.3136 109.723 92.3136 109.902 92.3753C109.997 92.3949 110.087 92.4345 110.165 92.4916C110.243 92.5487 110.308 92.6219 110.355 92.7063C110.395 92.7981 110.412 92.8983 110.405 92.9983C110.398 93.0983 110.367 93.195 110.314 93.2804C110.04 93.8837 109.698 94.5592 109.288 95.3066C108.878 96.0541 108.439 96.8286 107.971 97.6301C107.381 98.6399 106.737 99.6163 106.039 100.555C105.36 101.476 104.61 102.343 103.797 103.148C103.057 103.884 102.218 104.514 101.304 105.019C100.479 105.488 99.5516 105.75 98.6027 105.782C98.0298 105.791 97.4575 105.743 96.8939 105.641C96.4121 105.546 95.9618 105.436 95.543 105.31C95.1243 105.184 94.6987 105.073 94.2665 104.979C93.7733 104.877 93.2705 104.83 92.767 104.837C92.088 104.827 91.4096 104.881 90.7408 104.999L89.3899 105.269C89.143 105.333 88.8858 105.347 88.6334 105.31C88.4804 105.269 88.4038 105.098 88.4038 104.796C88.4742 104.24 88.6781 103.71 88.9982 103.25C89.48 102.455 90.0031 101.686 90.5652 100.946C91.2091 100.082 91.9498 99.1363 92.7873 98.1096C93.6248 97.083 94.4826 96.0203 95.3607 94.9216L97.9745 91.6526C98.8391 90.5719 99.6136 89.5228 100.298 88.5051C99.7309 88.4978 99.1708 88.3785 98.65 88.1539C98.2456 87.9637 97.8591 87.7376 97.495 87.4785C97.1789 87.2541 96.8496 87.0488 96.5089 86.8639C96.1393 86.6752 95.7282 86.5823 95.3134 86.5937C94.6201 86.5856 93.9503 86.8444 93.4425 87.3164C93.185 87.5372 92.9794 87.8121 92.8404 88.1215C92.7015 88.4309 92.6326 88.7672 92.6387 89.1063C92.6266 89.5003 92.7034 89.892 92.8637 90.2522C93.0239 90.6123 93.2633 90.9317 93.564 91.1866C93.8693 91.4504 94.2268 91.647 94.6132 91.7634C94.9996 91.8797 95.4062 91.9133 95.8064 91.862C95.9685 91.862 96.0023 91.943 95.8875 92.1929C95.7345 92.5036 95.5339 92.7884 95.2931 93.0372C94.9752 93.3774 94.6087 93.6687 94.2057 93.9018C93.771 94.1614 93.2734 94.2969 92.767 94.2935C91.8664 94.3146 90.9918 93.9909 90.322 93.3884C89.9964 93.1162 89.7354 92.775 89.5578 92.3895C89.3803 92.004 89.2906 91.5839 89.2954 91.1595C89.2887 90.371 89.4355 89.5888 89.7276 88.8564C89.9988 88.1591 90.3999 87.5196 90.9096 86.9719C91.4104 86.4464 92.0093 86.0242 92.6725 85.7292C93.3524 85.4257 94.0893 85.2714 94.8338 85.2766C95.343 85.2677 95.8501 85.3454 96.3333 85.5063L97.6841 85.9993C98.1637 86.1749 98.6905 86.3438 99.2713 86.4924C99.9861 86.6598 100.719 86.737 101.453 86.722C102.304 86.722 103.004 86.7018 103.554 86.6612C104.103 86.6207 104.576 86.5667 104.972 86.4991L105.999 86.337C106.319 86.2937 106.641 86.2734 106.964 86.2763C107.293 86.2763 107.457 86.4136 107.457 86.6883C107.436 86.8701 107.35 87.0381 107.214 87.1611L106.37 88.0459C105.974 88.4556 105.445 89.0117 104.783 89.7141C104.121 90.4166 103.306 91.3419 102.338 92.4901C101.365 93.6428 100.199 95.0635 98.8391 96.752C97.4792 98.4406 95.9212 100.467 94.1652 102.831C94.4927 102.837 94.8151 102.913 95.1107 103.054C95.4394 103.207 95.7817 103.371 96.1374 103.547C96.4931 103.722 96.8646 103.893 97.2518 104.06C97.6557 104.23 98.0902 104.315 98.5284 104.31C99.4461 104.318 100.344 104.044 101.102 103.527C102.021 102.931 102.859 102.218 103.594 101.406C104.416 100.507 105.166 99.5451 105.836 98.5284C106.534 97.4747 107.158 96.4391 107.707 95.4215C107.982 94.9261 108.23 94.4759 108.45 94.0706C108.66 93.666 108.838 93.246 108.984 92.8143\",\n    fill: \"#DADBDC\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M128.294 92.7671C128.316 92.678 128.359 92.5957 128.421 92.5274C128.482 92.4591 128.559 92.4069 128.645 92.3753C128.824 92.3136 129.019 92.3136 129.199 92.3753C129.294 92.3949 129.383 92.4345 129.461 92.4916C129.539 92.5487 129.604 92.6219 129.651 92.7063C129.691 92.7981 129.709 92.8983 129.702 92.9983C129.695 93.0983 129.663 93.195 129.611 93.2804C129.336 93.8837 128.994 94.5592 128.584 95.3066C128.174 96.0541 127.735 96.8286 127.267 97.6301C126.678 98.6399 126.033 99.6163 125.335 100.555C124.657 101.476 123.907 102.344 123.093 103.148C122.353 103.884 121.514 104.514 120.601 105.019C119.775 105.488 118.848 105.75 117.899 105.782C117.326 105.791 116.754 105.744 116.19 105.641C115.708 105.546 115.258 105.436 114.839 105.31C114.421 105.184 113.995 105.073 113.563 104.979C113.07 104.877 112.567 104.83 112.063 104.837C111.384 104.827 110.706 104.881 110.037 104.999L108.686 105.269C108.437 105.334 108.178 105.348 107.923 105.31C107.774 105.269 107.7 105.098 107.7 104.796C107.771 104.24 107.975 103.71 108.295 103.25C108.777 102.455 109.3 101.687 109.862 100.946C110.505 100.082 111.246 99.1363 112.084 98.1096C112.921 97.083 113.779 96.0203 114.657 94.9216L117.271 91.6526C118.135 90.5719 118.91 89.5228 119.594 88.5051C119.027 88.4977 118.467 88.3783 117.946 88.1539C117.542 87.9637 117.155 87.7376 116.791 87.4785C116.475 87.2541 116.146 87.0488 115.805 86.8639C115.436 86.6749 115.025 86.582 114.61 86.5937C113.916 86.5856 113.247 86.8444 112.739 87.3164C112.481 87.5372 112.276 87.8121 112.137 88.1215C111.998 88.4309 111.929 88.7671 111.935 89.1063C111.923 89.5003 112 89.892 112.16 90.2522C112.32 90.6123 112.56 90.9317 112.86 91.1866C113.166 91.4504 113.523 91.647 113.91 91.7634C114.296 91.8797 114.703 91.9133 115.103 91.862C115.265 91.862 115.299 91.943 115.184 92.1929C115.031 92.5036 114.83 92.7884 114.59 93.0372C114.272 93.3774 113.905 93.6687 113.502 93.9018C113.067 94.1614 112.57 94.2969 112.063 94.2935C111.163 94.3146 110.288 93.9909 109.618 93.3884C109.298 93.1147 109.041 92.7736 108.867 92.3896C108.693 92.0055 108.606 91.5879 108.612 91.1663C108.605 90.3778 108.752 89.5955 109.044 88.8631C109.317 88.1629 109.72 87.521 110.233 86.9719C110.735 86.4411 111.336 86.0142 112.003 85.7156C112.683 85.4124 113.42 85.2581 114.164 85.2631C114.673 85.2544 115.18 85.332 115.663 85.4928L117.014 85.9858C117.494 86.1614 118.021 86.3303 118.602 86.4789C119.316 86.6463 120.049 86.7235 120.783 86.7085C121.634 86.7085 122.334 86.6883 122.884 86.6477C123.433 86.6072 123.906 86.5532 124.302 86.4856L125.329 86.3235C125.649 86.2802 125.972 86.2599 126.295 86.2627C126.623 86.2627 126.788 86.4001 126.788 86.6747C126.766 86.8566 126.68 87.0246 126.544 87.1475L125.7 88.0323C125.304 88.4421 124.775 88.9982 124.113 89.7006C123.451 90.4031 122.636 91.3284 121.668 92.4766C120.695 93.6293 119.529 95.05 118.169 96.7385C116.809 98.4271 115.251 100.453 113.495 102.817C113.823 102.823 114.145 102.899 114.441 103.04C114.77 103.193 115.112 103.358 115.468 103.533C115.823 103.709 116.195 103.88 116.582 104.047C116.986 104.217 117.42 104.302 117.859 104.296C118.776 104.304 119.674 104.031 120.432 103.513C121.351 102.918 122.189 102.205 122.924 101.392C123.746 100.494 124.496 99.5316 125.167 98.5149C125.865 97.4612 126.488 96.4256 127.038 95.4079C127.312 94.9126 127.56 94.4624 127.78 94.0571C127.99 93.6526 128.169 93.2326 128.314 92.8008\",\n    fill: \"#DADBDC\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M138.662 88.4443C138.662 88.2261 138.725 88.0126 138.844 87.8297C138.969 87.637 139.13 87.4697 139.317 87.3366C139.276 87.1905 139.187 87.0624 139.065 86.973C138.942 86.8836 138.793 86.838 138.642 86.8436C138.167 86.8496 137.712 87.0327 137.365 87.3569C136.802 87.8305 136.299 88.3702 135.866 88.9644C135.249 89.7886 134.692 90.6553 134.197 91.558C133.621 92.5847 133.045 93.7306 132.468 94.9959C132.1 95.8266 131.804 96.6876 131.583 97.5693C131.358 98.4306 131.227 99.3138 131.192 100.203C131.152 100.946 131.234 101.69 131.435 102.405C131.496 102.678 131.621 102.932 131.799 103.147C131.978 103.362 132.205 103.531 132.461 103.641C132.659 103.722 132.873 103.754 133.085 103.733C133.297 103.711 133.5 103.638 133.677 103.52C134.168 103.214 134.6 102.823 134.954 102.365C135.435 101.765 135.875 101.133 136.271 100.474C136.721 99.7306 137.16 98.9561 137.588 98.1501C138.016 97.3441 138.428 96.5359 138.824 95.7254C139.22 94.9149 139.598 94.1674 139.959 93.483C140.341 92.5824 140.717 91.7246 141.087 90.9096C141.456 90.0946 141.764 89.3674 142.012 88.728C142.225 88.1946 142.39 87.643 142.505 87.08C142.586 86.6297 142.546 86.3212 142.383 86.1546C142.194 85.9925 142.282 85.7967 142.654 85.5805C143.068 85.3508 143.531 85.2235 144.004 85.209C144.596 85.1911 145.183 85.3187 145.713 85.5805C146.03 85.7472 146.307 85.9811 146.524 86.2657C146.741 86.5504 146.893 86.879 146.97 87.2286C147.211 88.1857 147.169 89.1926 146.848 90.1261C146.495 91.3473 146.043 92.5377 145.497 93.6856C144.907 94.9194 144.277 96.1396 143.606 97.3464C142.935 98.5531 142.372 99.6293 141.917 100.575C141.542 101.285 141.278 102.048 141.134 102.838C141.066 103.4 141.348 103.655 141.978 103.601C142.378 103.479 142.734 103.244 143.005 102.925C143.519 102.431 144 101.903 144.443 101.345C144.966 100.701 145.508 99.9805 146.071 99.1835C146.634 98.3865 147.156 97.5918 147.638 96.7993C148.116 96.0023 148.548 95.2481 148.935 94.5366C149.253 93.9682 149.529 93.3766 149.759 92.767C149.789 92.6699 149.842 92.5816 149.914 92.5097C149.986 92.4379 150.074 92.3848 150.171 92.355C150.345 92.3005 150.531 92.3005 150.705 92.355C150.874 92.4095 151.014 92.5284 151.096 92.686C151.146 92.7661 151.172 92.8585 151.172 92.9528C151.172 93.047 151.146 93.1394 151.096 93.2196C150.876 93.6698 150.561 94.307 150.151 95.131C149.741 95.955 149.255 96.8195 148.692 97.7246C148.129 98.6252 147.519 99.5505 146.861 100.501C146.239 101.393 145.563 102.245 144.835 103.054C144.202 103.762 143.49 104.396 142.714 104.945C142.129 105.391 141.423 105.65 140.688 105.688C140.215 105.734 139.738 105.637 139.32 105.409C138.902 105.182 138.562 104.834 138.344 104.411C137.795 103.347 137.594 102.138 137.77 100.953C137.276 101.765 136.725 102.541 136.122 103.277C135.596 103.933 134.964 104.497 134.251 104.945C133.602 105.349 132.87 105.603 132.11 105.688C131.254 105.753 130.396 105.597 129.618 105.235C128.629 104.886 127.793 104.203 127.254 103.304C126.773 102.451 126.485 101.503 126.41 100.528C126.332 99.4786 126.417 98.4238 126.66 97.4004C126.886 96.3841 127.189 95.3862 127.565 94.415C128.139 92.9046 128.877 91.4618 129.767 90.1126C130.484 89.0247 131.35 88.0425 132.34 87.1948C133.164 86.4854 134.112 85.9337 135.136 85.567C136.076 85.2411 137.067 85.0878 138.061 85.1145C138.414 85.1479 138.765 85.2112 139.108 85.3036C139.475 85.3992 139.823 85.5593 140.134 85.7764C140.463 86.0103 140.737 86.312 140.938 86.6612C141.166 87.0742 141.28 87.5404 141.269 88.0121C141.297 88.2358 141.274 88.4628 141.203 88.6767C141.132 88.8905 141.013 89.0858 140.857 89.2481C140.749 89.37 140.616 89.4666 140.466 89.5308C140.317 89.5951 140.155 89.6254 139.992 89.6196C139.667 89.6193 139.353 89.5018 139.108 89.2886C138.98 89.1841 138.879 89.0519 138.811 88.902C138.743 88.7521 138.711 88.5885 138.716 88.4241\",\n    fill: \"#DADBDC\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.4623 83.5542C76.9414 84.9158 77.1702 86.3528 77.1377 87.7959C77.1017 89.1555 76.858 90.5017 76.415 91.7876C75.9478 93.1623 75.2908 94.4649 74.4631 95.6578C73.5003 97.0875 72.3509 98.3822 71.0454 99.5077C69.7446 100.635 68.2889 101.57 66.7227 102.284C65.2352 103 63.6362 103.457 61.9948 103.635C61.7741 103.662 61.549 103.682 61.3194 103.695C61.083 103.695 60.8601 103.695 60.6439 103.695C59.4837 103.706 58.3294 103.528 57.2263 103.168C57.0453 103.121 56.8858 103.014 56.7738 102.865C56.7184 102.786 56.6792 102.697 56.6584 102.603C56.6375 102.509 56.6354 102.412 56.6522 102.317C56.6622 102.125 56.7441 101.943 56.8817 101.808C57.0193 101.673 57.2025 101.594 57.3952 101.588C58.6678 101.503 59.918 101.211 61.0965 100.723C62.3097 100.226 63.4574 99.5816 64.5141 98.8053C65.5832 98.0212 66.5439 97.0991 67.3711 96.063C68.2024 95.0213 68.8844 93.8687 69.3974 92.6387C70.2064 90.788 70.6205 88.789 70.6132 86.7692C70.6241 84.8838 70.2012 83.0212 69.3771 81.3253C68.5531 79.6886 67.32 78.2926 65.7974 77.2728C64.2366 76.2067 62.4171 75.5813 60.5307 75.4625C58.6443 75.3436 56.7608 75.7357 55.0785 76.5974C53.5838 77.3274 52.2157 78.292 51.0259 79.4544C49.8315 80.6209 48.8184 81.9595 48.0203 83.4259C47.2391 84.8336 46.6572 86.3429 46.2912 87.9107C45.9541 89.3326 45.8718 90.803 46.0481 92.2537C46.1905 93.5536 46.6961 94.7872 47.507 95.8131C47.6691 96.0338 47.6286 96.2949 47.3854 96.5966C47.0997 96.928 46.7414 97.1892 46.3385 97.3599C45.872 97.5692 45.3701 97.6884 44.8593 97.7111C44.3738 97.7439 43.8931 97.5973 43.5085 97.2991C42.6503 96.4905 41.9835 95.5006 41.5565 94.4015C41.163 93.3647 40.9749 92.2613 41.0027 91.1527C41.034 90.0211 41.2273 88.8997 41.5768 87.8229C41.9318 86.7149 42.4003 85.6466 42.9749 84.6349C43.8673 83.0679 44.9745 81.6334 46.2642 80.373C47.5919 79.0546 49.0621 77.8879 50.6477 76.8946C52.1953 75.9213 53.8526 75.1346 55.585 74.5509C57.1946 73.9939 58.8805 73.6886 60.5831 73.6458C61.7873 73.618 62.9916 73.6926 64.1832 73.8687C65.3806 74.0545 66.5538 74.3716 67.6818 74.8143C68.8594 75.2755 69.9774 75.8764 71.0117 76.6042C72.1646 77.4231 73.2086 78.3854 74.1186 79.4679C74.6269 80.1029 75.0788 80.7808 75.4694 81.4942C75.8617 82.1496 76.194 82.8391 76.4623 83.5542ZM46.1359 112.523C45.9744 111.719 46.0021 110.889 46.2169 110.098C46.4376 108.973 46.7663 107.656 47.2031 106.147C47.6398 104.639 48.1689 102.993 48.7903 101.21C49.4072 99.4086 50.0376 97.6255 50.6815 95.8604C51.3254 94.0953 51.9558 92.3595 52.5727 90.6529C53.1895 88.9644 53.7231 87.4492 54.1734 86.1073C54.6237 84.7655 54.9389 83.6556 55.119 82.7775C55.3081 81.8769 55.3216 81.3546 55.1595 81.2105C55.0244 81.1025 55.0582 80.9674 55.2608 80.8188C55.5296 80.6401 55.8299 80.5141 56.1456 80.4473C56.5777 80.3427 57.0187 80.2794 57.4627 80.2582C57.9322 80.2289 58.4034 80.2699 58.8608 80.3798C59.2915 80.484 59.6888 80.6954 60.0158 80.9944C60.3611 81.3324 60.5662 81.7883 60.5899 82.2709C60.6596 83.6681 60.4859 85.0668 60.0766 86.4045C59.6263 88.1201 59.0297 90 58.2867 92.0443C57.5438 94.0886 56.7288 96.2071 55.8417 98.4C54.9411 100.593 54.1171 102.678 53.3697 104.654C52.6222 106.631 51.9895 108.412 51.4717 109.997C51.0425 111.15 50.814 112.367 50.7963 113.597C50.7963 113.845 50.6049 114.083 50.2222 114.313C49.8129 114.552 49.3454 114.674 48.8713 114.664C48.3119 114.654 47.7647 114.498 47.2841 114.212C46.6876 113.824 46.2677 113.218 46.1156 112.523\",\n    fill: \"#16140E\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M90.0248 93.7261C89.6151 94.5366 89.1288 95.4012 88.5659 96.3197C88.0031 97.2383 87.3929 98.1749 86.7355 99.1295C86.1137 100.022 85.437 100.874 84.7093 101.683C84.0759 102.391 83.3644 103.025 82.5884 103.574C82.0036 104.021 81.2972 104.28 80.5622 104.317C80.0665 104.356 79.571 104.24 79.1438 103.986C78.7361 103.727 78.4031 103.366 78.1779 102.939C77.9126 102.425 77.7454 101.866 77.6849 101.291C77.6024 100.6 77.6024 99.9015 77.6849 99.2105C77.8102 98.2344 78.0227 97.2715 78.3198 96.3332C78.635 95.3201 78.9974 94.3047 79.4072 93.2871C79.8169 92.2695 80.2357 91.2901 80.6635 90.349C81.0867 89.4034 81.4582 88.5456 81.7779 87.7757C82.0516 87.1498 82.2774 86.504 82.4533 85.8439C82.5749 85.3216 82.5412 84.9659 82.352 84.7768C82.1629 84.5877 82.253 84.3963 82.6222 84.2027C83.0362 83.9725 83.4995 83.8451 83.973 83.8312C84.5645 83.8132 85.1513 83.9408 85.6819 84.2027C85.9983 84.3697 86.2746 84.6037 86.4916 84.8883C86.7085 85.1729 86.8609 85.5013 86.9382 85.8507C87.1818 86.8099 87.1396 87.8195 86.8166 88.755C86.464 89.9763 86.0123 91.1668 85.4657 92.3145C84.8759 93.5483 84.2455 94.7685 83.5745 95.9753C82.9036 97.182 82.3408 98.2582 81.886 99.2038C81.511 99.9137 81.2468 100.677 81.1025 101.466C81.035 102.029 81.3164 102.284 81.9468 102.23C82.358 102.12 82.7243 101.884 82.9937 101.554C83.4977 101.054 83.9713 100.524 84.4121 99.967C84.9344 99.3231 85.4702 98.6027 86.0196 97.8057C86.5689 97.0087 87.0912 96.2139 87.5866 95.4214C88.0819 94.6289 88.5209 93.8747 88.9036 93.1588C89.2214 92.59 89.4969 91.9985 89.7277 91.3892C89.7574 91.292 89.8105 91.2037 89.8824 91.1319C89.9542 91.06 90.0425 91.0069 90.1396 90.9772C90.3135 90.9235 90.4994 90.9235 90.6732 90.9772C90.8422 91.0317 90.983 91.1506 91.065 91.3081C91.1146 91.3882 91.1409 91.4806 91.1409 91.5749C91.1409 91.6692 91.1146 91.7616 91.065 91.8417C90.8443 92.292 90.5291 92.9291 90.1194 93.7531M88.3295 80.9201C88.4781 80.5914 88.6425 80.2627 88.8226 79.934C89.0027 79.6053 89.167 79.2901 89.3156 78.9884C89.4354 78.7809 89.5113 78.551 89.5385 78.313C89.5631 77.6913 89.3424 77.0848 88.9239 76.6244C88.5453 76.2074 88.0856 75.8719 87.5731 75.6383C87.1492 75.4394 86.69 75.3269 86.2222 75.3074C85.8125 75.3074 85.6076 75.4042 85.6076 75.5978C85.5757 75.8388 85.4904 76.0696 85.3577 76.2732C85.1911 76.5749 85.0064 76.9036 84.8038 77.2593C84.6012 77.6151 84.4166 77.9505 84.25 78.2657C84.1123 78.4985 84.0292 78.7594 84.0068 79.0289C83.9993 79.3445 84.0551 79.6583 84.1712 79.9519C84.2872 80.2454 84.461 80.5127 84.6823 80.7378C85.0808 81.1621 85.564 81.498 86.1006 81.7239C86.549 81.9179 87.0306 82.0234 87.519 82.0346C87.9693 82.0346 88.1944 81.9242 88.1944 81.7036C88.217 81.4296 88.2952 81.163 88.4241 80.9201\",\n    fill: \"#16140E\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M108.997 91.3757C109.019 91.2866 109.063 91.2044 109.124 91.1361C109.185 91.0678 109.263 91.0155 109.349 90.9839C109.528 90.9227 109.723 90.9227 109.902 90.9839C109.997 91.0035 110.087 91.0432 110.165 91.1003C110.243 91.1574 110.308 91.2306 110.355 91.3149C110.395 91.4068 110.412 91.507 110.405 91.6069C110.398 91.7069 110.367 91.8037 110.314 91.889C110.04 92.4924 109.698 93.1678 109.288 93.9153C108.878 94.6627 108.439 95.4372 107.971 96.2387C107.381 97.2486 106.737 98.2249 106.039 99.1633C105.36 100.085 104.61 100.952 103.797 101.757C103.056 102.493 102.218 103.122 101.304 103.628C100.478 104.096 99.5516 104.358 98.6027 104.391C98.0298 104.4 97.4574 104.353 96.8939 104.249C96.4121 104.155 95.9618 104.044 95.543 103.918C95.1175 103.797 94.692 103.689 94.2665 103.587C93.7733 103.486 93.2705 103.438 92.767 103.445C92.0881 103.436 91.4097 103.491 90.7408 103.608L89.3899 103.878C89.1431 103.942 88.8858 103.956 88.6334 103.918C88.4849 103.878 88.4038 103.709 88.4038 103.405C88.4752 102.851 88.6791 102.323 88.9982 101.865C89.4798 101.07 90.0029 100.302 90.5652 99.5618C91.2091 98.6973 91.9498 97.7517 92.7873 96.725C93.6248 95.6984 94.4826 94.6357 95.3607 93.537L97.9745 90.268C98.8391 89.1828 99.6136 88.1337 100.298 87.1205C99.7308 87.1136 99.1707 86.9942 98.65 86.7693C98.2456 86.579 97.8591 86.353 97.495 86.0939C97.1789 85.8694 96.8496 85.6642 96.5089 85.4793C96.1393 85.2906 95.7282 85.1977 95.3134 85.2091C94.6201 85.201 93.9503 85.4598 93.4425 85.9318C93.185 86.1525 92.9794 86.4275 92.8404 86.7369C92.7015 87.0463 92.6326 87.3825 92.6387 87.7217C92.6266 88.1157 92.7034 88.5074 92.8637 88.8676C93.0239 89.2277 93.2633 89.5471 93.564 89.802C93.8693 90.0658 94.2268 90.2624 94.6132 90.3787C94.9996 90.4951 95.4062 90.5287 95.8064 90.4774C95.973 90.4504 96.0001 90.5607 95.8875 90.8083C95.7345 91.119 95.5339 91.4038 95.2931 91.6526C94.9752 91.9928 94.6087 92.2841 94.2057 92.5172C93.7711 92.7771 93.2734 92.9126 92.767 92.9089C91.8663 92.9307 90.9914 92.6068 90.322 92.0038C90.001 91.7304 89.7443 91.3894 89.5704 91.0053C89.3964 90.6211 89.3094 90.2033 89.3156 89.7817C89.309 88.9932 89.4558 88.2109 89.7479 87.4785C90.016 86.7924 90.41 86.1624 90.9096 85.6211C91.4065 85.0809 92.0057 84.6447 92.6725 84.3378C93.3524 84.0344 94.0893 83.8801 94.8338 83.8853C95.343 83.8764 95.8501 83.954 96.3333 84.1149L97.6841 84.608C98.1637 84.7836 98.6905 84.9524 99.2713 85.101C99.9861 85.2685 100.719 85.3456 101.453 85.3307C102.304 85.3307 103.004 85.3104 103.554 85.2699C104.103 85.2294 104.576 85.1753 104.972 85.1078L105.999 84.9457C106.319 84.9023 106.641 84.882 106.964 84.8849C107.295 84.8849 107.457 85.02 107.457 85.2969C107.436 85.4787 107.35 85.6467 107.214 85.7697L106.37 86.6545L104.83 88.3228C104.173 89.0207 103.358 89.9461 102.385 91.0988C101.412 92.2515 100.246 93.6721 98.8864 95.3607C97.5355 97.0492 95.9775 99.0755 94.2124 101.439C94.5399 101.445 94.8624 101.521 95.158 101.662C95.4867 101.815 95.829 101.98 96.1847 102.155C96.5404 102.331 96.9119 102.502 97.2991 102.669C97.703 102.839 98.1375 102.924 98.5757 102.919C99.4934 102.927 100.392 102.653 101.149 102.135C102.069 101.54 102.907 100.827 103.641 100.014C104.464 99.1135 105.213 98.1492 105.884 97.1303C106.582 96.0766 107.205 95.041 107.755 94.0233C108.029 93.528 108.277 93.0778 108.498 92.6725C108.707 92.2679 108.886 91.8479 109.031 91.4162\",\n    fill: \"#16140E\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M128.294 91.3757C128.316 91.2867 128.359 91.2044 128.421 91.1361C128.482 91.0678 128.559 91.0156 128.645 90.984C128.825 90.9228 129.019 90.9228 129.199 90.984C129.294 91.0035 129.383 91.0432 129.461 91.1003C129.539 91.1574 129.604 91.2306 129.651 91.3149C129.691 91.4068 129.709 91.507 129.702 91.607C129.695 91.7069 129.663 91.8037 129.611 91.8891C129.336 92.4924 128.994 93.1679 128.584 93.9153C128.174 94.6628 127.735 95.4373 127.267 96.2388C126.678 97.2486 126.033 98.225 125.335 99.1633C124.657 100.085 123.907 100.952 123.093 101.757C122.353 102.493 121.514 103.123 120.601 103.628C119.775 104.096 118.848 104.358 117.899 104.391C117.326 104.4 116.754 104.353 116.19 104.249C115.708 104.155 115.258 104.044 114.839 103.918C114.414 103.797 113.988 103.689 113.563 103.587C113.07 103.486 112.567 103.438 112.063 103.446C111.384 103.436 110.706 103.491 110.037 103.608L108.686 103.878C108.437 103.943 108.178 103.957 107.923 103.918C107.774 103.878 107.7 103.709 107.7 103.405C107.771 102.851 107.975 102.323 108.295 101.865C108.777 101.071 109.3 100.302 109.862 99.5618C110.505 98.6973 111.246 97.7517 112.084 96.7251C112.921 95.6984 113.779 94.6358 114.657 93.5371L117.271 90.268C118.135 89.1829 118.91 88.1337 119.594 87.1206C119.027 87.1135 118.467 86.9941 117.946 86.7694C117.542 86.5791 117.155 86.353 116.791 86.0939C116.475 85.8695 116.146 85.6642 115.805 85.4793C115.436 85.2903 115.025 85.1974 114.61 85.2091C113.916 85.2011 113.247 85.4598 112.739 85.9318C112.482 86.1529 112.276 86.4279 112.137 86.7372C111.999 87.0465 111.929 87.3827 111.935 87.7217C111.923 88.1157 112 88.5074 112.16 88.8676C112.32 89.2278 112.56 89.5472 112.86 89.802C113.166 90.0659 113.523 90.2624 113.91 90.3788C114.296 90.4952 114.703 90.5288 115.103 90.4774C115.269 90.4504 115.296 90.5607 115.184 90.8084C115.031 91.119 114.83 91.4038 114.59 91.6527C114.272 91.9928 113.905 92.2841 113.502 92.5172C113.067 92.7772 112.57 92.9127 112.063 92.9089C111.163 92.9307 110.288 92.6069 109.618 92.0039C109.298 91.7301 109.041 91.3891 108.867 91.005C108.693 90.621 108.606 90.2033 108.612 89.7817C108.605 88.9932 108.752 88.211 109.044 87.4786C109.32 86.7903 109.724 86.1602 110.233 85.6211C110.735 85.0902 111.336 84.6633 112.003 84.3649C112.683 84.0616 113.42 83.9073 114.164 83.9123C114.673 83.9037 115.18 83.9813 115.663 84.142L117.014 84.635C117.494 84.8106 118.021 84.9795 118.602 85.1281C119.316 85.2955 120.049 85.3727 120.783 85.3577C121.634 85.3577 122.334 85.3375 122.884 85.2969C123.433 85.2564 123.906 85.2024 124.302 85.1348L125.329 84.9727C125.649 84.9294 125.972 84.9091 126.295 84.912C126.626 84.912 126.788 85.047 126.788 85.324C126.766 85.5058 126.68 85.6738 126.544 85.7968L125.7 86.6816C125.304 87.0958 124.775 87.6519 124.113 88.3498C123.451 89.0478 122.636 89.9731 121.668 91.1258C120.695 92.2786 119.529 93.6992 118.169 95.3877C116.809 97.0763 115.251 99.1026 113.495 101.467C113.823 101.472 114.145 101.548 114.441 101.689C114.77 101.843 115.112 102.007 115.468 102.182C115.823 102.358 116.195 102.529 116.582 102.696C116.986 102.866 117.42 102.951 117.859 102.946C118.776 102.954 119.674 102.681 120.432 102.162C121.352 101.567 122.19 100.854 122.924 100.041C123.746 99.1406 124.496 98.1762 125.167 97.1573C125.865 96.1037 126.488 95.068 127.038 94.0504C127.312 93.5551 127.56 93.1048 127.78 92.6996C127.99 92.2951 128.169 91.8751 128.314 91.4433\",\n    fill: \"#16140E\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M138.662 87.053C138.661 86.8347 138.725 86.6211 138.844 86.4384C138.969 86.2456 139.129 86.0783 139.317 85.9453C139.276 85.7992 139.187 85.6711 139.065 85.5817C138.942 85.4922 138.793 85.4466 138.641 85.4523C138.167 85.4583 137.712 85.6414 137.365 85.9656C136.815 86.4393 136.323 86.9766 135.899 87.5663C135.283 88.3906 134.725 89.2572 134.231 90.1599C133.654 91.1866 133.078 92.3325 132.502 93.5978C132.133 94.4286 131.837 95.2896 131.617 96.1712C131.392 97.0325 131.26 97.9157 131.225 98.8053C131.185 99.5476 131.268 100.291 131.468 101.007C131.534 101.281 131.663 101.536 131.846 101.749C132.03 101.963 132.261 102.13 132.522 102.236C132.719 102.318 132.933 102.349 133.145 102.328C133.357 102.307 133.561 102.233 133.738 102.115C134.229 101.809 134.661 101.418 135.014 100.96C135.495 100.36 135.935 99.7278 136.331 99.0688C136.782 98.3258 137.221 97.5513 137.648 96.7453C138.076 95.9393 138.488 95.1288 138.885 94.3138C139.281 93.5033 139.659 92.7558 140.019 92.0714C140.402 91.1708 140.778 90.313 141.147 89.498C141.516 88.683 141.825 87.9558 142.073 87.3164C142.286 86.783 142.451 86.2314 142.566 85.6684C142.647 85.2181 142.606 84.9097 142.444 84.7431C142.255 84.581 142.343 84.3851 142.714 84.1689C143.128 83.939 143.592 83.8116 144.065 83.7975C144.656 83.7792 145.243 83.9068 145.774 84.1689C146.091 84.3356 146.367 84.5695 146.584 84.8541C146.801 85.1388 146.953 85.4674 147.03 85.817C147.273 86.7763 147.231 87.7857 146.909 88.7213C146.555 89.9424 146.104 91.1328 145.558 92.2808C144.968 93.5145 144.337 94.7348 143.666 95.9415C142.996 97.1483 142.433 98.2245 141.978 99.1701C141.603 99.8799 141.339 100.643 141.194 101.433C141.127 101.996 141.408 102.25 142.039 102.196C142.439 102.074 142.795 101.839 143.065 101.521C143.58 101.024 144.061 100.494 144.504 99.9333C145.026 99.2894 145.569 98.5689 146.132 97.7719C146.695 96.9749 147.217 96.1802 147.699 95.3877C148.176 94.5907 148.608 93.8365 148.996 93.125C149.314 92.5566 149.589 91.965 149.82 91.3554C149.849 91.2583 149.902 91.17 149.974 91.0981C150.046 91.0263 150.134 90.9732 150.232 90.9434C150.405 90.8898 150.591 90.8898 150.765 90.9434C150.934 90.998 151.075 91.1169 151.157 91.2744C151.207 91.3545 151.233 91.4469 151.233 91.5412C151.233 91.6354 151.207 91.7278 151.157 91.808C150.936 92.2583 150.621 92.8954 150.211 93.7194C149.802 94.5434 149.315 95.408 148.752 96.313C148.19 97.2136 147.579 98.1389 146.922 99.089C146.3 99.9811 145.623 100.834 144.896 101.642C144.262 102.35 143.551 102.985 142.775 103.533C142.19 103.98 141.484 104.239 140.749 104.276C140.275 104.322 139.799 104.225 139.381 103.998C138.963 103.77 138.623 103.423 138.405 103C137.856 101.936 137.655 100.726 137.831 99.5415C137.336 100.353 136.785 101.13 136.183 101.865C135.657 102.522 135.024 103.085 134.312 103.533C133.663 103.938 132.931 104.191 132.171 104.276C131.315 104.342 130.457 104.186 129.679 103.824C128.69 103.475 127.854 102.791 127.315 101.892C126.834 101.039 126.546 100.092 126.47 99.116C126.393 98.067 126.477 97.0122 126.72 95.9888C126.947 94.9725 127.249 93.9746 127.625 93.0035C128.199 91.493 128.938 90.0502 129.827 88.701C130.544 87.6106 131.41 86.6261 132.4 85.7765C133.225 85.0674 134.173 84.5156 135.197 84.1487C136.136 83.8227 137.127 83.6694 138.121 83.6962C138.475 83.7274 138.825 83.7884 139.168 83.8785C139.536 83.9738 139.883 84.134 140.195 84.3513C140.523 84.5849 140.798 84.8867 140.999 85.2361C141.227 85.6491 141.341 86.1153 141.33 86.587C141.357 86.8106 141.334 87.0376 141.263 87.2514C141.191 87.4651 141.074 87.6604 140.918 87.823C140.81 87.9449 140.676 88.0415 140.527 88.1057C140.377 88.17 140.216 88.2003 140.053 88.1945C139.728 88.1942 139.414 88.0767 139.168 87.8635C139.041 87.7591 138.94 87.6268 138.872 87.4769C138.804 87.327 138.771 87.1635 138.776 86.999\",\n    fill: \"#16140E\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.708 7.60227C203.708 7.60227 211.691 7.14974 217.257 12.2289C217.257 12.2289 212.792 12.857 212.677 53.308L193.853 50.6807C193.853 50.6807 193.32 30.6004 203.708 7.60902\",\n    fill: \"white\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M225.213 72.7871C225.213 72.7871 231.42 71.7673 230.988 76.6843L229.914 79.2914C229.914 79.2914 230.623 86.4712 225.794 84.0802L225.213 72.7871Z\",\n    fill: \"#E3C69D\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M183.452 71.6186C183.452 71.6186 182 64.7023 177.144 68.3699C176.362 69.9435 176.052 71.71 176.252 73.4558C176.482 76.7046 176.759 79.7777 181.135 78.8592C185.512 77.9406 185.283 74.9957 185.283 74.9957L183.452 71.6186Z\",\n    fill: \"#E3C69D\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.079 50.9373L187.788 50.6806C187.874 50.6488 187.949 50.5924 188.004 50.5185C188.022 50.4905 188.038 50.4611 188.051 50.4307L187.997 50.5658L187.896 50.836L187.693 51.3763L187.308 52.457L186.565 54.6656C186.093 56.1245 185.642 57.5902 185.214 59.0626C184.35 62.0074 183.602 64.977 182.972 67.9714C181.65 73.9056 181.02 79.9731 181.094 86.0525C181.161 89.0283 181.562 91.9872 182.29 94.8735C182.472 95.5826 182.715 96.2716 182.932 96.974C183.148 97.6765 183.431 98.3249 183.749 99.0003C184.315 100.282 185.042 101.487 185.91 102.587C186.808 103.66 187.826 104.628 188.943 105.471C190.093 106.31 191.324 107.031 192.617 107.625C193.922 108.228 195.278 108.712 196.67 109.071C198.069 109.441 199.497 109.696 200.938 109.834C203.816 110.132 206.723 109.971 209.55 109.354C212.326 108.771 214.958 107.639 217.29 106.025C219.546 104.421 221.359 102.271 222.559 99.777C222.862 99.1579 223.123 98.5194 223.342 97.8656C223.565 97.1902 223.713 96.5147 223.896 95.8393C224.207 94.3669 224.463 92.8945 224.666 91.4221C225.061 88.4745 225.178 85.4963 225.017 82.5268C224.943 81.0273 224.821 79.5144 224.679 77.9879L224.463 75.6915L224.355 74.5365L224.301 73.9354C224.301 73.6585 224.301 73.3951 224.301 73.1789C224.355 71.4296 224.558 69.9436 224.72 68.3834L224.956 66.1073L224.997 64.9996C224.997 64.6618 225.031 64.2769 224.997 64.0675C224.989 63.9156 224.971 63.7645 224.943 63.6149L224.862 63.0746C224.814 62.7099 224.74 62.3587 224.673 62.0074C224.538 61.3221 224.362 60.6455 224.146 59.9812C223.949 59.3722 223.689 58.7858 223.369 58.2318C223.238 58.0136 223.084 57.8098 222.91 57.624C222.878 57.586 222.842 57.552 222.802 57.5226L222.714 57.4551H222.667H222.707H222.835L221.397 56.0029C221.397 56.0705 221.397 56.0029 221.397 56.0029V55.9489C221.386 55.9076 221.372 55.867 221.356 55.8273C221.326 55.7428 221.287 55.6614 221.241 55.5842C221.158 55.4406 221.045 55.3163 220.91 55.2195C220.758 55.1097 220.586 55.0296 220.404 54.9831C220.296 54.9831 220.195 54.9425 220.046 54.9155L219.485 54.8547L215.007 54.3482L206.038 53.281L187.916 51.0386L187.079 50.9373ZM187.477 49.0934L205.653 50.4442L215.156 51.2007L219.918 51.606L220.512 51.66C220.776 51.6931 221.037 51.7404 221.295 51.8018C221.866 51.9417 222.406 52.1843 222.889 52.5178C223.39 52.8655 223.815 53.3113 224.139 53.8281C224.298 54.0785 224.434 54.343 224.544 54.6183C224.601 54.7575 224.651 54.8995 224.693 55.0438C224.693 55.1181 224.733 55.1924 224.754 55.2735C224.777 55.3738 224.795 55.4753 224.808 55.5774L223.369 54.1253L223.565 54.1658H223.666L223.849 54.2198C223.943 54.2536 224.058 54.3009 224.132 54.3347C224.289 54.4092 224.44 54.495 224.585 54.5913C224.717 54.6748 224.844 54.7673 224.963 54.8682C225.077 54.9577 225.186 55.0547 225.287 55.1587C225.658 55.521 225.987 55.9243 226.267 56.3609C226.744 57.1324 227.133 57.9548 227.428 58.8127C227.702 59.6089 227.928 60.4208 228.104 61.2442C228.192 61.6495 228.286 62.0547 228.347 62.4532L228.448 63.0543C228.492 63.2776 228.523 63.5031 228.543 63.7298C228.569 64.1909 228.569 64.6532 228.543 65.1144C228.543 65.5264 228.502 65.9316 228.468 66.3301L228.273 68.6739C228.144 70.1936 227.975 71.7808 227.962 73.1249C227.962 73.3005 227.962 73.4153 227.962 73.5301L228.023 74.084L228.151 75.2322L228.401 77.5489C228.556 79.0956 228.705 80.6626 228.806 82.2768C229.014 85.4846 228.919 88.7049 228.522 91.8949C228.306 93.4821 228.029 95.0558 227.705 96.6228C227.503 97.4266 227.313 98.2708 227.03 99.0746C226.763 99.8872 226.442 100.681 226.071 101.452C225.34 103.008 224.404 104.46 223.288 105.768C222.162 107.057 220.888 108.209 219.492 109.199C216.717 111.098 213.589 112.421 210.293 113.09C205.437 114.109 200.406 113.939 195.629 112.597C194.036 112.159 192.485 111.578 190.996 110.861C189.489 110.14 188.059 109.269 186.727 108.26C185.389 107.22 184.176 106.028 183.114 104.708C182.099 103.35 181.26 101.871 180.615 100.304C180.277 99.5474 180.041 98.7639 179.75 97.9939C179.46 97.2239 179.291 96.4269 179.075 95.6367C178.373 92.5021 178.026 89.2984 178.041 86.0862C178.105 79.7853 178.963 73.5175 180.595 67.4311C181.365 64.4007 182.254 61.4108 183.263 58.4615C183.762 56.9891 184.282 55.5166 184.856 54.0712L185.822 51.9166L186.275 50.836L186.511 50.2956L186.626 50.0255L186.687 49.8904C186.71 49.8367 186.737 49.7848 186.768 49.735C186.838 49.6198 186.93 49.5189 187.038 49.4379L187.477 49.0934Z\",\n    fill: \"#181712\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.16 55.7935C223.16 55.7935 225.74 56.138 226.787 63.723C227.01 65.3575 225.97 71.9834 226.152 73.8138C226.996 82.2025 227.712 87.3222 225.787 96.3661C223.538 106.903 213.927 111.779 204.174 111.901C204.174 111.901 225.436 109.875 222.552 78.8389C222.552 78.8389 222.37 72.6858 223.133 70.0044C223.896 67.323 223.748 59.8731 223.545 58.3939\",\n    fill: \"#D0A98C\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M183.296 101.222C184.252 102.862 185.483 104.324 186.937 105.545C188.376 106.787 189.964 107.844 191.664 108.693C195.111 110.345 198.822 111.376 202.627 111.739L204.065 111.901C204.511 111.941 204.984 111.975 205.457 111.982C206.395 112.016 207.341 111.982 208.287 111.914C210.164 111.794 212.022 111.463 213.825 110.928C215.606 110.395 217.304 109.618 218.87 108.618C220.409 107.556 221.776 106.264 222.923 104.789L222.97 104.714C223.092 104.55 223.273 104.44 223.474 104.406C223.676 104.372 223.882 104.418 224.051 104.533C224.219 104.649 224.337 104.825 224.378 105.025C224.42 105.225 224.383 105.433 224.274 105.606C223.234 107.437 221.859 109.057 220.221 110.381C218.534 111.651 216.655 112.645 214.656 113.326C210.688 114.646 206.461 114.998 202.329 114.353C198.226 113.891 194.257 112.609 190.658 110.584C188.863 109.543 187.225 108.251 185.795 106.747C184.339 105.255 183.192 103.49 182.418 101.553C182.362 101.434 182.357 101.298 182.401 101.174C182.446 101.051 182.539 100.95 182.658 100.895C182.777 100.839 182.913 100.833 183.037 100.878C183.16 100.923 183.261 101.015 183.316 101.135L183.296 101.222Z\",\n    fill: \"#010101\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M194.373 49.5931C194.373 49.5931 206.632 51.5788 209.59 41.7447C212.549 31.9106 213.278 26.7031 213.278 26.7031L212.677 53.3012L194.373 49.5931Z\",\n    fill: \"#E2E3E4\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.16 55.7935C223.16 55.7935 218.432 46.5065 221.599 41.1098L223.16 38.6581C223.16 38.6581 232.102 42.7849 239.944 38.0907C247.785 33.3965 249.663 24.3932 249.663 24.3932C249.663 24.3932 250.724 10.7496 239.68 6.70387C228.637 2.65809 223.47 6.15002 223.47 6.15002C223.47 6.15002 217.175 8.43294 214.865 14.6738C212.555 20.9147 212.704 53.3012 212.704 53.3012L223.16 55.7935Z\",\n    fill: \"#CE352B\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M226.597 35.7133C226.597 35.7133 243.483 34.7204 247.846 23.6098L249.535 20.4083C249.995 23.9894 249.316 27.6245 247.595 30.7982C245.873 33.972 243.196 36.5234 239.944 38.0908C228.306 44.1156 223.153 38.6582 223.153 38.6582L226.597 35.7133Z\",\n    fill: \"#881E1A\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M193.853 50.6806C194.253 35.8125 197.603 21.1719 203.708 7.60897C203.708 7.60897 200.83 10.4795 195.238 4.66414C189.645 -1.15124 175.151 3.0769 175.151 3.0769C175.151 3.0769 157.772 11.4656 170.484 28.2904C170.484 28.2904 176.279 35.0446 187.369 33.1467C187.369 33.1467 189.868 31.7958 190.186 34.0585C190.503 36.3211 191.766 41.2855 188.349 48.1545C188.349 48.1545 185.795 51.3223 189.49 50.7752C193.185 50.2281 193.867 50.6806 193.867 50.6806\",\n    fill: \"#269F49\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M195.697 26.3317C195.697 26.3317 194.455 34.2814 181.588 33.3223C168.721 32.3632 166.235 21.4146 166.235 21.4146L165.634 17.2878C165.634 17.2878 177.859 32.7684 195.697 26.3317Z\",\n    fill: \"#096735\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199.331 11.5737C197.99 8.75447 195.835 6.40184 193.144 4.81946C190.42 3.19619 187.324 2.30504 184.154 2.2326C180.965 2.11118 177.798 2.80878 174.955 4.25886C172.116 5.7052 169.767 7.95575 168.2 10.7294C166.651 13.5273 166.119 16.7757 166.694 19.9219C167.314 23.0954 168.947 25.9822 171.348 28.1485C176.123 32.5793 183.377 34.0315 189.672 32.1605H189.611C190.161 31.8742 190.693 31.5562 191.205 31.2082C191.721 30.8595 192.217 30.483 192.691 30.0802C193.644 29.2979 194.438 28.3393 195.028 27.257C195.063 27.188 195.124 27.1357 195.198 27.1117C195.271 27.0876 195.351 27.0937 195.42 27.1286C195.489 27.1636 195.541 27.2245 195.565 27.2979C195.589 27.3714 195.583 27.4514 195.548 27.5204C194.95 28.6926 194.131 29.7384 193.137 30.6003C192.653 31.0306 192.146 31.4342 191.617 31.8093C191.086 32.188 190.534 32.5353 189.963 32.8495H189.922C186.647 33.8863 183.167 34.0974 179.791 33.4641C176.372 32.8412 173.183 31.311 170.558 29.0333C167.884 26.7263 166.031 23.6146 165.276 20.165C164.549 16.6664 165.058 13.0241 166.715 9.85811C168.386 6.70577 170.955 4.12015 174.097 2.42847C177.234 0.784384 180.732 -0.0496194 184.273 0.00228246C187.814 0.0541843 191.286 0.990345 194.373 2.72566C197.547 4.50091 200.118 7.1847 201.755 10.4322C201.834 10.5919 201.88 10.7654 201.892 10.943C201.903 11.1205 201.879 11.2986 201.822 11.467C201.765 11.6354 201.675 11.7908 201.557 11.9244C201.44 12.0581 201.297 12.1672 201.137 12.2457C200.978 12.3242 200.804 12.3705 200.627 12.3819C200.449 12.3934 200.271 12.3697 200.103 12.3123C199.934 12.2549 199.779 12.1649 199.645 12.0475C199.512 11.93 199.402 11.7874 199.324 11.6277\",\n    fill: \"#231F20\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M222.444 37.7328C225.679 39.2118 229.26 39.7659 232.791 39.3335C234.521 39.098 236.214 38.6441 237.83 37.9827C239.416 37.2788 240.903 36.3705 242.254 35.281C244.909 33.0874 246.83 30.1343 247.759 26.818C248.213 25.184 248.388 23.4852 248.279 21.7928C248.266 21.3704 248.233 20.9488 248.177 20.5298L247.961 19.287C247.775 18.4766 247.526 17.6818 247.218 16.9095C246.913 16.1247 246.55 15.3638 246.131 14.6334L245.455 13.5729C245.232 13.215 244.935 12.8975 244.685 12.5733C243.618 11.2678 242.361 10.1294 240.957 9.19621C239.549 8.25478 238.014 7.52009 236.398 7.0146C235.982 6.86801 235.558 6.744 235.128 6.64312C234.721 6.52818 234.305 6.44464 233.885 6.39321C233.467 6.33918 233.048 6.26488 232.629 6.2176L231.359 6.16357C229.661 6.11454 227.962 6.26873 226.3 6.62285C224.61 6.96623 222.97 7.51988 221.417 8.27088C219.832 9.04899 218.38 10.0725 217.115 11.3035L216.642 11.7696C216.504 11.9239 216.375 12.0863 216.257 12.2559C216.003 12.614 215.777 12.9911 215.581 13.3838C215.188 14.1858 214.914 15.0416 214.771 15.9234C214.768 15.9421 214.762 15.9601 214.753 15.9764C214.743 15.9927 214.731 16.0069 214.715 16.0183C214.7 16.0296 214.683 16.0378 214.665 16.0424C214.647 16.047 214.627 16.0478 214.609 16.045C214.575 16.0388 214.545 16.0214 214.523 15.9956C214.501 15.9697 214.488 15.9371 214.487 15.9031C214.462 14.9537 214.604 14.0072 214.906 13.1069C215.053 12.6431 215.236 12.1915 215.453 11.7561C215.564 11.5229 215.691 11.2972 215.831 11.0806L216.264 10.5133C217.447 9.00549 218.836 7.67095 220.39 6.54856C223.588 4.22491 227.47 3.03627 231.42 3.17145L232.899 3.24575C233.386 3.29978 233.872 3.38083 234.365 3.45513C234.853 3.52016 235.336 3.61946 235.81 3.75231C236.291 3.85681 236.767 3.9853 237.235 4.1373C239.125 4.74141 240.918 5.61495 242.558 6.73092C244.202 7.83341 245.663 9.18723 246.887 10.7429C247.178 11.1414 247.515 11.5129 247.772 11.9317L248.562 13.188C249.042 14.0559 249.455 14.9591 249.798 15.8896C250.16 16.8134 250.449 17.7642 250.663 18.7332L250.886 20.1988C250.944 20.6899 250.978 21.1836 250.987 21.678C251.063 23.6546 250.805 25.6298 250.224 27.5204C249.664 29.4054 248.802 31.187 247.671 32.7954C246.535 34.3901 245.169 35.808 243.618 37.0033C240.55 39.3341 236.876 40.7322 233.035 41.0305C229.194 41.3287 225.348 40.5145 221.957 38.6851C221.837 38.6182 221.747 38.5073 221.707 38.3757C221.666 38.244 221.678 38.1018 221.74 37.9788C221.802 37.8558 221.909 37.7615 222.039 37.7156C222.169 37.6698 222.312 37.6759 222.437 37.7328\",\n    fill: \"#231F20\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.099 55.9691C218.782 54.701 214.396 53.6794 209.962 52.9094C205.556 52.1347 201.101 51.6698 196.629 51.5181C194.404 51.446 192.177 51.4889 189.956 51.6464C189.409 51.6937 188.862 51.7477 188.322 51.8153H188.2C188.124 51.8203 188.047 51.8203 187.97 51.8153C187.807 51.81 187.645 51.7804 187.491 51.7275C187.158 51.6179 186.871 51.4019 186.674 51.1128C186.45 50.7873 186.363 50.3874 186.43 49.9984C186.449 49.9038 186.476 49.8112 186.512 49.7215L186.599 49.5323L186.687 49.3432L187.363 47.8573L187.943 46.3376C188.674 44.3048 189.129 42.183 189.294 40.0292C189.378 38.9659 189.378 37.8977 189.294 36.8344C189.254 36.3076 189.193 35.7808 189.105 35.2674C189.03 34.7811 188.921 34.3004 188.781 33.8288V33.7612C188.728 33.5914 188.709 33.4128 188.726 33.2357C188.742 33.0586 188.793 32.8864 188.876 32.7289C188.958 32.5715 189.071 32.4319 189.208 32.3182C189.345 32.2044 189.503 32.1187 189.672 32.0659C189.842 32.0132 190.021 31.9944 190.198 32.0106C190.375 32.0268 190.547 32.0778 190.705 32.1606C190.862 32.2434 191.002 32.3564 191.116 32.4931C191.229 32.6298 191.315 32.7876 191.368 32.9575V33.0183C191.528 33.6328 191.643 34.258 191.712 34.8892C191.787 35.4903 191.834 36.0914 191.847 36.6858C191.889 37.8768 191.837 39.0692 191.692 40.252C191.398 42.6064 190.786 44.9101 189.875 47.1008L189.2 48.7083L188.403 50.2618L188.301 50.4577C188.301 50.5117 188.301 50.4577 188.301 50.4577C188.304 50.433 188.304 50.4081 188.301 50.3834C188.321 50.275 188.296 50.1633 188.234 50.0727C188.196 50.0185 188.141 49.9782 188.078 49.9579C188.659 49.9106 189.24 49.8768 189.814 49.8565C192.098 49.7903 194.384 49.8421 196.663 50.0119C201.195 50.3501 205.698 51.0069 210.138 51.9774C214.56 52.9391 218.923 54.1523 223.207 55.6111C223.231 55.6187 223.252 55.6309 223.271 55.647C223.289 55.6631 223.304 55.6828 223.315 55.7049C223.326 55.727 223.332 55.751 223.333 55.7755C223.334 55.8 223.33 55.8245 223.322 55.8475C223.306 55.8933 223.274 55.9314 223.231 55.954C223.189 55.9766 223.139 55.982 223.092 55.9691\",\n    fill: \"#231F20\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M183.452 71.6186C183.452 71.6186 182 64.7023 177.144 68.3699C176.362 69.9435 176.052 71.71 176.252 73.4558C176.482 76.7046 176.759 79.7777 181.135 78.8592C185.512 77.9406 185.283 74.9957 185.283 74.9957L183.452 71.6186Z\",\n    fill: \"#E3C69D\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M196.669 44.9057C198.133 45.4482 199.628 45.8993 201.148 46.2565C202.694 46.6258 204.259 46.9166 205.835 47.1278C207.414 47.3495 209.003 47.487 210.597 47.5398C212.195 47.5973 213.796 47.5702 215.392 47.4588C215.597 47.4551 215.796 47.5287 215.95 47.665C216.103 47.8013 216.2 47.9904 216.22 48.1946C216.241 48.3988 216.183 48.6032 216.06 48.7672C215.937 48.9313 215.756 49.0428 215.554 49.0798C213.907 49.3307 212.248 49.4953 210.583 49.5729C208.916 49.6612 207.245 49.6612 205.578 49.5729C203.905 49.486 202.237 49.3146 200.58 49.0595C198.9 48.8047 197.237 48.4438 195.602 47.9789C195.211 47.8436 194.886 47.5635 194.694 47.1962C194.503 46.8289 194.459 46.4021 194.572 46.0037C194.686 45.6052 194.947 45.2652 195.303 45.0535C195.659 44.8417 196.083 44.7744 196.487 44.8652L196.609 44.9057H196.669Z\",\n    fill: \"#231F20\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M185.478 58.9005C185.475 58.5714 185.542 58.2455 185.674 57.9441C185.806 57.6426 186 57.3725 186.244 57.1512C186.487 56.93 186.775 56.7626 187.087 56.6602C187.4 56.5578 187.731 56.5225 188.058 56.5568C191.969 56.962 199.068 58.171 201.155 58.5357C201.31 58.5623 201.45 58.6466 201.547 58.7717C201.643 58.8969 201.689 59.0538 201.675 59.2112C201.506 60.6971 201.134 64.0472 200.905 64.4052C200.675 64.7631 198.737 63.9594 198.054 64.1147C197.062 64.1979 196.062 64.148 195.083 63.9661C194.407 63.8513 192.955 63.777 192.955 63.777L191.604 64.5605C191.272 64.5998 190.935 64.5652 190.618 64.4592C189.923 64.1465 189.271 63.7447 188.68 63.2637L186.586 62.4937L185.512 62.3857L185.478 58.9005Z\",\n    fill: \"#231F20\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.266 72.7534C227.604 72.6721 227.954 72.647 228.3 72.6791C228.65 72.6961 228.996 72.7528 229.333 72.8479C230.081 73.0235 230.743 73.4562 231.204 74.0704L231.38 74.3271L231.508 74.6108C231.592 74.8003 231.651 75.0002 231.684 75.2051C231.736 75.5838 231.736 75.9679 231.684 76.3466C231.658 77.0534 231.556 77.7554 231.38 78.4404C231.316 78.6624 231.22 78.8739 231.096 79.0686C230.972 79.2517 230.827 79.4195 230.664 79.5684L230.515 79.717L230.454 79.7845C230.413 79.8584 230.384 79.9381 230.367 80.0209C230.304 80.2798 230.27 80.5448 230.265 80.8111V81.2839C230.261 81.486 230.239 81.6872 230.198 81.8851C230.069 82.6327 229.742 83.3323 229.252 83.9113C229 84.2103 228.677 84.4423 228.313 84.5867C227.966 84.6953 227.594 84.6953 227.246 84.5867C227.552 84.5077 227.836 84.3598 228.077 84.1545C228.278 83.9613 228.44 83.7322 228.556 83.4791C228.769 82.9409 228.883 82.369 228.894 81.7905C228.904 81.6646 228.904 81.5381 228.894 81.4123V81.1894V80.8989C228.864 80.5079 228.89 80.1146 228.968 79.7305C229.02 79.4928 229.109 79.2648 229.232 79.0551C229.274 78.984 229.321 78.9162 229.374 78.8524L229.475 78.7376L229.678 78.5417C229.759 78.4715 229.831 78.3922 229.894 78.3053C229.945 78.2204 229.986 78.1297 230.015 78.0352C230.183 77.4503 230.309 76.8545 230.394 76.2521C230.421 76.107 230.439 75.9603 230.448 75.813C230.46 75.6873 230.46 75.5606 230.448 75.4348C230.458 75.2868 230.442 75.1382 230.4 74.9958L230.353 74.8134L230.272 74.6445C230.154 74.4057 229.997 74.1888 229.806 74.0029C229.583 73.8062 229.341 73.632 229.083 73.4828C228.532 73.1666 227.935 72.9387 227.314 72.8074L227.266 72.7534Z\",\n    fill: \"#181712\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199.027 79.6696C199.027 79.6696 194.353 75.374 188.896 77.2719C183.438 79.1698 180.163 86.694 173.881 87.106C173.881 87.106 169.917 86.8561 172.395 83.5533C172.395 83.5533 173.267 82.8374 174.699 84.195L175.057 84.1544C175.057 84.1544 174.766 82.709 172.78 81.6554C172.284 81.402 171.739 81.2576 171.182 81.232C170.625 81.2063 170.069 81.3 169.552 81.5068C169.126 81.694 168.728 81.9395 168.37 82.2362C167.524 82.8966 166.85 83.7522 166.407 84.7296C165.963 85.7071 165.763 86.7774 165.823 87.849C166.019 91.5773 168.187 96.7848 178.596 98.3856C180.283 98.8374 182.076 98.6672 183.648 97.906C184.917 97.5937 186.253 97.6906 187.464 98.1829C189.294 99.0205 193.151 100.608 196.65 99.2974C198.053 98.8288 199.363 98.1179 200.52 97.1968C200.664 97.0625 200.853 96.9877 201.05 96.9877C201.247 96.9877 201.436 97.0625 201.58 97.1968C202.931 98.5477 206.646 101.763 209.935 101.925C214.076 102.087 214.987 102.046 216.061 101.567C217.135 101.087 219.438 102.445 220.235 102.519C221.032 102.593 232.562 106.335 236.344 94.1304C236.344 94.1304 236.621 91.942 235.507 90.7128C234.392 89.4835 233.798 89.6794 233.798 89.6794C233.798 89.6794 232.96 89.5578 232.805 90.1995C232.65 90.8411 233.643 91.037 233.643 91.037C233.643 91.037 234.716 92.1514 232.488 93.6238C230.259 95.0963 228.192 92.8268 228.192 92.8268C226.856 91.3686 225.743 89.7208 224.889 87.9368C224.069 86.1923 222.951 84.6039 221.586 83.2426C221.586 83.2426 213.67 76.0426 206.511 81.0948C206.511 81.0948 205.876 79.109 204.485 79.109C204.368 79.235 204.291 79.3921 204.262 79.5611C204.233 79.7302 204.254 79.904 204.323 80.0614C204.559 80.6152 204.599 83.837 202.614 83.6006C200.628 83.3642 201.087 81.3717 201.087 81.3717C201.177 80.8897 201.389 80.4386 201.702 80.0614C201.658 79.7136 201.551 79.377 201.384 79.0685C201.148 78.7105 200.236 78.3931 199 79.6764\",\n    fill: \"#231F20\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.698 63.1759L223.984 54.7331L187.511 49.0423L180.419 70.6055L179.406 91.5436L185.485 104.714L203.508 113.697L221.282 107.078L228.374 89.1796L227.698 63.1759Z\",\n    fill: \"url(#paint0_linear_34_51345)\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M200.006 103.897C200.115 103.577 200.285 103.282 200.506 103.026C200.634 102.872 200.793 102.746 200.972 102.654C201.105 102.588 201.252 102.553 201.401 102.553C201.549 102.553 201.696 102.588 201.83 102.654C201.988 102.74 202.141 102.834 202.289 102.938L202.667 103.195C202.91 103.364 203.14 103.532 203.342 103.654C203.489 103.758 203.654 103.831 203.829 103.87C203.966 103.834 204.098 103.78 204.22 103.708C204.747 103.409 205.302 103.16 205.875 102.965L206.01 103.08C205.87 103.753 205.515 104.363 204.997 104.816C204.852 104.946 204.691 105.057 204.518 105.147C204.276 105.27 204.005 105.326 203.734 105.309C203.306 105.256 202.902 105.086 202.566 104.816C202.3 104.611 202.052 104.385 201.823 104.14L201.262 103.526C201.303 103.526 201.33 103.472 201.262 103.472C201.152 103.483 201.045 103.513 200.945 103.559C200.682 103.689 200.429 103.838 200.188 104.005L200.006 103.897Z\",\n    fill: \"#231F20\"\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.98 69.4371C198.021 69.0179 197.898 68.5992 197.638 68.2682C197.377 67.9373 196.999 67.7196 196.582 67.6607C195.434 67.5594 195.454 69.1669 195.657 69.687C195.814 69.9542 195.997 70.2053 196.204 70.4367C196.309 70.5965 196.464 70.7177 196.644 70.7823C196.824 70.8468 197.021 70.8512 197.204 70.7947C197.455 70.6762 197.665 70.4829 197.802 70.2411C197.94 69.9993 198 69.7209 197.974 69.4438\",\n    fill: \"#231F20\"\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M211.88 69.0993C211.88 69.0993 210.928 68.9642 210.624 70.5042C210.428 71.4971 210.435 72.2198 211.144 72.3481C211.853 72.4764 212.684 71.2877 212.927 70.5042C213.319 69.2277 211.887 69.0993 211.887 69.0993\",\n    fill: \"#231F20\"\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M225.314 37.5436C225.513 37.486 225.7 37.3946 225.868 37.2735L225.969 37.1992L226.057 37.1181L226.003 37.1654L225.841 37.3478C225.72 37.4828 225.598 37.6314 225.483 37.7868C225.24 38.0975 225.004 38.4149 224.808 38.7459C224.348 39.4213 223.916 40.0967 223.524 40.7721C222.729 42.1377 222.137 43.6122 221.768 45.1489C221.602 45.8771 221.541 46.6254 221.586 47.371C221.615 47.7408 221.679 48.1071 221.775 48.4652L222.079 49.7147C222.282 50.5455 222.498 51.3763 222.721 52.2003C222.944 53.0243 223.18 53.8753 223.443 54.598V54.6588C223.481 54.7829 223.471 54.9163 223.417 55.0341C223.363 55.1518 223.268 55.246 223.15 55.2989C223.032 55.3518 222.898 55.3599 222.775 55.3217C222.651 55.2834 222.545 55.2015 222.478 55.0911C222.018 54.2468 221.687 53.4971 221.323 52.6933C220.958 51.8896 220.647 51.1061 220.296 50.3023L219.796 49.1068C219.606 48.6563 219.461 48.188 219.364 47.7087C219.179 46.7499 219.133 45.7695 219.229 44.7977C219.43 42.9368 219.906 41.1159 220.64 39.3943C220.987 38.5478 221.374 37.7192 221.802 36.9087C222.018 36.5035 222.241 36.0982 222.478 35.6997C222.599 35.4971 222.727 35.2945 222.863 35.0918L223.092 34.7676L223.248 34.5718L223.383 34.4232C223.427 34.3757 223.475 34.3306 223.524 34.2881L223.653 34.1868C223.832 34.0587 224.03 33.9606 224.24 33.8964C224.712 33.7934 225.204 33.8729 225.619 34.119C226.034 34.3651 226.34 34.7594 226.475 35.2222C226.611 35.6851 226.565 36.1821 226.349 36.613C226.132 37.0438 225.76 37.3764 225.308 37.5436\",\n    fill: \"#231F20\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    }\n  }, _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M208.996 63.4123C208.996 63.4123 208.713 65.9181 212.373 66.3031C216.034 66.6881 222.181 67.5594 223.18 67.0123C224.18 66.4652 225.882 65.0603 225.814 64.5875C225.747 64.1147 222.147 63.4123 222.147 63.4123H216.203C215.472 63.6108 214.723 63.7375 213.967 63.7905C213.542 63.8509 213.109 63.8326 212.691 63.7365C211.509 63.5744 209.017 63.4123 209.017 63.4123\",\n    fill: \"#CDCFCF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    }\n  }, _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M185.485 61.5279C185.485 61.5279 185.201 64.0337 188.862 64.4187C189.747 64.5133 190.246 65.0941 191.449 65.1887C191.692 65.1887 192.556 64.7767 192.799 64.8037C196.393 65.1211 200.425 65.3845 201.127 64.9996C201.173 64.1829 201.173 63.3644 201.127 62.5478C201.04 62.075 198.615 61.5346 198.615 61.5346H192.671C191.94 61.7333 191.191 61.86 190.435 61.9129C190.01 61.9731 189.578 61.9548 189.159 61.8589C187.977 61.6968 185.485 61.5346 185.485 61.5346\",\n    fill: \"#CDCFCF\"\n  }))), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M208.739 61.278C208.708 60.9688 208.74 60.6565 208.834 60.3604C208.929 60.0643 209.083 59.7908 209.288 59.5569C209.492 59.3231 209.743 59.134 210.024 59.0013C210.305 58.8686 210.61 58.7952 210.921 58.7857C215.649 58.6438 224.976 59.9609 225.409 61.8791L225.76 63.419C225.82 63.682 225.786 63.958 225.662 64.1979C225.538 64.4377 225.334 64.626 225.085 64.7294L224.537 64.9455C224.306 65.038 224.111 65.2041 223.984 65.4183C223.82 65.7496 223.59 66.0439 223.308 66.2828C222.991 66.4247 219.337 65.371 211.333 65.3778C211.088 65.3739 210.851 65.291 210.658 65.1414C210.11 64.7159 209.037 63.7905 209.05 63.4055C209.05 63.1556 208.888 62.2303 208.793 61.2644\",\n    fill: \"#231F20\"\n  })), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.201 86.3226C204.201 86.3226 214.616 81.4258 221.228 88.592C227.84 95.7582 229.185 95.6029 229.185 95.6029C229.185 95.6029 223.025 87.6802 220.404 85.1811C217.783 82.6821 209.678 80.4194 204.228 86.3226\",\n    fill: \"#5D5E61\"\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M200.54 85.843C200.54 85.843 197.473 79.8723 193.32 79.7642C189.166 79.6561 179.514 89.9496 172.679 88.8959C172.679 88.8959 172.773 90.9222 181.506 87.3087C190.24 83.6952 190.544 81.6689 192.725 81.8513C198 82.297 198.021 85.9376 200.533 85.8295\",\n    fill: \"#5D5E61\"\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M186.606 58.4952C186.606 58.4952 191.604 57.8198 200.533 60.2648C200.533 60.2648 201.323 60.0149 200.803 59.6231C200.283 59.2314 186.714 56.1582 186.619 58.4952\",\n    fill: \"#5D5E61\"\n  })), _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M209.665 60.8119C209.665 60.8119 214.507 59.6029 224.146 62.1627C224.146 62.1627 225.051 62.5545 224.821 62.1222C224.591 61.6899 211.265 57.8468 209.665 60.8119Z\",\n    fill: \"#5D5E61\"\n  })), _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M182.533 69.9841C182.135 69.3632 181.618 68.8263 181.014 68.4036C180.772 68.2239 180.491 68.1033 180.195 68.0517C179.898 68.0001 179.593 68.0188 179.305 68.1065L179.102 68.174L178.866 68.2686C178.72 68.3347 178.578 68.4091 178.44 68.4915C178.19 68.6453 177.962 68.8341 177.765 69.0521C177.349 69.5083 177.071 70.0725 176.961 70.6798C176.824 71.3873 176.795 72.1114 176.873 72.8277C176.873 73.0168 176.914 73.1856 176.941 73.3883C176.968 73.5909 177.002 73.8138 177.015 74.0232C177.045 74.4436 177.045 74.8657 177.015 75.2862C177.015 75.6982 176.954 76.0967 176.948 76.4682C176.925 76.8056 176.983 77.1435 177.116 77.4543C177.255 77.7815 177.469 78.071 177.742 78.2989C178.014 78.5267 178.337 78.6864 178.683 78.7646L179.467 78.8457C179.492 78.8518 179.514 78.8662 179.53 78.8864C179.545 78.9066 179.554 78.9315 179.554 78.9571C179.554 78.9827 179.545 79.0077 179.53 79.0279C179.514 79.0481 179.492 79.0624 179.467 79.0686L178.683 79.1428C178.235 79.1125 177.8 78.9737 177.416 78.7384C177.033 78.5031 176.712 78.1784 176.482 77.792C176.242 77.3955 176.097 76.9497 176.056 76.4884C176.009 76.0629 175.995 75.6644 175.955 75.2794C175.914 74.8944 175.867 74.5297 175.793 74.165C175.759 73.9826 175.712 73.8003 175.664 73.6247C175.617 73.449 175.563 73.2194 175.516 73.0168C175.327 72.1615 175.268 71.2826 175.34 70.4096C175.402 69.4235 175.806 68.4898 176.482 67.7688C176.831 67.414 177.243 67.1276 177.697 66.9245C177.917 66.8292 178.143 66.748 178.373 66.6813L178.704 66.5935L179.082 66.5395C179.578 66.4785 180.082 66.5361 180.551 66.7075C181.021 66.8789 181.443 67.1593 181.784 67.5256C182.383 68.1604 182.806 68.9402 183.013 69.7883C183.023 69.8404 183.015 69.8942 182.99 69.9413C182.966 69.9883 182.926 70.0257 182.878 70.0475C182.83 70.0693 182.775 70.0743 182.724 70.0616C182.672 70.0488 182.627 70.0192 182.594 69.9774L182.533 69.9841Z\",\n    fill: \"#181712\"\n  })), _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M225.213 72.7871C225.213 72.7871 231.42 71.7673 230.988 76.6843L229.914 79.2914C229.914 79.2914 230.623 86.4712 225.794 84.0802L225.213 72.7871Z\",\n    fill: \"#E3C69D\"\n  })), _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.079 50.9373L187.788 50.6806C187.874 50.6488 187.949 50.5924 188.004 50.5185C188.022 50.4905 188.038 50.4611 188.051 50.4307L187.997 50.5658L187.896 50.836L187.693 51.3763L187.308 52.457L186.565 54.6656C186.093 56.1245 185.642 57.5902 185.214 59.0626C184.35 62.0074 183.602 64.977 182.972 67.9714C181.65 73.9056 181.02 79.9731 181.094 86.0525C181.161 89.0283 181.562 91.9872 182.29 94.8735C182.472 95.5826 182.715 96.2716 182.932 96.974C183.148 97.6765 183.431 98.3249 183.749 99.0003C184.315 100.282 185.042 101.487 185.91 102.587C186.808 103.66 187.826 104.628 188.943 105.471C190.093 106.31 191.324 107.031 192.617 107.625C193.922 108.228 195.278 108.712 196.67 109.071C198.069 109.441 199.497 109.696 200.938 109.834C203.816 110.132 206.723 109.971 209.55 109.354C212.326 108.771 214.958 107.639 217.29 106.025C219.546 104.421 221.359 102.271 222.559 99.777C222.862 99.1579 223.123 98.5194 223.342 97.8656C223.565 97.1902 223.713 96.5147 223.896 95.8393C224.207 94.3669 224.463 92.8945 224.666 91.4221C225.061 88.4745 225.178 85.4963 225.017 82.5268C224.943 81.0273 224.821 79.5144 224.679 77.9879L224.463 75.6915L224.355 74.5365L224.301 73.9354C224.301 73.6585 224.301 73.3951 224.301 73.1789C224.355 71.4296 224.558 69.9436 224.72 68.3834L224.956 66.1073L224.997 64.9996C224.997 64.6618 225.031 64.2769 224.997 64.0675C224.989 63.9156 224.971 63.7645 224.943 63.6149L224.862 63.0746C224.814 62.7099 224.74 62.3587 224.673 62.0074C224.538 61.3221 224.362 60.6455 224.146 59.9812C223.949 59.3722 223.689 58.7858 223.369 58.2318C223.238 58.0136 223.084 57.8098 222.91 57.624C222.878 57.586 222.842 57.552 222.802 57.5226L222.714 57.4551H222.667H222.707H222.835L221.397 56.0029C221.397 56.0705 221.397 56.0029 221.397 56.0029V55.9489C221.386 55.9076 221.372 55.867 221.356 55.8273C221.326 55.7428 221.287 55.6614 221.241 55.5842C221.158 55.4406 221.045 55.3163 220.91 55.2195C220.758 55.1097 220.586 55.0296 220.404 54.9831C220.296 54.9831 220.195 54.9425 220.046 54.9155L219.485 54.8547L215.007 54.3482L206.038 53.281L187.916 51.0386L187.079 50.9373ZM187.477 49.0934L205.653 50.4442L215.156 51.2007L219.918 51.606L220.512 51.66C220.776 51.6931 221.037 51.7404 221.295 51.8018C221.866 51.9417 222.406 52.1843 222.889 52.5178C223.39 52.8655 223.815 53.3113 224.139 53.8281C224.298 54.0785 224.434 54.343 224.544 54.6183C224.601 54.7575 224.651 54.8995 224.693 55.0438C224.693 55.1181 224.733 55.1924 224.754 55.2735C224.777 55.3738 224.795 55.4753 224.808 55.5774L223.369 54.1253L223.565 54.1658H223.666L223.849 54.2198C223.943 54.2536 224.058 54.3009 224.132 54.3347C224.289 54.4092 224.44 54.495 224.585 54.5913C224.717 54.6748 224.844 54.7673 224.963 54.8682C225.077 54.9577 225.186 55.0547 225.287 55.1587C225.658 55.521 225.987 55.9243 226.267 56.3609C226.744 57.1324 227.133 57.9548 227.428 58.8127C227.702 59.6089 227.928 60.4208 228.104 61.2442C228.192 61.6495 228.286 62.0547 228.347 62.4532L228.448 63.0543C228.492 63.2776 228.523 63.5031 228.543 63.7298C228.569 64.1909 228.569 64.6532 228.543 65.1144C228.543 65.5264 228.502 65.9316 228.468 66.3301L228.273 68.6739C228.144 70.1936 227.975 71.7808 227.962 73.1249C227.962 73.3005 227.962 73.4153 227.962 73.5301L228.023 74.084L228.151 75.2322L228.401 77.5489C228.556 79.0956 228.705 80.6626 228.806 82.2768C229.014 85.4846 228.919 88.7049 228.522 91.8949C228.306 93.4821 228.029 95.0558 227.705 96.6228C227.503 97.4266 227.313 98.2708 227.03 99.0746C226.763 99.8872 226.442 100.681 226.071 101.452C225.34 103.008 224.404 104.46 223.288 105.768C222.162 107.057 220.888 108.209 219.492 109.199C216.717 111.098 213.589 112.421 210.293 113.09C205.437 114.109 200.406 113.939 195.629 112.597C194.036 112.159 192.485 111.578 190.996 110.861C189.489 110.14 188.059 109.269 186.727 108.26C185.389 107.22 184.176 106.028 183.114 104.708C182.099 103.35 181.26 101.871 180.615 100.304C180.277 99.5474 180.041 98.7639 179.75 97.9939C179.46 97.2239 179.291 96.4269 179.075 95.6367C178.373 92.5021 178.026 89.2984 178.041 86.0862C178.105 79.7853 178.963 73.5175 180.595 67.4311C181.365 64.4007 182.254 61.4108 183.263 58.4615C183.762 56.9891 184.282 55.5166 184.856 54.0712L185.822 51.9166L186.275 50.836L186.511 50.2956L186.626 50.0255L186.687 49.8904C186.71 49.8367 186.737 49.7848 186.768 49.735C186.838 49.6198 186.93 49.5189 187.038 49.4379L187.477 49.0934Z\",\n    fill: \"#181712\"\n  })), _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M221.37 55.5234C221.37 55.5234 225.74 56.1381 226.773 63.7231C226.996 65.3576 225.956 71.9835 226.138 73.8139C226.983 82.2026 227.699 87.3223 225.774 96.3662C223.524 106.903 213.913 111.773 204.16 111.901C204.16 111.901 223.93 110.03 222.755 82.0607C222.641 79.7212 222.809 77.3764 223.254 75.0769C223.585 73.4086 223.991 71.5579 224.335 70.3489C225.098 67.6473 222.741 59.576 222.538 58.0765\",\n    fill: \"#D0A98C\"\n  })), _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M183.296 101.222C184.252 102.862 185.483 104.324 186.937 105.545C188.376 106.787 189.964 107.844 191.664 108.693C195.111 110.345 198.822 111.376 202.627 111.739L204.065 111.901C204.511 111.941 204.984 111.975 205.457 111.982C206.395 112.016 207.341 111.982 208.287 111.914C210.164 111.794 212.022 111.463 213.825 110.928C215.606 110.395 217.304 109.618 218.87 108.618C220.409 107.556 221.776 106.264 222.923 104.789L222.97 104.714C223.092 104.55 223.273 104.44 223.474 104.406C223.676 104.372 223.882 104.418 224.051 104.533C224.219 104.649 224.337 104.825 224.378 105.025C224.42 105.225 224.383 105.433 224.274 105.606C223.234 107.437 221.859 109.057 220.221 110.381C218.534 111.651 216.655 112.645 214.656 113.326C210.688 114.646 206.461 114.998 202.329 114.353C198.226 113.891 194.257 112.609 190.658 110.584C188.863 109.543 187.225 108.251 185.795 106.747C184.339 105.255 183.192 103.49 182.418 101.553C182.362 101.434 182.357 101.298 182.401 101.174C182.446 101.051 182.539 100.95 182.658 100.895C182.777 100.839 182.913 100.833 183.037 100.878C183.16 100.923 183.261 101.015 183.316 101.135L183.296 101.222Z\",\n    fill: \"#010101\"\n  })), _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M194.373 49.5931C194.373 49.5931 206.632 51.5788 209.59 41.7447C212.549 31.9106 213.278 26.7031 213.278 26.7031L212.677 53.3012L194.373 49.5931Z\",\n    fill: \"#E2E3E4\"\n  })), _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.16 55.7935C223.16 55.7935 218.432 46.5065 221.599 41.1098L223.16 38.6581C223.16 38.6581 232.102 42.7849 239.944 38.0907C247.785 33.3965 249.663 24.3932 249.663 24.3932C249.663 24.3932 250.724 10.7496 239.68 6.70387C228.637 2.65809 223.47 6.15002 223.47 6.15002C223.47 6.15002 217.175 8.43294 214.865 14.6738C212.555 20.9147 212.704 53.3012 212.704 53.3012L223.16 55.7935Z\",\n    fill: \"#CE352B\"\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M226.597 35.7133C226.597 35.7133 243.483 34.7204 247.846 23.6098L249.535 20.4083C249.995 23.9894 249.316 27.6245 247.595 30.7982C245.873 33.972 243.196 36.5234 239.944 38.0908C228.306 44.1156 223.153 38.6582 223.153 38.6582L226.597 35.7133Z\",\n    fill: \"#881E1A\"\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M193.853 50.6806C194.253 35.8125 197.603 21.1719 203.708 7.60897C203.708 7.60897 200.83 10.4795 195.238 4.66414C189.645 -1.15124 175.151 3.0769 175.151 3.0769C175.151 3.0769 157.772 11.4656 170.484 28.2904C170.484 28.2904 176.279 35.0446 187.369 33.1467C187.369 33.1467 189.868 31.7958 190.186 34.0585C190.503 36.3211 191.766 41.2855 188.349 48.1545C188.349 48.1545 185.795 51.3223 189.49 50.7752C193.185 50.2281 193.867 50.6806 193.867 50.6806\",\n    fill: \"#269F49\"\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M195.697 26.3317C195.697 26.3317 194.455 34.2814 181.588 33.3223C168.721 32.3632 166.235 21.4146 166.235 21.4146L165.634 17.2878C165.634 17.2878 177.859 32.7684 195.697 26.3317Z\",\n    fill: \"#096735\"\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199.331 11.5737C197.99 8.75447 195.835 6.40184 193.144 4.81946C190.42 3.19619 187.324 2.30504 184.154 2.2326C180.965 2.11118 177.798 2.80878 174.955 4.25886C172.116 5.7052 169.767 7.95575 168.2 10.7294C166.651 13.5273 166.119 16.7757 166.694 19.9219C167.314 23.0954 168.947 25.9822 171.348 28.1485C176.123 32.5793 183.377 34.0315 189.672 32.1605H189.611C190.161 31.8742 190.693 31.5562 191.205 31.2082C191.721 30.8595 192.217 30.483 192.691 30.0802C193.644 29.2979 194.438 28.3393 195.028 27.257C195.063 27.188 195.124 27.1357 195.198 27.1117C195.271 27.0876 195.351 27.0937 195.42 27.1286C195.489 27.1636 195.541 27.2245 195.565 27.2979C195.589 27.3714 195.583 27.4514 195.548 27.5204C194.95 28.6926 194.131 29.7384 193.137 30.6003C192.653 31.0306 192.146 31.4342 191.617 31.8093C191.086 32.188 190.534 32.5353 189.963 32.8495H189.922C186.647 33.8863 183.167 34.0974 179.791 33.4641C176.372 32.8412 173.183 31.311 170.558 29.0333C167.884 26.7263 166.031 23.6146 165.276 20.165C164.549 16.6664 165.058 13.0241 166.715 9.85811C168.386 6.70577 170.955 4.12015 174.097 2.42847C177.234 0.784384 180.732 -0.0496194 184.273 0.00228246C187.814 0.0541843 191.286 0.990345 194.373 2.72566C197.547 4.50091 200.118 7.1847 201.755 10.4322C201.834 10.5919 201.88 10.7654 201.892 10.943C201.903 11.1205 201.879 11.2986 201.822 11.467C201.765 11.6354 201.675 11.7908 201.557 11.9244C201.44 12.0581 201.297 12.1672 201.137 12.2457C200.978 12.3242 200.804 12.3705 200.627 12.3819C200.449 12.3934 200.271 12.3697 200.103 12.3123C199.934 12.2549 199.779 12.1649 199.645 12.0475C199.512 11.93 199.402 11.7874 199.324 11.6277\",\n    fill: \"#231F20\"\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M222.444 37.7328C225.679 39.2118 229.26 39.7659 232.791 39.3335C234.521 39.098 236.214 38.6441 237.83 37.9827C239.416 37.2788 240.903 36.3705 242.254 35.281C244.909 33.0874 246.83 30.1343 247.759 26.818C248.213 25.184 248.388 23.4852 248.279 21.7928C248.266 21.3704 248.233 20.9488 248.177 20.5298L247.961 19.287C247.775 18.4766 247.526 17.6818 247.218 16.9095C246.913 16.1247 246.55 15.3638 246.131 14.6334L245.455 13.5729C245.232 13.215 244.935 12.8975 244.685 12.5733C243.618 11.2678 242.361 10.1294 240.957 9.19621C239.549 8.25478 238.014 7.52009 236.398 7.0146C235.982 6.86801 235.558 6.744 235.128 6.64312C234.721 6.52818 234.305 6.44464 233.885 6.39321C233.467 6.33918 233.048 6.26488 232.629 6.2176L231.359 6.16357C229.661 6.11454 227.962 6.26873 226.3 6.62285C224.61 6.96623 222.97 7.51988 221.417 8.27088C219.832 9.04899 218.38 10.0725 217.115 11.3035L216.642 11.7696C216.504 11.9239 216.375 12.0863 216.257 12.2559C216.003 12.614 215.777 12.9911 215.581 13.3838C215.188 14.1858 214.914 15.0416 214.771 15.9234C214.768 15.9421 214.762 15.9601 214.753 15.9764C214.743 15.9927 214.731 16.0069 214.715 16.0183C214.7 16.0296 214.683 16.0378 214.665 16.0424C214.647 16.047 214.627 16.0478 214.609 16.045C214.575 16.0388 214.545 16.0214 214.523 15.9956C214.501 15.9697 214.488 15.9371 214.487 15.9031C214.462 14.9537 214.604 14.0072 214.906 13.1069C215.053 12.6431 215.236 12.1915 215.453 11.7561C215.564 11.5229 215.691 11.2972 215.831 11.0806L216.264 10.5133C217.447 9.00549 218.836 7.67095 220.39 6.54856C223.588 4.22491 227.47 3.03627 231.42 3.17145L232.899 3.24575C233.386 3.29978 233.872 3.38083 234.365 3.45513C234.853 3.52016 235.336 3.61946 235.81 3.75231C236.291 3.85681 236.767 3.9853 237.235 4.1373C239.125 4.74141 240.918 5.61495 242.558 6.73092C244.202 7.83341 245.663 9.18723 246.887 10.7429C247.178 11.1414 247.515 11.5129 247.772 11.9317L248.562 13.188C249.042 14.0559 249.455 14.9591 249.798 15.8896C250.16 16.8134 250.449 17.7642 250.663 18.7332L250.886 20.1988C250.944 20.6899 250.978 21.1836 250.987 21.678C251.063 23.6546 250.805 25.6298 250.224 27.5204C249.664 29.4054 248.802 31.187 247.671 32.7954C246.535 34.3901 245.169 35.808 243.618 37.0033C240.55 39.3341 236.876 40.7322 233.035 41.0305C229.194 41.3287 225.348 40.5145 221.957 38.6851C221.837 38.6182 221.747 38.5073 221.707 38.3757C221.666 38.244 221.678 38.1018 221.74 37.9788C221.802 37.8558 221.909 37.7615 222.039 37.7156C222.169 37.6698 222.312 37.6759 222.437 37.7328\",\n    fill: \"#231F20\"\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.099 55.9691C218.782 54.701 214.396 53.6794 209.962 52.9094C205.556 52.1347 201.101 51.6698 196.629 51.5181C194.404 51.446 192.177 51.4889 189.956 51.6464C189.409 51.6937 188.862 51.7477 188.322 51.8153H188.2C188.124 51.8203 188.047 51.8203 187.97 51.8153C187.807 51.81 187.645 51.7804 187.491 51.7275C187.158 51.6179 186.871 51.4019 186.674 51.1128C186.45 50.7873 186.363 50.3874 186.43 49.9984C186.449 49.9038 186.476 49.8112 186.512 49.7215L186.599 49.5323L186.687 49.3432L187.363 47.8573L187.943 46.3376C188.674 44.3048 189.129 42.183 189.294 40.0292C189.378 38.9659 189.378 37.8977 189.294 36.8344C189.254 36.3076 189.193 35.7808 189.105 35.2674C189.03 34.7811 188.921 34.3004 188.781 33.8288V33.7612C188.728 33.5914 188.709 33.4128 188.726 33.2357C188.742 33.0586 188.793 32.8864 188.876 32.7289C188.958 32.5715 189.071 32.4319 189.208 32.3182C189.345 32.2044 189.503 32.1187 189.672 32.0659C189.842 32.0132 190.021 31.9944 190.198 32.0106C190.375 32.0268 190.547 32.0778 190.705 32.1606C190.862 32.2434 191.002 32.3564 191.116 32.4931C191.229 32.6298 191.315 32.7876 191.368 32.9575V33.0183C191.528 33.6328 191.643 34.258 191.712 34.8892C191.787 35.4903 191.834 36.0914 191.847 36.6858C191.889 37.8768 191.837 39.0692 191.692 40.252C191.398 42.6064 190.786 44.9101 189.875 47.1008L189.2 48.7083L188.403 50.2618L188.301 50.4577C188.301 50.5117 188.301 50.4577 188.301 50.4577C188.304 50.433 188.304 50.4081 188.301 50.3834C188.321 50.275 188.296 50.1633 188.234 50.0727C188.196 50.0185 188.141 49.9782 188.078 49.9579C188.659 49.9106 189.24 49.8768 189.814 49.8565C192.098 49.7903 194.384 49.8421 196.663 50.0119C201.195 50.3501 205.698 51.0069 210.138 51.9774C214.56 52.9391 218.923 54.1523 223.207 55.6111C223.231 55.6187 223.252 55.6309 223.271 55.647C223.289 55.6631 223.304 55.6828 223.315 55.7049C223.326 55.727 223.332 55.751 223.333 55.7755C223.334 55.8 223.33 55.8245 223.322 55.8475C223.306 55.8933 223.274 55.9314 223.231 55.954C223.189 55.9766 223.139 55.982 223.092 55.9691\",\n    fill: \"#231F20\"\n  })), _path71 || (_path71 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M196.669 44.9057C198.133 45.4482 199.628 45.8993 201.148 46.2565C202.694 46.6258 204.259 46.9166 205.835 47.1278C207.414 47.3495 209.003 47.487 210.597 47.5398C212.195 47.5973 213.796 47.5702 215.392 47.4588C215.597 47.4551 215.796 47.5287 215.95 47.665C216.103 47.8013 216.2 47.9904 216.22 48.1946C216.241 48.3988 216.183 48.6032 216.06 48.7672C215.937 48.9313 215.756 49.0428 215.554 49.0798C213.907 49.3307 212.248 49.4953 210.583 49.5729C208.916 49.6612 207.245 49.6612 205.578 49.5729C203.905 49.486 202.237 49.3146 200.58 49.0595C198.9 48.8047 197.237 48.4438 195.602 47.9789C195.211 47.8436 194.886 47.5635 194.694 47.1962C194.503 46.8289 194.459 46.4021 194.572 46.0037C194.686 45.6052 194.947 45.2652 195.303 45.0535C195.659 44.8417 196.083 44.7744 196.487 44.8652L196.609 44.9057H196.669Z\",\n    fill: \"#231F20\"\n  })), _path72 || (_path72 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M200.006 103.897C200.115 103.577 200.285 103.282 200.506 103.026C200.634 102.872 200.793 102.746 200.972 102.654C201.105 102.588 201.252 102.553 201.401 102.553C201.549 102.553 201.696 102.588 201.83 102.654C201.988 102.74 202.141 102.834 202.289 102.938L202.667 103.195C202.91 103.364 203.14 103.532 203.342 103.654C203.489 103.758 203.654 103.831 203.829 103.87C203.966 103.834 204.098 103.78 204.22 103.708C204.747 103.409 205.302 103.16 205.875 102.965L206.01 103.08C205.87 103.753 205.515 104.363 204.997 104.816C204.852 104.946 204.691 105.057 204.518 105.147C204.276 105.27 204.005 105.326 203.734 105.309C203.306 105.256 202.902 105.086 202.566 104.816C202.3 104.611 202.052 104.385 201.823 104.14L201.262 103.526C201.303 103.526 201.33 103.472 201.262 103.472C201.152 103.483 201.045 103.513 200.945 103.559C200.682 103.689 200.429 103.838 200.188 104.005L200.006 103.897Z\",\n    fill: \"#231F20\"\n  })), _path73 || (_path73 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.98 69.4371C198.021 69.0179 197.898 68.5992 197.638 68.2682C197.377 67.9373 196.999 67.7196 196.582 67.6607C195.434 67.5594 195.454 69.1669 195.657 69.687C195.814 69.9542 195.997 70.2053 196.204 70.4367C196.309 70.5965 196.464 70.7177 196.644 70.7823C196.824 70.8468 197.021 70.8512 197.204 70.7947C197.455 70.6762 197.665 70.4829 197.802 70.2411C197.94 69.9993 198 69.7209 197.974 69.4438\",\n    fill: \"#231F20\"\n  })), _path74 || (_path74 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M211.88 69.0993C211.88 69.0993 210.928 68.9642 210.624 70.5042C210.428 71.4971 210.435 72.2198 211.144 72.3481C211.853 72.4764 212.684 71.2877 212.927 70.5042C213.319 69.2277 211.887 69.0993 211.887 69.0993\",\n    fill: \"#231F20\"\n  })), _path75 || (_path75 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M225.314 37.5436C225.513 37.486 225.7 37.3946 225.868 37.2735L225.969 37.1992L226.057 37.1181L226.003 37.1654L225.841 37.3478C225.72 37.4828 225.598 37.6314 225.483 37.7868C225.24 38.0975 225.004 38.4149 224.808 38.7459C224.348 39.4213 223.916 40.0967 223.524 40.7721C222.729 42.1377 222.137 43.6122 221.768 45.1489C221.602 45.8771 221.541 46.6254 221.586 47.371C221.615 47.7408 221.679 48.1071 221.775 48.4652L222.079 49.7147C222.282 50.5455 222.498 51.3763 222.721 52.2003C222.944 53.0243 223.18 53.8753 223.443 54.598V54.6588C223.481 54.7829 223.471 54.9163 223.417 55.0341C223.363 55.1518 223.268 55.246 223.15 55.2989C223.032 55.3518 222.898 55.3599 222.775 55.3217C222.651 55.2834 222.545 55.2015 222.478 55.0911C222.018 54.2468 221.687 53.4971 221.323 52.6933C220.958 51.8896 220.647 51.1061 220.296 50.3023L219.796 49.1068C219.606 48.6563 219.461 48.188 219.364 47.7087C219.179 46.7499 219.133 45.7695 219.229 44.7977C219.43 42.9368 219.906 41.1159 220.64 39.3943C220.987 38.5478 221.374 37.7192 221.802 36.9087C222.018 36.5035 222.241 36.0982 222.478 35.6997C222.599 35.4971 222.727 35.2945 222.863 35.0918L223.092 34.7676L223.248 34.5718L223.383 34.4232C223.427 34.3757 223.475 34.3306 223.524 34.2881L223.653 34.1868C223.832 34.0587 224.03 33.9606 224.24 33.8964C224.712 33.7934 225.204 33.8729 225.619 34.119C226.034 34.3651 226.34 34.7594 226.475 35.2222C226.611 35.6851 226.565 36.1821 226.349 36.613C226.132 37.0438 225.76 37.3764 225.308 37.5436\",\n    fill: \"#231F20\"\n  })), _path76 || (_path76 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M183.911 59.1031C183.553 57.7523 184.789 56.3001 186.559 56.1448C191.557 55.6923 200.31 57.6577 202.701 58.5966C202.868 58.6496 203.007 58.7651 203.09 58.9187C203.173 59.0724 203.194 59.2523 203.147 59.4206C202.58 60.8052 201.391 63.9729 201.08 64.2634C200.77 64.5538 198.946 63.3853 198.216 63.4326C197.178 63.386 196.147 63.239 195.137 62.9936C194.398 62.879 193.654 62.8046 192.908 62.7707C192.34 63.0949 192.063 63.2637 191.557 63.6082C191.22 63.6743 190.874 63.6743 190.537 63.6082C189.784 63.375 189.06 63.0602 188.376 62.6694C187.443 62.5005 186.971 62.433 186.012 62.3317C185.539 62.3924 185.336 62.4262 184.836 62.5005L183.945 59.1234\",\n    fill: \"#231F20\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    }\n  }, _path77 || (_path77 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M184.573 61.6427C184.573 61.6427 184.924 63.9256 188.713 63.75C189.631 63.7095 190.206 64.2093 191.415 64.2363C191.665 64.2363 192.516 63.7703 192.765 63.7905C196.433 64.0202 200.377 65.0806 201.161 64.8644C201.399 64.0821 201.588 63.2859 201.728 62.4802C201.728 61.9939 199.189 60.947 199.189 60.947C196.996 60.5609 194.767 60.4182 192.543 60.5215C191.734 60.7548 190.91 60.9331 190.077 61.0551C189.613 61.1471 189.139 61.1856 188.666 61.1699C187.29 61.2562 185.919 61.414 184.559 61.6427\",\n    fill: \"#CDCFCF\"\n  }))), _path78 || (_path78 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M185.147 58.3804C185.147 58.3804 191.955 55.4761 201.607 60.1365C201.607 60.1365 202.573 60.096 202.059 59.5827C201.546 59.0693 184.789 56.084 185.147 58.3804Z\",\n    fill: \"#5D5E61\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    }\n  }, _path79 || (_path79 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M208.111 63.4596C208.111 63.4596 208.442 65.756 212.245 65.5871C216.048 65.4183 222.167 66.8164 223.248 66.4517C224.328 66.087 226.449 65.1549 226.469 64.6686C226.49 64.1823 222.721 62.7234 222.721 62.7234C220.529 62.3679 218.306 62.2434 216.088 62.3519C215.282 62.5883 214.46 62.7688 213.63 62.8922C213.165 62.9838 212.691 63.0201 212.218 63.0003C210.845 63.0824 209.476 63.2334 208.118 63.4528\",\n    fill: \"#CDCFCF\"\n  }))), _path80 || (_path80 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M207.267 61.4874C206.794 60.2649 207.726 58.833 209.341 58.4885C215.149 57.2457 226.638 59.988 226.672 61.9737C226.672 62.6153 226.672 62.9328 226.672 63.5677C226.656 63.8337 226.548 64.0857 226.365 64.2796C226.182 64.4735 225.937 64.5968 225.672 64.6281L225.051 64.7091C224.794 64.7434 224.557 64.8622 224.375 65.0469C224.131 65.3414 223.83 65.5847 223.491 65.7628C223.139 65.8439 219.384 63.3651 210.995 64.8645C210.731 64.9117 210.458 64.8787 210.212 64.7699C209.536 64.466 208.186 63.8649 208.111 63.4596C208.064 63.2165 207.652 62.3654 207.301 61.4334\",\n    fill: \"#231F20\"\n  })), _path81 || (_path81 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M208.233 60.7241C208.233 60.7241 214.717 57.1038 225.179 61.8588C225.179 61.8588 226.125 62.4667 225.976 61.9871C225.828 61.5076 209.462 57.4348 208.233 60.7241Z\",\n    fill: \"#5D5E61\"\n  })), _path82 || (_path82 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M182.533 69.9841C182.135 69.3632 181.618 68.8263 181.014 68.4036C180.772 68.2239 180.491 68.1033 180.195 68.0517C179.898 68.0001 179.593 68.0188 179.305 68.1065L179.102 68.174L178.866 68.2686C178.72 68.3347 178.578 68.4091 178.44 68.4915C178.19 68.6453 177.962 68.8341 177.765 69.0521C177.349 69.5083 177.071 70.0725 176.961 70.6798C176.824 71.3873 176.795 72.1114 176.873 72.8277C176.873 73.0168 176.914 73.1856 176.941 73.3883C176.968 73.5909 177.002 73.8138 177.015 74.0232C177.045 74.4436 177.045 74.8657 177.015 75.2862C177.015 75.6982 176.954 76.0967 176.948 76.4682C176.925 76.8056 176.983 77.1435 177.116 77.4543C177.255 77.7815 177.469 78.071 177.742 78.2989C178.014 78.5267 178.337 78.6864 178.683 78.7646L179.467 78.8457C179.492 78.8518 179.514 78.8662 179.53 78.8864C179.545 78.9066 179.554 78.9315 179.554 78.9571C179.554 78.9827 179.545 79.0077 179.53 79.0279C179.514 79.0481 179.492 79.0624 179.467 79.0686L178.683 79.1428C178.235 79.1125 177.8 78.9737 177.416 78.7384C177.033 78.5031 176.712 78.1784 176.482 77.792C176.242 77.3955 176.097 76.9497 176.056 76.4884C176.009 76.0629 175.995 75.6644 175.955 75.2794C175.914 74.8944 175.867 74.5297 175.793 74.165C175.759 73.9826 175.712 73.8003 175.664 73.6247C175.617 73.449 175.563 73.2194 175.516 73.0168C175.327 72.1615 175.268 71.2826 175.34 70.4096C175.402 69.4235 175.806 68.4898 176.482 67.7688C176.831 67.414 177.243 67.1276 177.697 66.9245C177.917 66.8292 178.143 66.748 178.373 66.6813L178.704 66.5935L179.082 66.5395C179.578 66.4785 180.082 66.5361 180.551 66.7075C181.021 66.8789 181.443 67.1593 181.784 67.5256C182.383 68.1604 182.806 68.9402 183.013 69.7883C183.023 69.8404 183.015 69.8942 182.99 69.9413C182.966 69.9883 182.926 70.0257 182.878 70.0475C182.83 70.0693 182.775 70.0743 182.724 70.0616C182.672 70.0488 182.627 70.0192 182.594 69.9774L182.533 69.9841Z\",\n    fill: \"#181712\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    }\n  }, _path83 || (_path83 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M193.198 96.2513C193.198 96.2513 195.899 100.554 210.509 98.2776L201.627 92.5162L192.421 94.4277L193.198 96.2513Z\",\n    fill: \"#CDCFCF\"\n  }))), _path84 || (_path84 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M193.198 95.6637C193.198 95.6637 195.899 99.9661 210.509 97.6899L201.627 91.9286L192.421 93.84L193.198 95.6637Z\",\n    fill: \"#D0A98C\"\n  })), _path85 || (_path85 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M196.683 95.7852C199.298 96.1011 201.932 96.2297 204.565 96.1702L201.188 92.7323L197.365 95.0085L196.683 95.7852Z\",\n    fill: \"white\"\n  })), _path86 || (_path86 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199.027 79.6696C199.027 79.6696 194.353 75.374 188.896 77.2719C183.438 79.1698 180.163 86.694 173.881 87.106C173.881 87.106 169.917 86.8561 172.395 83.5533C172.395 83.5533 173.267 82.8374 174.699 84.195L175.057 84.1544C175.057 84.1544 174.766 82.709 172.78 81.6554C172.284 81.402 171.739 81.2576 171.182 81.232C170.625 81.2063 170.069 81.3 169.552 81.5068C169.126 81.694 168.728 81.9395 168.37 82.2362C167.524 82.8966 166.85 83.7522 166.407 84.7296C165.963 85.7071 165.763 86.7774 165.823 87.849C166.019 91.5773 168.187 93.2524 178.596 94.8666C180.283 95.3184 182.076 95.1482 183.648 94.3871C184.917 94.0748 186.253 94.1717 187.464 94.664C189.294 95.5015 193.151 97.0888 196.65 95.7784C198.053 95.3099 199.363 94.5989 200.52 93.6779C200.664 93.5435 200.853 93.4688 201.05 93.4688C201.247 93.4688 201.436 93.5435 201.58 93.6779C202.931 95.0287 206.646 98.2437 209.935 98.4058C214.076 98.5679 214.987 98.5274 216.061 98.0479C217.135 97.5683 219.438 98.9259 220.235 99.0002C221.032 99.0745 232.562 106.342 236.344 94.1304C236.344 94.1304 236.621 91.942 235.507 90.7128C234.392 89.4835 233.798 89.6794 233.798 89.6794C233.798 89.6794 232.96 89.5578 232.805 90.1995C232.65 90.8411 233.643 91.037 233.643 91.037C233.643 91.037 234.716 92.1514 232.488 93.6238C230.259 95.0963 228.192 92.8268 228.192 92.8268C226.856 91.3686 225.743 89.7208 224.889 87.9368C224.069 86.1923 222.951 84.6039 221.586 83.2426C221.586 83.2426 213.67 76.0426 206.511 81.0948C206.511 81.0948 205.876 79.109 204.485 79.109C204.368 79.235 204.291 79.3921 204.262 79.5611C204.233 79.7302 204.254 79.904 204.323 80.0614C204.559 80.6152 204.599 83.837 202.614 83.6006C200.628 83.3642 201.087 81.3717 201.087 81.3717C201.177 80.8897 201.389 80.4386 201.702 80.0614C201.658 79.7136 201.551 79.377 201.384 79.0685C201.148 78.7105 200.236 78.3931 199 79.6764\",\n    fill: \"#231F20\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    }\n  }, _path87 || (_path87 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M184.114 94.0831C185.944 94.9207 192.509 97.798 196.015 96.4809C198.149 95.6771 200.02 94.8396 200.594 94.333C200.738 94.1987 200.927 94.1239 201.124 94.1239C201.321 94.1239 201.511 94.1987 201.654 94.333C203.005 95.6839 206.7 98.1424 209.989 98.2708C212.241 98.3569 214.495 98.323 216.743 98.1694C222.241 98.1154 225.794 97.8115 225.794 97.8115L201.533 89.7807L190.098 91.2126L180.838 93.0835C181.977 93.2385 183.087 93.5665 184.127 94.0561\",\n    fill: \"#CDCFCF\"\n  }))), _path88 || (_path88 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M200.54 85.843C200.54 85.843 197.473 79.8723 193.32 79.7642C189.166 79.6561 179.514 89.9496 172.679 88.8959C172.679 88.8959 172.773 90.9222 181.506 87.3087C190.24 83.6952 190.544 81.6689 192.725 81.8513C198 82.297 198.021 85.9376 200.533 85.8295\",\n    fill: \"#5D5E61\"\n  })), _path89 || (_path89 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.201 86.3226C204.201 86.3226 214.616 81.4258 221.228 88.592C227.84 95.7582 229.185 95.6029 229.185 95.6029C229.185 95.6029 223.025 87.6802 220.404 85.1811C217.783 82.6821 209.678 80.4194 204.228 86.3226\",\n    fill: \"#5D5E61\"\n  })), _path90 || (_path90 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M201.019 7.92642C201.019 7.92642 210.34 5.83261 215.743 10.9658\",\n    stroke: \"#231F20\",\n    strokeWidth: 2.9379,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"square\"\n  })), _path91 || (_path91 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.266 72.3278C227.604 72.2465 227.954 72.2214 228.3 72.2535C228.65 72.2705 228.996 72.3272 229.333 72.4224C230.081 72.5985 230.743 73.0311 231.204 73.6449L231.38 73.9016L231.508 74.1852C231.592 74.3748 231.651 74.5746 231.684 74.7796C231.736 75.1583 231.736 75.5424 231.684 75.9211C231.658 76.6279 231.556 77.3299 231.38 78.0149C231.316 78.2369 231.22 78.4484 231.096 78.643C230.972 78.8263 230.827 78.9941 230.664 79.1428L230.515 79.2914L230.454 79.359C230.413 79.4327 230.383 79.5125 230.367 79.5954C230.304 79.8543 230.27 80.1193 230.265 80.3856V80.8584C230.261 81.0604 230.239 81.2616 230.198 81.4595C230.069 82.2072 229.742 82.9067 229.252 83.4858C229 83.785 228.677 84.017 228.313 84.1612C227.966 84.2697 227.594 84.2697 227.246 84.1612C227.552 84.0826 227.837 83.9347 228.077 83.7289C228.278 83.5358 228.44 83.3067 228.556 83.0535C228.769 82.5153 228.883 81.9435 228.894 81.365C228.904 81.2391 228.904 81.1126 228.894 80.9867V80.7638V80.4734C228.865 80.0824 228.89 79.6891 228.968 79.3049C229.02 79.0672 229.109 78.8392 229.232 78.6295C229.274 78.5583 229.321 78.4906 229.374 78.4269L229.475 78.3121L229.678 78.1162C229.759 78.0462 229.831 77.9669 229.894 77.8798C229.945 77.7949 229.986 77.7042 230.015 77.6096C230.183 77.0247 230.309 76.4289 230.394 75.8265C230.421 75.6814 230.439 75.5348 230.448 75.3875C230.46 75.2617 230.46 75.135 230.448 75.0092C230.45 74.886 230.434 74.7632 230.4 74.6445L230.353 74.4689L230.272 74.3001C230.154 74.0613 229.997 73.8443 229.806 73.6584C229.583 73.4639 229.341 73.2919 229.083 73.1451C228.532 72.8289 227.935 72.601 227.314 72.4697L227.266 72.3278Z\",\n    fill: \"#181712\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_34_51345\",\n    x1: 183.101,\n    y1: 80.6875,\n    x2: 230.529,\n    y2: 80.6875,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#FAD9AB\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.13,\n    stopColor: \"#FAD9AB\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#E3C59D\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.acea40e4f0c2699dc741778272ca7bd7.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__17eXA\",\"red\":\"button_red__+1R5F\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport styles from './button.module.scss';\n\ntype ButtonProps = JSX.IntrinsicElements['button'] & {\n  outlined?: boolean;\n};\n\nconst Button: FC<ButtonProps> = ({\n  outlined,\n  children,\n  ...rest\n}: ButtonProps) => {\n  \n  return (\n    <button\n      className={cn(styles.btn, outlined && styles.red)}\n      {...rest}\n    >\n      <span className={styles.btnText}>{children}</span>\n    </button>\n  );\n};\n\nexport default Button;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from 'reselect';\r\nimport { RootState } from '../root-reducer';\r\n\r\nexport const getIsPlayedState = (state: RootState) => state.game.isPlayed;\r\nexport const getNameState = (state: RootState) => state.game.name;\r\nexport const getIsSelectedState = (state: RootState) => state.game.isSelected;\r\nexport const getIsWinnerState = (state: RootState) => state.game.isWinner;\r\nexport const getWinnersState = (state: RootState) => state.game.winners;\r\nexport const getIsWinnersVisibleState = (state: RootState) => state.game.isWinnersVisible;\r\n\r\nexport const getIsPlayed = createSelector(getIsPlayedState, state => state);\r\nexport const getName = createSelector(getNameState, state => state);\r\nexport const getIsSelected = createSelector(getIsSelectedState, state => state);\r\nexport const getIsWinner = createSelector(getIsWinnerState, state => state);\r\nexport const getWinners = createSelector(getWinnersState, state => state);\r\nexport const getIsWinnersVisible = createSelector(getIsWinnersVisibleState, state => state);\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { AppDispatch } from './index';\r\nimport type { RootState } from './root-reducer';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["outlined","children","rest","className","cn","styles","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getIsPlayed","state","game","isPlayed","getName","getIsSelected","isSelected","getIsWinner","isWinner","getWinners","winners","getIsWinnersVisible","isWinnersVisible","useAppDispatch","useDispatch","useAppSelector","useSelector","hasOwn","hasOwnProperty","classNames","classes","arg","argType","inner","toString","prototype","includes","call","module","exports","default","_arrayLikeToArray","arr","len","arr2","_slicedToArray","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","done","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","slice","constructor","from","test"],"sourceRoot":""}