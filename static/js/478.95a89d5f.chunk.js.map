{"version":3,"file":"static/js/478.95a89d5f.chunk.js","mappings":"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","sources":["webpack://main/./src/app/components/header-pt/header.module.scss?bbb5","app/components/header-pt/index.tsx","webpack://main/./src/app/components/layout-pt/layout.module.scss?f9cb","webpack://main/./src/app/components/footer-pt/footer.module.scss?aa90","webpack://main/./src/app/game/components/winners-pt/winners.module.scss?1b38","app/game/components/winners-pt/index.tsx","app/components/footer-pt/index.tsx","app/components/layout-pt/index.tsx","webpack://main/./src/app/game-pt/components/game/game.module.scss?4221","webpack://main/./src/app/game-pt/components/result/result.module.scss?e1ad","app/game-pt/components/result/index.tsx","app/game-pt/components/game/index.tsx","app/game-pt/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"headerWrapper\":\"header_headerWrapper__8rb6S\",\"btn\":\"header_btn__WcW2n\",\"logo\":\"header_logo__z+QAI\",\"played\":\"header_played__yBzgy\",\"selected\":\"header_selected__2MrQg\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport logo from '../../common/assets/logo.svg';\nimport styles from './header.module.scss';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { actions } from '../../store/game/slice';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { GAME_ROUTE_PT, START_ROUTE_PT } from '../../common/components/constants';\nimport { getIsPlayed, getIsSelected } from '../../store/game/selectors';\nimport Button from '../../common/components/button';\n\nconst HeaderPt: FC<any> = () => {\n  const dispatch = useAppDispatch();\n  const location = useLocation();\n  const isPlayed = useAppSelector(getIsPlayed);\n  const isSelected = useAppSelector(getIsSelected);\n  const history = useHistory();\n\n  const handleStart = () => {\n    dispatch(actions.setIsPlayed(true));\n  };\n\n  const handleRestart = () => {\n    dispatch(actions.reset());\n    history.push('/pt/start');\n  };\n\n  return (\n    <div \n      className={cn(styles.headerWrapper, isPlayed && styles.played, isSelected && styles.selected)}\n    >\n      <img className={cn(styles.logo)} src={logo} alt=\"logo\" />\n\n      {(location.pathname === START_ROUTE_PT) &&\n        (<h3>\n          <span onClick={() => history.push('/en/start')}>EN</span> | \n          <span onClick={() => history.push('/pt/start')}>PT</span>\n          </h3>)\n      }\n\n      {(location.pathname === GAME_ROUTE_PT) && (\n        <div className={styles.btn}>\n          <Button\n            onClick={isPlayed ? handleRestart : handleStart}>\n              {isPlayed ? 'De volta para casa' : 'Participar'}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HeaderPt;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"layout_wrapper__ZTWCf\",\"main\":\"layout_main__a3ipH\"};","// extracted by mini-css-extract-plugin\nexport default {\"winners\":\"footer_winners__5CbfX\"};","// extracted by mini-css-extract-plugin\nexport default {\"winners\":\"winners_winners__A2Uhs\",\"visible\":\"winners_visible__AuX6k\",\"contentHolder\":\"winners_contentHolder__vA+ty\",\"button\":\"winners_button__5LaPa\",\"close\":\"winners_close__ra9k2\",\"empty\":\"winners_empty__Rhal7\"};","import React, { FC } from 'react';\nimport styles from './winners.module.scss';\nimport cn from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport { getIsWinnersVisible, getWinners } from '../../../store/game/selectors';\nimport { actions } from '../../../store/game/slice';\nimport close from '../../../common/assets/close.svg';\n\nconst Winners: FC<any> = () => {\n  const dispatch = useAppDispatch();\n  const isWinnersVisible = useAppSelector(getIsWinnersVisible);\n  const winners = useAppSelector(getWinners);\n\n  const handleClick = () => {\n    dispatch(actions.setIsWinnersVisible(false));\n  };\n\n  return (\n    <div \n      className={cn(styles.winners, isWinnersVisible && styles.visible)} \n      onClick={() => handleClick()}\n    >\n      <div className={cn(styles.contentHolder)}>\n        <button className={cn(styles.button)}>nossos sortudos vencedores</button>\n        <img className={cn(styles.close)} src={close} alt=\"Close button\" />\n        <ul>\n          {winners.length ? (\n            winners.map((winner, i) => {\n              return (\n                <li key={i}>\n                  <p>{ winner.name }</p>\n                  <span>{ new Date(winner.date).toLocaleDateString() }</span>\n                </li>\n              )\n            })\n          ):(\n            <p className={styles.empty}>Até agora, ninguém tem o status de vencedor, mas você sempre pode se tornar um deles!</p>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Winners;\n","import React, { FC } from 'react';\nimport cn from 'classnames';\nimport styles from './footer.module.scss';\nimport { useAppDispatch } from '../../store/hooks';\nimport { actions } from '../../store/game/slice';\nimport WinnersPt from '../../game/components/winners-pt';\nimport Button from '../../common/components/button';\n\nconst FooterPt: FC<any> = () => {\n  const dispatch = useAppDispatch();\n  \n  const handleClick = () => {\n    dispatch(actions.setIsWinnersVisible(true));\n  }\n\n  return (\n    <div className={cn(styles.winners)}>\n      <Button outlined={true} onClick={() => handleClick()}>nossos sortudos vencedores</Button>\n      <WinnersPt />\n    </div>\n  );\n};\n\nexport default FooterPt;\n","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport HeaderPt from '../header-pt/';\nimport styles from './layout.module.scss';\nimport FooterPt from '../footer-pt';\n\ntype LayoutProps = JSX.IntrinsicElements['div'];\n\nconst LayoutPt: FC<LayoutProps> = ({children }: LayoutProps) => {\n  return (\n    <div className={cn(styles.wrapper)}>\n      <HeaderPt />\n      <main className={cn(styles.main)}>\n        <div className={cn(styles.container)}>{children}</div>\n      </main>\n      <FooterPt />\n    </div>\n  );\n};\n\nexport default LayoutPt;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"game_wrapper__VfEQ+\",\"container\":\"game_container__ScUSK\",\"played\":\"game_played__m1sFD\",\"mainScale\":\"game_mainScale__xl1Aa\",\"pizza\":\"game_pizza__iaSU9\",\"name\":\"game_name__aTgN5\",\"imageHolder\":\"game_imageHolder__6iJNE\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"result_name__3fI8F\",\"message\":\"result_message__u6Jtl\",\"imageHolder\":\"result_imageHolder__n3F+v\",\"content\":\"result_content__XoeXg\",\"messageVisible\":\"result_messageVisible__Qonlw\",\"setVisible\":\"result_setVisible__OjQsN\",\"textGreen\":\"result_textGreen__0T5kh\",\"textRed\":\"result_textRed__0SrKv\"};","import React, { FC, useEffect, useState } from 'react';\nimport PizzaSvg from '../../../common/components/pizza';\nimport styles from './result.module.scss';\nimport cn from 'classnames';\nimport { useAppSelector } from '../../../store/hooks';\nimport { getIsWinner, getName } from '../../../store/game/selectors';\n\nconst Result: FC<any> = () => {\n  const name = useAppSelector(getName);\n  const isWinner = useAppSelector(getIsWinner);\n  const [isMessageVisible, setIsMessageVisible] = useState<boolean>(false);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setIsMessageVisible(true);\n    }, 1000);\n    return () => clearTimeout(timeoutId);\n  }, []);\n  \n  return (\n    <div className={cn(styles.message, isMessageVisible && styles.messageVisible)}>\n        <div className={cn(styles.content)}>\n          {isWinner ? (\n            <>\n              <h3 className={cn(styles.textGreen)}>Você ganhou</h3>\n              <h4>{ name }</h4>\n              <h3 className={cn(styles.textGreen)}>levas a pizza grátis</h3>\n            </>\n          ) : (\n            <>\n              <h4>{ name }</h4>\n              <h3 className={cn(styles.textRed)}>Oops!<br /> Tente da próxima vez</h3>\n            </>\n          )}\n        </div>\n        <div className={cn(styles.imageHolder)}>\n          <PizzaSvg large={true} />\n        </div>\n    </div>\n  );\n};\n\nexport default Result;\n","import React, { FC, useEffect, useState } from 'react';\nimport styles from './game.module.scss';\nimport cn from 'classnames';\nimport { getIsPlayed, getIsSelected, getName } from '../../../store/game/selectors';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport PizzaSvg from '../../../common/components/pizza';\nimport { actions } from '../../../store/game/slice';\nimport { Pizza, WinGame } from '../../../common/components/types';\nimport Result from '../result';\n\nconst Pizzas: Pizza[] = [\n  { id: 1, name: 'Your name' },\n  { id: 2, name: 'Santiago' },\n  { id: 3, name: 'Maria' },\n  { id: 4, name: 'Pedro' },\n  { id: 5, name: 'Francisco' },\n  { id: 6, name: 'Mariana' },\n  { id: 7, name: 'Margarida' },\n  { id: 8, name: 'Matilde' },\n  { id: 9, name: 'João' }\n];\n\nconst Game: FC = () => {\n  const [pizzas, setPizzas] = useState(Pizzas);\n  const dispatch = useAppDispatch();\n  const isPlayed = useAppSelector(getIsPlayed);\n  const isSelected = useAppSelector(getIsSelected);\n  const name = useAppSelector(getName);\n\n  useEffect(() => {\n    const existingName = pizzas.find((pizza) => pizza.name.toLowerCase() === name.toLowerCase());\n    if (existingName) {\n      setPizzas(\n        pizzas.map((pizza) => {\n          if (pizza.name.toLowerCase() === existingName.name.toLowerCase()) {\n            return { ...pizza, name: 'Antonio' };\n          }\n          return pizza;\n        })\n      );\n    }\n  }, [name, pizzas]);\n  \n  const handleSelect = () => {\n    if(isPlayed) {\n      const randomNumber = Math.floor(Math.random() * 100);\n\n      if(randomNumber <= 11) {\n        addWinner(name);\n        dispatch(actions.setIsWinner(true));\n      } else {\n        const randomName: string = pizzas[Math.floor(Math.random() * pizzas.length)].name;\n        (randomName === name) ?\n          dispatch(actions.setName(pizzas[8].name)) : \n          dispatch(actions.setName(randomName));\n      }\n      dispatch(actions.setIsSelected(true));\n    }\n  };\n\n  const addWinner = (name: string) => {\n    const existingWinners: string | null = localStorage.getItem('winners');\n    const newWinGame: WinGame = {date: new Date(), name}\n    let winGames: WinGame[];\n    \n    if(existingWinners) {\n      const data: WinGame[] = JSON.parse(existingWinners);\n      winGames = [...data, newWinGame];\n    } else {\n      winGames = [newWinGame];\n      \n    }\n    localStorage.setItem('winners', JSON.stringify(winGames));\n    dispatch(actions.setWinners(winGames));\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      {isSelected ? (\n        <Result />\n      ):(\n        <div className={cn(styles.container, isPlayed && styles.played)}>\n          {pizzas.map((pizza, i) => (\n            <div\n              key={pizza.id} \n              className={cn(styles.pizza)}\n              onClick={() => handleSelect()}  \n            >\n              <div \n                className={cn(styles.imageHolder)}\n              >\n                <PizzaSvg />\n                {!isPlayed && (\n                  <h3 className={cn(styles.name)}>{ i === 0 ? name : pizza.name }</h3>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n","import React, { FC } from 'react';\nimport LayoutPt from '../components/layout-pt';\nimport Game from './components/game';\n\nconst GameHolder: FC = () => {\n  return (\n    <LayoutPt>\n        <Game />\n    </LayoutPt>\n  );\n};\n\nexport default GameHolder;\n"],"names":["dispatch","useAppDispatch","location","useLocation","isPlayed","useAppSelector","getIsPlayed","isSelected","getIsSelected","history","useHistory","className","cn","styles","src","logo","alt","pathname","START_ROUTE_PT","onClick","push","GAME_ROUTE_PT","actions","isWinnersVisible","getIsWinnersVisible","winners","getWinners","close","length","map","winner","i","name","Date","date","toLocaleDateString","outlined","children","getName","isWinner","getIsWinner","useState","isMessageVisible","setIsMessageVisible","useEffect","timeoutId","setTimeout","clearTimeout","large","Pizzas","id","pizzas","setPizzas","existingName","find","pizza","toLowerCase","addWinner","winGames","existingWinners","localStorage","getItem","newWinGame","data","JSON","parse","setItem","stringify","Math","floor","random","randomName","handleSelect"],"sourceRoot":""}